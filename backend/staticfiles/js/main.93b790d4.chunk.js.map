{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","constants/adminConstants.js","constants/sellerConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/adminReducers.js","reducers/sellerReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/VerifiedSellers.js","actions/adminActions.js","screens/UnverifiedSellers.js","screens/DeliverProducts.js","screens/ReturnProducts.js","screens/AddNewStocks.js","actions/sellerActions.js","screens/AddOldStocks.js","screens/Admins.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_ADD_REQUEST","CART_UPDATE","CART_REMOVE_ITEM","CART_REMOVE_SUCCESS","CART_UPDATE_SUCCESS","CART_GET_REQUEST","CART_REMOVE_REQUEST","CART_SAVE_SHIPPING_ADDRESS","CART_GET_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_GET_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_CANCEL_REQUEST","ORDER_CANCEL_SUCCESS","ORDER_CANCEL_FAIL","ORDER_RETURN_REQUEST","ORDER_RETURN_SUCCESS","ORDER_RETURN_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","VERIFIED_SELLERS_SUCCESS","VERIFIED_SELLERS_REQUEST","VERIFIED_SELLERS_FAIL","VERIFIED_SELLERS_RESET","UNVERIFIED_SELLERS_SUCCESS","UNVERIFIED_SELLERS_REQUEST","UNVERIFIED_SELLERS_FAIL","UNVERIFIED_SELLERS_RESET","ADMINS_LIST_SUCCESS","ADMINS_LIST_REQUEST","ADMINS_LIST_FAIL","ADMINS_LIST_RESET","DELIVER_PRODUCTS_SUCCESS","DELIVER_PRODUCTS_REQUEST","DELIVER_PRODUCTS_FAIL","DELIVER_PRODUCTS_RESET","RETURN_PRODUCTS_SUCCESS","RETURN_PRODUCTS_REQUEST","RETURN_PRODUCTS_FAIL","RETURN_PRODUCTS_RESET","ADDSTOCKS_NEW_SUCCESS","ADDSTOCKS_NEW_REQUEST","ADDSTOCKS_NEW_FAIL","ADDSTOCKS_NEW_RESET","ADDSTOCKS_OLD_SUCCESS","ADDSTOCKS_OLD_REQUEST","ADDSTOCKS_OLD_FAIL","ADDSTOCKS_OLD_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","console","log","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","item","existItem","find","x","stockId","map","filter","shipping","shippingAddress","fetching","payment","paymentMethod","getting","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cancelOrder","wrong","returnOrder","succeed","mistake","verifiedSellers","unverifiedSellers","adminsList","returnProducts","deliverProducts","addNewStocks","addOldStocks","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","addNewstocks","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Row","Col","sm","Control","size","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","axios","get","role","data","response","message","Header","useSelector","useDispatch","logoutHandler","removeItem","Navbar","bg","expand","collapseOnSelect","Container","fluid","Toggle","aria-controls","Collapse","Nav","to","Brand","Link","NavDropdown","title","Item","onClick","Footer","Rating","text","color","style","Product","Card","Img","src","productId","image","Body","Title","as","Text","rating","votes","price","Loader","Spinner","animation","height","width","margin","display","Message","children","show","setShow","Alert","onClose","dismissible","Paginate","isAdmin","split","Pagination","Array","keys","active","listProducts","detail","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","Caption","HomeScreen","search","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","details","availableQuantity","xs","disabled","reviews","length","review","buyerId","reviewedAt","substring","ratingId","userId","post","createProductReview","Group","controlId","Label","row","addToCart","put","information","getCart","CartScreen","Number","setFetch","removeFromCartHandler","delete","removeFromCart","rounded","quantity","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","setRole","redirect","setItem","stringify","login","placeholder","custom","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","phone","setPhone","address","setAddress","company","setCompany","submitHandler","register","Tabs","defaultActiveKey","transition","Tab","eventKey","onSelect","required","getOrderDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","sellerId","adminId","updateUserProfile","Table","striped","responsive","orderId","orderedAt","totalAmount","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","PaymentScreen","paymentmethod","setPaymentMethod","Check","label","PlaceOrderScreen","itemsPrice","shippingPrice","totalPrice","createOrder","OrderScreen","setSdkReady","cancelorder","returnorder","successPay","successDeliver","items","amount","paid","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","cancelOrderHandler","orderedItemId","returnOrderHandler","href","status","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","_id","deleteHandler","confirm","deleteProduct","bordered","hover","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","errorUpdate","loadingUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","OrderListScreen","VerifiedSellers","sid","UnverifiedSellers","DeliverProducts","oid","ReturnProducts","AddOldStocks","Name","Category","Details","setDetails","Price","Quantity","setQuantity","addNewParticularStock","StockId","setStockId","skid","dateOfAddition","totalQuantity","Admins","addAdmin","aid","App","path","component","exact","AddNewStocks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"gLAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAGpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBACvBC,EAAwB,wBAGxBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QClCnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAc,cACdC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAqB,sBACrBC,EAAmB,mBACnBC,EAAqB,sBACrBC,EAA6B,6BAC7BC,EAA4B,4BAC5BC,EAA2B,2BAC3BC,EAA0B,0BAC1BC,EAAmB,mBCZnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAElBC,EAAc,cAEdC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAGlBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBClCpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAsB,uBACtBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAsB,uBACtBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAGtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCrCtBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAyB,yBAEzBC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAA2B,2BAE3BC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAyB,yBAEzBC,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAwB,wBCvBxBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBC2C7BC,GAAUC,0BAAgB,CAC5BC,YCjB8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAK9H,EACD,MAAO,CAAE+H,SAAS,EAAMH,SAAU,IAEtC,KAAK3H,EACD,MAAO,CACH8H,SAAS,EACTH,SAAUC,EAAOG,QACjBC,KAAMJ,EAAOG,QAAQC,KACrBC,MAAOL,EAAOG,QAAQE,OAG9B,KAAKhI,EACD,MAAO,CAAE6H,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDCfS,eCKiC,WAAoC,IAAnCT,EAAkC,uDAA1B,CAACU,QAAQ,IAAMR,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAK3H,EACD,OAAO,aAAE4H,SAAS,GAASJ,GAE/B,KAAKvH,EAED,OADAkI,QAAQC,IAAIV,EAAOG,SACZ,CAAED,SAAS,EAAOM,QAASR,EAAOG,SAE7C,KAAK3H,EAED,OADAiI,QAAQC,IAAIV,EAAOG,SACZ,CAAED,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK1H,EACD,MAAO,CAACyH,SAAQ,EAAKM,QAAQ,IAEjC,QACI,OAAOV,IDpBfa,cCyBgC,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKvH,EACD,MAAO,CAAEwH,SAAS,GAEtB,KAAKvH,EACD,MAAO,CAAEuH,SAAS,EAAOU,SAAS,GAEtC,KAAKhI,EACD,MAAO,CAAEsH,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IDpCfe,cC0CgC,WAAyB,IAAxBf,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKpH,EACD,MAAO,CAAEqH,SAAS,GAEtB,KAAKpH,EACD,MAAO,CAAEoH,SAAS,EAAOU,SAAS,EAAMJ,QAASR,EAAOG,SAE5D,KAAKpH,EACD,MAAO,CAAEmH,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKnH,EACD,MAAO,GAEX,QACI,OAAO8G,IDxDfgB,cC6DgC,WAAsC,IAArChB,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKhH,EACD,MAAO,CAAEiH,SAAS,GAEtB,KAAKhH,EACD,MAAO,CAAEgH,SAAS,EAAOU,SAAS,EAAMJ,QAASR,EAAOG,SAE5D,KAAKhH,EACD,MAAO,CAAE+G,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK/G,EACD,MAAO,CAAEoH,QAAS,IAEtB,QACI,OAAOV,ID3EfiB,oBCiFsC,WAAyB,IAAxBjB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAK5G,EACD,MAAO,CAAE6G,SAAS,GAEtB,KAAK5G,EACD,MAAO,CAAE4G,SAAS,EAAOU,SAAS,GAEtC,KAAKrH,EACD,MAAO,CAAE2G,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK3G,EACD,MAAO,GAEX,QACI,OAAOsG,ID/FfkB,gBCoGkC,WAAuC,IAAtClB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAKxG,EACD,MAAO,CAAEyG,SAAS,EAAMH,SAAU,IAEtC,KAAKrG,EACD,MAAO,CAAEwG,SAAS,EAAOH,SAAUC,EAAOG,SAE9C,KAAKxG,EACD,MAAO,CAAEuG,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,ID9GfmB,KExCuB,WAAwC,IAAvCnB,EAAsC,uDAA9B,CAAEoB,UAAW,IAAMlB,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKpG,EAIL,KAAKK,EACD,MAAO,CAACgG,SAAQ,EAAKgB,UAAU,IAGnC,KAAKpH,EACD,OAAO,2BACAgG,GADP,IAEII,SAAQ,EACRgB,UAAUlB,EAAOG,UAIzB,KAAKlG,EACD,OAAO,2BACA6F,GADP,IAEII,SAAQ,EACRgB,UAAUpB,EAAMoB,YAGxB,KAAKtH,EACD,IAAMuH,EAAOnB,EAAOG,QACdiB,EAAYtB,EAAMoB,UAAUG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAQA,UAAYJ,EAAKI,QAAQA,WAE/E,OAAIH,EACO,2BACAtB,GADP,IAEII,SAAQ,EACRgB,UAAWpB,EAAMoB,UAAUM,KAAI,SAAAF,GAAC,OAC5BA,EAAEC,QAAQA,UAAYH,EAAUG,QAAQA,QAAUJ,EAAOG,OAI1D,2BACAxB,GADP,IAEII,SAAQ,EACRgB,UAAU,GAAD,mBAAMpB,EAAMoB,WAAZ,CAAuBC,MAI5C,KAAKhH,EACD,MAAO,CACH+F,SAAQ,EACRgB,UAAUpB,EAAMoB,WAGxB,KAAKnH,EACD,OAAO,2BACA+F,GADP,IAEIoB,UAAWpB,EAAMoB,UAAUO,QAAO,SAAAH,GAAC,OAAIA,EAAEC,QAAQA,UAAYvB,EAAOG,WACpED,SAAQ,IAEhB,KAAKlG,EACD,OAAO,2BACA8F,GADP,IAEIoB,UAAUpB,EAAMoB,UAChBhB,SAAQ,IAIhB,KAAK1F,EACD,OAAO,2BACAsF,GADP,IAEIoB,UAAW,KAGnB,QACI,OAAOpB,IF/Bf4B,SEmC0B,WAAyC,IAAxC5B,EAAuC,uDAAhC,CAAC6B,gBAAiB,IAAI3B,EAAU,uCAChE,OAAQA,EAAOC,MACV,KAAK7F,EACJ,OAAO,2BACA0F,GADP,IAEI8B,UAAS,EACTD,gBAAiB3B,EAAOG,UAE5B,KAAK9F,EACD,OAAO,2BACAyF,GADP,IAEI8B,UAAS,EACTD,gBAAgB7B,EAAM6B,kBAE9B,QACI,OAAO7B,IFjDnB+B,QEqD0B,WAAuC,IAAtC/B,EAAqC,uDAA9B,CAACgC,cAAe,IAAI9B,EAAU,uCAC9D,OAAQA,EAAOC,MACV,KAAK3F,EACJ,OAAO,2BACAwF,GADP,IAEIiC,SAAQ,EACRD,cAAe9B,EAAOG,UAE1B,KAAK5F,EACD,OAAO,2BACAuF,GADP,IAEIiC,SAAQ,EACRD,cAAchC,EAAMgC,gBAE5B,QACI,OAAOhC,IFnEnBkC,UGzB4B,WAAyB,IAAxBlC,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKxF,EACD,MAAO,CAAEyF,SAAS,GAEtB,KAAKxF,EACD,MAAO,CAAEwF,SAAS,EAAO+B,SAAUjC,EAAOG,SAE9C,KAAKxF,EACD,MAAO,CAAEuF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKvF,EACD,MAAO,GAEX,QACI,OAAOkF,IHWfoC,aGN+B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKpF,GACD,MAAO,CAAEqF,SAAS,GAEtB,KAAKpF,GACD,MAAO,CAAEoF,SAAS,EAAO+B,SAAUjC,EAAOG,SAE9C,KAAKpF,GACD,MAAO,CAAEmF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKvF,EACD,MAAO,GAEX,QACI,OAAOkF,IHRfqC,YGc8B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEsC,KAAM,IAAMpC,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKjF,GACD,OAAO,2BAAK8E,GAAZ,IAAmBI,SAAS,IAEhC,KAAKjF,GACD,MAAO,CAAEiF,SAAS,EAAOkC,KAAMpC,EAAOG,SAE1C,KAAKjF,GACD,MAAO,CAAEgF,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKhF,GACD,MAAO,CAAEiH,KAAM,IAGnB,QACI,OAAOtC,IH7BfuC,kBGkCoC,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAK7E,GACD,MAAO,CAAE8E,SAAS,GAEtB,KAAK7E,GACD,MAAO,CAAE6E,SAAS,EAAOU,SAAS,EAAMqB,SAAUjC,EAAOG,SAE7D,KAAK7E,GACD,MAAO,CAAE4E,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAK5E,GACD,MAAO,GAEX,QACI,OAAOuE,IHhDfwC,SGqD2B,WAAoC,IAAnCxC,EAAkC,uDAA1B,CAAEyC,MAAO,IAAMvC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKzE,GACD,MAAO,CAAE0E,SAAS,GAEtB,KAAKzE,GACD,MAAO,CAAEyE,SAAS,EAAOqC,MAAOvC,EAAOG,SAE3C,KAAKzE,GACD,MAAO,CAAEwE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKxE,GACD,MAAO,CAAE4G,MAAO,IAEpB,QACI,OAAOzC,IHnEf0C,WGwE6B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACrD,OAAQA,EAAOC,MACX,KAAKrE,GACD,MAAO,CAAEsE,SAAS,GAEtB,KAAKrE,GACD,MAAO,CAAEqE,SAAS,EAAOU,SAAS,GAEtC,KAAK9E,GACD,MAAO,CAAEoE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,QACI,OAAOL,IHnFf2C,WGwF6B,WAAmC,IAAlC3C,EAAiC,uDAAzB,CAAEsC,KAAM,IAAMpC,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKlE,GACD,MAAO,CAAEmE,SAAS,GAEtB,KAAKlE,GACD,MAAO,CAAEkE,SAAS,EAAOU,SAAS,GAEtC,KAAK3E,GACD,MAAO,CAAEiE,SAAS,EAAOI,MAAON,EAAOG,SAE3C,KAAKjE,GACD,MAAO,CAAEkG,KAAM,IAEnB,QACI,OAAOtC,IHrGf4C,YI9B8B,WAAyB,IAAxB5C,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK9D,GACD,MAAO,CACH+D,SAAS,GAGjB,KAAK9D,GACD,MAAO,CACH8D,SAAS,EACTU,SAAS,EACT+B,MAAO3C,EAAOG,SAGtB,KAAK9D,GACD,MAAO,CACH6D,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK7D,GACD,MAAO,GAGX,QACI,OAAOwD,IJMf8C,aID+B,WAAwD,IAAvD9C,EAAsD,uDAA9C,CAAEI,SAAS,EAAM2C,WAAY,IAAM7C,EAAW,uCACtF,OAAQA,EAAOC,MACX,KAAK1D,GACD,OAAO,2BACAuD,GADP,IAEII,SAAS,IAGjB,KAAK1D,GACD,MAAO,CACH0D,SAAS,EACTyC,MAAO3C,EAAOG,SAGtB,KAAK1D,GACD,MAAO,CACHyD,SAAS,EACTI,MAAON,EAAOG,SAItB,QACI,OAAOL,IJpBfgD,SIyB2B,WAAyB,IAAxBhD,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKjD,GACD,MAAO,CACHkD,SAAS,GAGjB,KAAKjD,GACD,MAAO,CACHiD,SAAS,EACTU,SAAS,GAGjB,KAAK1D,GACD,MAAO,CACHgD,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKhD,GACD,MAAO,GAEX,QACI,OAAO2C,IJ/CfiD,YIgF8B,WAAqC,IAApCjD,EAAmC,uDAA3B,CAAEkD,OAAQ,IAAMhD,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAK7C,GACD,MAAO,CACH8C,SAAS,GAGjB,KAAK7C,GACD,MAAO,CACH6C,SAAS,EACT8C,OAAQhD,EAAOG,SAGvB,KAAK7C,GACD,MAAO,CACH4C,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAK5C,GACD,MAAO,CACHyF,OAAQ,IAGhB,QACI,OAAOlD,IJxGfmD,UI8G4B,WAAqC,IAApCnD,EAAmC,uDAA3B,CAAEkD,OAAQ,IAAMhD,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKzC,GACD,MAAO,CACH0C,SAAS,GAGjB,KAAKzC,GACD,MAAO,CACHyC,SAAS,EACT8C,OAAQhD,EAAOG,SAGvB,KAAKzC,GACD,MAAO,CACHwC,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJhIfoD,aIkD+B,WAAyB,IAAxBpD,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKtC,GACD,MAAO,CACHuC,SAAS,GAGjB,KAAKtC,GACD,MAAO,CACHsC,SAAS,EACTU,SAAS,GAGjB,KAAK/C,GACD,MAAO,CACHqC,SAAS,EACTI,MAAON,EAAOG,SAGtB,KAAKrC,GACD,MAAO,GAEX,QACI,OAAOgC,IJxEfqD,YImI4B,WAAoB,IAAnBrD,EAAkB,uDAAZ,GAAGE,EAAS,uCAC/C,OAAOA,EAAOC,MACV,KAAKvD,GACD,MAAO,CACHkF,UAAS,GAEjB,KAAKjF,GACD,MAAO,CACHiF,UAAS,EACThB,QAAQZ,EAAOG,SAEvB,KAAKvD,GACD,MAAO,CACHgF,UAAS,EACTwB,MAAMpD,EAAOG,SAErB,QACI,OAAOL,IJnJfuD,YIwJ4B,WAAoB,IAAnBvD,EAAkB,uDAAZ,GAAGE,EAAS,uCAC/C,OAAOA,EAAOC,MACV,KAAKpD,GACD,MAAO,CACHkF,SAAQ,GAEhB,KAAKjF,GACD,MAAO,CACHiF,SAAQ,EACRuB,QAAQtD,EAAOG,SAEvB,KAAKpD,GACD,MAAO,CACHgF,SAAQ,EACRwB,QAAQvD,EAAOG,SAEvB,QACI,OAAOL,IJvKf0D,gBKzDkC,WAA0B,IAAzB1D,EAAwB,uDAAhB,GAAKE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAKjC,GACD,MAAO,CAAEkC,SAAS,GAEtB,KAAKnC,GACD,MAAO,CAAEmC,SAAS,EAAOsD,gBAAiBxD,EAAOG,SAErD,KAAKlC,GACD,MAAO,CAAEiC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKjC,GACD,MAAO,CAACsF,gBAAgB,MAC5B,QACI,OAAO1D,IL6Cf2D,kBKzCoC,WAA0B,IAAzB3D,EAAwB,uDAAhB,GAAKE,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAK7B,GACD,MAAO,CAAE8B,SAAS,GAEtB,KAAK/B,GACD,MAAO,CAAE+B,SAAS,EAAOuD,kBAAmBzD,EAAOG,SAEvD,KAAK9B,GACD,MAAO,CAAE6B,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK7B,GACD,MAAO,CAACmF,kBAAkB,MAC9B,QACI,OAAO3D,IL8Bf4D,WK1B6B,WAA0B,IAAzB5D,EAAwB,uDAAhB,GAAKE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAKzB,GACD,MAAO,CAAE0B,SAAS,GAEtB,KAAK3B,GACD,MAAO,CAAE2B,SAAS,EAAOwD,WAAY1D,EAAOG,SAEhD,KAAK1B,GACD,MAAO,CAAEyB,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKzB,GACD,MAAO,CAACgF,WAAW,MACvB,QACI,OAAO5D,ILcf6D,eKOiC,WAA0B,IAAzB7D,EAAwB,uDAAhB,GAAKE,EAAW,uCAC1D,OAAQA,EAAOC,MACX,KAAKjB,GACD,MAAO,CAAEkB,SAAS,GAEtB,KAAKnB,GACD,MAAO,CAAEmB,SAAS,EAAOyD,eAAgB3D,EAAOG,SAEpD,KAAKlB,GACD,MAAO,CAAEiB,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKjB,GACD,MAAO,CAACyE,eAAe,MAC3B,QACI,OAAO7D,ILnBf8D,gBKXkC,WAA0B,IAAzB9D,EAAwB,uDAAhB,GAAKE,EAAW,uCAC3D,OAAQA,EAAOC,MACX,KAAKrB,GACD,MAAO,CAAEsB,SAAS,GAEtB,KAAKvB,GACD,MAAO,CAAEuB,SAAS,EAAO0D,gBAAiB5D,EAAOG,SAErD,KAAKtB,GACD,MAAO,CAAEqB,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKrB,GACD,MAAO,CAAC8E,gBAAgB,MAC5B,QACI,OAAO9D,ILAf+D,aM5E+B,WAA0B,IAAzB/D,EAAwB,uDAAhB,GAAKE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKb,GACD,MAAO,CAAEc,SAAS,GAEtB,KAAKf,GACD,MAAO,CAAEe,SAAS,EAAO2D,aAAc7D,EAAOG,SAElD,KAAKd,GACD,MAAO,CAAEa,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKb,GACD,MAAO,CAACuE,aAAa,MACzB,QACI,OAAO/D,INgEfgE,aM5D+B,WAA0B,IAAzBhE,EAAwB,uDAAhB,GAAKE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAKT,GACD,MAAO,CAAEU,SAAS,GAEtB,KAAKX,GACD,MAAO,CAAEW,SAAS,EAAO4D,aAAc9D,EAAOG,SAElD,KAAKV,GACD,MAAO,CAAES,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKT,GACD,MAAO,CAACoE,aAAa,MACzB,QACI,OAAOhE,MNoDbiE,GAAuBC,aAAaC,QAAQ,aAC9CC,KAAKC,MAAMH,aAAaC,QAAQ,cAAgB,GAE9CG,GAAsBJ,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,KAO7CI,IAJ6BL,aAAaC,QAAQ,oBACpDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAGf,CACjBhD,KAAM,CACFC,UAAW6C,IAEf/B,UAAW,CAAEC,SAAUmC,IACvB1C,SAAU,CACNC,gBAAkB,IAEtB6B,gBAAgB,CAACA,gBAAgB,IACjCC,kBAAkB,CAACA,kBAAkB,IACrCC,WAAY,CAACA,WAAW,IACxBE,gBAAgB,CAACA,gBAAgB,IACjCD,eAAe,CAACA,eAAe,IAC/BE,aAAa,CAACS,aAAa,IAC3BR,aAAa,CAACA,aAAa,MAGzBS,GAAa,CAACC,KAKLC,GAHDC,sBAAY/E,GAAS0E,GAC/BM,8BAAoBC,kBAAe,WAAf,EAAmBL,M,sIO9E5BM,OA1Cf,WACI,MAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KAEIC,EAAUC,eAUd,OACI,+BACA,eAACC,GAAA,EAAD,CAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACEP,EACAE,EAAQM,KAAR,oBAA0BR,EAA1B,YAEAE,EAAQM,KAAKN,EAAQM,KAAKN,EAAQO,SAASC,YAKhBC,QAAM,EAArC,SACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAM,EAAX,SACA,eAACV,GAAA,EAAKW,QAAN,CACI7F,KAAK,OACL8F,KAAK,KACLC,KAAK,IACLC,SAAU,SAACZ,GAAD,OAAOL,EAAWK,EAAEa,OAAOC,QACrCC,UAAU,sBAGd,eAACR,GAAA,EAAD,CAAKC,GAAM,EAAX,SACA,eAACQ,GAAA,EAAD,CACIpG,KAAK,SACL8F,KAAK,KACLO,QAAQ,kBACRF,UAAU,MAJd,8B,gDCuGHG,GAAiB,SAACC,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLxG,KAAMjF,KAHoB,EAQ1B0L,IADazE,EAPa,EAO1BD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZM,SAiBPC,KAAMC,IAAN,qBACLP,EADK,YACCvE,EAAS+E,MAC7BJ,GAnB0B,gBAiBtBK,EAjBsB,EAiBtBA,KAKRR,EAAS,CACLxG,KAAMhF,GACNkF,QAAS8G,IAxBiB,kDA6B9BR,EAAS,CACLxG,KAAM/E,GACNiF,QAAS,KAAM+G,SAASD,KAAKE,UA/BH,0DAAR,yDCuBfC,OAtJf,WAEI,IACQnF,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAEFwE,EAAWa,cAEXC,EAAgB,WAClBd,GDiEoB,SAACA,GACzBzC,aAAawD,WAAW,YACxBf,EAAS,CAAExG,KAAMrF,IACjB6L,EAAS,CAAExG,KAAM9E,KACjBsL,EAAS,CAAExG,KAAM1C,KACjBkJ,EAAS,CAAExG,KAAMtE,KACjB8K,EAAS,CAAExG,KAAM/B,KACjBuI,EAAS,CAAExG,KAAM3B,KACjBmI,EAAS,CAAExG,KAAMvB,KACjB+H,EAAS,CAAExG,KAAMf,KACjBuH,EAAS,CAAExG,KAAMnB,SCvEjB,OACI,kCACI,eAAC2I,GAAA,EAAD,CAAQC,GAAG,OAAOpB,QAAQ,OAAOqB,OAAO,KAAKC,kBAAgB,EAA7D,SACI,gBAACC,GAAA,EAAD,CAAWC,OAAK,EAAhB,UAEI,eAACL,GAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,eAACP,GAAA,EAAOQ,SAAR,CAAiBzB,GAAG,mBAApB,SAESvE,EACkB,SAAfA,EAAS+E,KACT,gBAACrB,GAAA,EAAD,CAAKS,UAAY,MAAjB,UACI,gBAAC8B,GAAA,EAAD,CAAK9B,UAAU,UAAf,UAEI,eAAC,iBAAD,CAAe+B,GAAG,IAAlB,SACA,eAACV,GAAA,EAAOW,MAAR,gCAGA,eAAC,GAAD,OAIJ,gBAACF,GAAA,EAAD,CAAK9B,UAAY,UAAjB,UAEI,eAAC,iBAAD,CAAe+B,GAAG,QAAlB,SACA,gBAACD,GAAA,EAAIG,KAAL,WAAW,oBAAGjC,UAAU,yBAAxB,YAGA,gBAACkC,GAAA,EAAD,CAAaC,MAAOtG,EAAS+D,KAAMQ,GAAG,WAAtC,UACA,eAAC,iBAAD,CAAe2B,GAAG,WAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,wBAGJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAASlB,EAA3B,6BAOS,UAAftF,EAAS+E,KAAiB,eAACrB,GAAA,EAAD,UAC3B,gBAACuC,GAAA,EAAD,CAAK9B,UAAY,UAAjB,UACC,eAAC,iBAAD,CAAe+B,GAAG,IAAlB,SACM,eAACV,GAAA,EAAOW,MAAR,gCAGA,gBAACE,GAAA,EAAD,CAAaC,MAAM,aAAa/B,GAAG,WAAnC,UACA,eAAC,iBAAD,CAAe2B,GAAG,gBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,oBAEJ,eAAC,iBAAD,CAAeL,GAAG,gBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,4BAIR,eAAC,iBAAD,CAAeL,GAAG,QAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,uBAGJ,eAAC,iBAAD,CAAeL,GAAG,QAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,uBAGJ,gBAACF,GAAA,EAAD,CAAaC,MAAOtG,EAAS+D,KAAMQ,GAAG,WAAtC,UACI,eAAC,iBAAD,CAAe2B,GAAG,WAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,wBAGJ,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAASlB,EAA3B,4BAKJ,gBAAC5B,GAAA,EAAD,WACA,eAACuC,GAAA,EAAD,CAAK9B,UAAU,UAAf,SACG,eAAC,iBAAD,CAAe+B,GAAG,IAAlB,SACG,eAACV,GAAA,EAAOW,MAAR,kCAGN,gBAACF,GAAA,EAAD,CAAK9B,UAAY,UAAjB,UACA,eAAC,iBAAD,CAAe+B,GAAG,UAAlB,SACI,eAACD,GAAA,EAAIG,KAAL,uBAEA,gBAACC,GAAA,EAAD,CAAaC,MAAM,UAAU/B,GAAG,aAAhC,UACA,eAAC,iBAAD,CAAe2B,GAAG,qBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,wBAEJ,eAAC,iBAAD,CAAeL,GAAG,mBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,0BAGJ,gBAACF,GAAA,EAAD,CAAaC,MAAM,WAAW/B,GAAG,aAAjC,UACA,eAAC,iBAAD,CAAe2B,GAAG,mBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,wBAEJ,eAAC,iBAAD,CAAeL,GAAG,kBAAlB,SACI,eAACG,GAAA,EAAYE,KAAb,0BAGL,gBAACF,GAAA,EAAD,CAAaC,MAAM,UAAU/B,GAAG,aAAhC,UACA,eAAC,iBAAD,CAAe2B,GAAG,WAAlB,SACK,eAACG,GAAA,EAAYE,KAAb,wBAEL,eAACF,GAAA,EAAYE,KAAb,CAAkBC,QAASlB,EAA3B,6BAMH,gBAAC5B,GAAA,EAAD,WAEA,eAAC,iBAAD,CAAewC,GAAG,IAAlB,SACA,eAACV,GAAA,EAAOW,MAAR,gCAGA,eAAC,GAAD,IAKA,gBAACF,GAAA,EAAD,CAAK9B,UAAU,UAAf,UACA,eAAC,iBAAD,CAAe+B,GAAG,SAAlB,SACI,gBAACD,GAAA,EAAIG,KAAL,WAAU,oBAAGjC,UAAU,gBAAvB,eAGJ,eAAC,iBAAD,CAAe+B,GAAG,YAAlB,SACI,gBAACD,GAAA,EAAIG,KAAL,WAAU,oBAAGjC,UAAU,gBAAvB,kCCjIzBsC,OAZf,WACI,OACI,kCACI,eAACb,GAAA,EAAD,UACI,eAAClC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKQ,UAAU,mBAAf,mD,UC8DLuC,OApEf,YAAyC,IAAvBxC,EAAsB,EAAtBA,MAAOyC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC3B,OACI,uBAAKzC,UAAU,SAAf,UACI,gCACI,oBAAG0C,MAAO,CAAED,SAASzC,UACjBD,GAAS,EACH,cACAA,GAAS,GACL,uBACA,kBAMlB,gCACI,oBAAG2C,MAAO,CAAED,SAASzC,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG2C,MAAO,CAAED,SAASzC,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG2C,MAAO,CAAED,SAASzC,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCACI,oBAAG2C,MAAO,CAAED,SAASzC,UACjBD,GAAS,EACH,cACAA,GAAS,IACL,uBACA,kBAMlB,gCAAOyC,GAAQA,QC/BZG,OA7Bf,YAA+B,IAAZvI,EAAW,EAAXA,QACf,OACI,gBAACwI,GAAA,EAAD,CAAM5C,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAM+B,GAAE,mBAAc3H,EAAQe,SAA9B,SACI,eAACyH,GAAA,EAAKC,IAAN,CAAUC,IAAK1I,EAAQ2I,UAAUC,UAGrC,gBAACJ,GAAA,EAAKK,KAAN,WACI,eAAC,QAAD,CAAMlB,GAAE,mBAAc3H,EAAQe,SAA9B,SACI,eAACyH,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,kCAAS/I,EAAQ2I,UAAUnD,WAInC,eAACgD,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,sBAAKnD,UAAU,OAAf,SACI,eAAC,GAAD,CAAQD,MAAO3F,EAAQ2I,UAAUM,OAAQb,KAAI,UAAKpI,EAAQ2I,UAAUO,MAAvB,YAAwCb,MAAO,gBAKpG,gBAACG,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,mBACY/I,EAAQmJ,gB,UCPrBC,OAjBf,WACI,OACI,eAACC,GAAA,EAAD,CACIC,UAAU,SACV9C,KAAK,SACL8B,MAAO,CACHiB,OAAQ,QACRC,MAAO,QACPC,OAAQ,OACRC,QAAS,SAPjB,SAUI,uBAAM9D,UAAU,UAAhB,2B,UCAG+D,OAZf,YAAyC,IAAtB7D,EAAqB,EAArBA,QAAS8D,EAAY,EAAZA,SACxB,EAAwBtF,oBAAS,GAAjC,oBAAOuF,EAAP,KAAaC,EAAb,KACA,OAAID,EAEF,eAACE,GAAA,EAAD,CAAOjE,QAASA,EAASkE,QAAS,kBAAMF,GAAQ,IAAQG,aAAW,EAAnE,SACEL,IAIC,0B,UCeMM,OAvBf,YAAmE,IAA/CrK,EAA8C,EAA9CA,MAAOD,EAAuC,EAAvCA,KAAuC,IAAjC2E,eAAiC,MAAvB,GAAuB,MAAnB4F,eAAmB,SAK9D,OAJI5F,IACAA,EAAUA,EAAQ6F,MAAM,aAAa,GAAGA,MAAM,KAAK,IAG/CvK,EAAQ,GACZ,eAACwK,GAAA,EAAD,UACK,YAAIC,MAAMzK,GAAO0K,QAAQvJ,KAAI,SAACF,GAAD,OAC1B,eAAC,iBAAD,CAEI6G,GAAKwC,EAAD,sCAEiC5F,EAFjC,iBAEiDzD,EAAI,GAFrD,oBACayD,EADb,iBAC6BzD,EAAI,GAHzC,SAOI,eAACuJ,GAAA,EAAWrC,KAAZ,CAAiBwC,OAAQ1J,EAAI,IAAMlB,EAAnC,SAA0CkB,EAAI,KANzCA,EAAI,S,oBCqBhB2J,GAAe,eAAClG,EAAD,uDAAW,GAAX,gDAAkB,WAAO0B,GAAP,kBAAAE,EAAA,sEAEtCF,EAAS,CAAExG,KAAM9H,IAFqB,SAIf2O,KAAMC,IAAN,uBAA0BhC,IAJX,gBAI9BkC,EAJ8B,EAI9BA,KACRxG,QAAQC,IAAIuG,GAEZR,EAAS,CACLxG,KAAM7H,EACN+H,QAAS8G,IATyB,kDAatCR,EAAS,CACLxG,KAAM5H,EACN8H,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjBsB,0DAAlB,uDA4CfgE,GAAqB,SAAC3E,GAAD,gDAAQ,WAAOC,GAAP,kBAAAE,EAAA,sEAElClG,QAAQC,IAAI8F,GACZC,EAAS,CAAExG,KAAM3H,IAHiB,SAKXwO,KAAMC,IAAN,uBAA0BP,IALf,gBAK1BS,EAL0B,EAK1BA,KACRxG,QAAQC,IAAIuG,GACZR,EAAS,CACLxG,KAAM1H,EACN4H,QAAS8G,IATqB,kDAalCR,EAAS,CACLxG,KAAMzH,EACN2H,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjBkB,0DAAR,uDCrCnBiE,OAjCf,WACI,IAAM3E,EAAWa,cAEXtG,EAAkBqG,aAAY,SAAAvH,GAAK,OAAIA,EAAMkB,mBAC3CV,EAA6BU,EAA7BV,MAAOJ,EAAsBc,EAAtBd,QAASH,EAAaiB,EAAbjB,SAMxB,OAJAsL,qBAAU,WACN5E,EDyCuB,yCAAM,WAAOA,GAAP,kBAAAE,EAAA,sEAE7BF,EAAS,CAAExG,KAAMxG,IAFY,SAINqN,KAAMC,IAAN,sBAJM,gBAIrBE,EAJqB,EAIrBA,KAERR,EAAS,CACLxG,KAAMvG,EACNyG,QAAS8G,IARgB,gDAY7BR,EAAS,CACLxG,KAAMtG,EACNwG,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAhBa,yDAAN,yDCxCxB,CAACV,IAEIvG,EAAU,eAAC,GAAD,IACZI,EACI,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAEzB,eAACgL,GAAA,EAAD,CAAUC,MAAM,QAAQnF,UAAU,UAAlC,SACKrG,EAASyB,KAAI,SAAAhB,GAAO,OACjB,eAAC8K,GAAA,EAAS9C,KAAV,UACI,gBAAC,QAAD,CAAML,GAAE,mBAAc3H,EAAQe,SAA9B,UACI,eAACiK,GAAA,EAAD,CAAOtC,IAAK1I,EAAQ2I,UAAUC,MAAOqC,IAAKjL,EAAQ2I,UAAUnD,KAAM8B,OAAK,IACvE,eAACwD,GAAA,EAASI,QAAV,CAAkBtF,UAAU,mBAA5B,SACI,gCAAK5F,EAAQ2I,UAAUnD,KAAvB,UACSxF,EAAQmJ,MADjB,aAJQnJ,EAAQe,eCuBrCoK,OApCf,YAAkC,IAAZ1G,EAAW,EAAXA,QACZwB,EAAWa,cACXzH,EAAcwH,aAAY,SAAAvH,GAAK,OAAIA,EAAMD,eACvCS,EAA0CT,EAA1CS,MAAOJ,EAAmCL,EAAnCK,QAASH,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,KAAMC,EAAUR,EAAVQ,MAEpC0E,EAAUE,EAAQO,SAASoG,OAO/B,OALAP,qBAAU,WACN5E,EAASwE,GAAalG,MAEvB,CAAC0B,EAAU1B,IAGV,kCACMA,GAAW,eAAC,GAAD,IAEH,IAATA,EAAa,kDAA2B,iDACxC7E,EAAU,eAAC,GAAD,IACLI,EAAQ,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAEjC,iCACI,eAACqF,GAAA,EAAD,UAEK5F,EAASyB,KAAI,SAAAhB,GAAO,OACjB,eAACoF,GAAA,EAAD,CAA2BC,GAAI,GAAIgG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArD,SACI,eAAC,GAAD,CAASvL,QAASA,KADZA,EAAQe,cAK1B,eAAC,GAAD,CAAUnB,KAAMA,EAAMC,MAAOA,EAAO0E,QAASA,W,UC0MtDiH,OAxOf,YAA4C,IAAnBC,EAAkB,EAAlBA,MAAOhH,EAAW,EAAXA,QAC5B,EAAsBH,mBAAS,GAA/B,oBAAOoH,EAAP,KAAYC,EAAZ,KACA,EAA4BrH,mBAAS,GAArC,oBAAO2E,EAAP,KAAe2C,EAAf,KACA,EAA8BtH,mBAAS,IAAvC,oBAAOuH,EAAP,KAAgBC,EAAhB,KAEM7F,EAAWa,cAEX/G,EAAiB8G,aAAY,SAAAvH,GAAK,OAAIA,EAAMS,kBAC1CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAGhByB,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAEFlB,EAAsBsG,aAAY,SAAAvH,GAAK,OAAIA,EAAMiB,uBAE1CwL,EAGTxL,EAHAb,QACOsM,EAEPzL,EAFAT,MACSmM,EACT1L,EADAH,QA6BJ,OA1BAyK,qBAAU,WACN5E,EAAS,CAACxG,KAAKxH,IACXgU,IACAL,EAAU,GACVE,EAAW,IACX7F,EAAS,CAAExG,KAAMzG,KAGrBiN,EAAS0E,GAAmBc,EAAMS,OAAOlG,KACzC/F,QAAQC,IAAIF,EAAQyL,EAAMS,OAAOlG,MAClC,CAACC,EAAUwF,EAAMS,OAAOlG,GAAIiG,IAiB3B,iCACI,eAAC,QAAD,CAAMtE,GAAG,IAAI/B,UAAU,qBAAvB,qBACClG,EACG,eAAC,GAAD,IACEI,EACI,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAExB,+BACAE,EAAQ2I,UACL,iCACC,gBAACxD,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SAEG,eAACL,GAAA,EAAD,CAAOtC,IAAK1I,EAAQ2I,UAAUC,MAAOqC,IAAKjL,EAAQ2I,UAAUnD,KAAM8B,OAAK,MAI3E,eAAClC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UAEI,eAACqG,GAAA,EAAUnE,KAAX,UACI,8BAAKhI,EAAQ2I,UAAUnD,SAG3B,eAAC2G,GAAA,EAAUnE,KAAX,UACI,eAAC,GAAD,CAAQrC,MAAO3F,EAAQ2I,UAAUM,OAAQb,KAAI,UAAKpI,EAAQ2I,UAAUO,MAAvB,YAAwCb,MAAO,cAGhG,gBAAC8D,GAAA,EAAUnE,KAAX,4BACoBhI,EAAQmJ,SAG5B,gBAACgD,GAAA,EAAUnE,KAAX,2BACkBhI,EAAQ2I,UAAUyD,gBAM5C,eAAChH,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAAC7C,GAAA,EAAD,UACI,gBAAC2D,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,WACGrE,GAAU,eAAC0K,GAAA,EAAUnE,KAAX,UACT,eAAC,GAAD,CAASlC,QAAQ,OAAjB,oCAEA,eAACqG,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,eAACA,GAAA,EAAD,UACI,8CAAiBpF,EAAQmJ,gBAIrC,eAACgD,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBACA,eAACA,GAAA,EAAD,UACKpF,EAAQqM,kBAAoB,EAAI,WAAa,sBAKzDrM,EAAQqM,kBAAoB,GACzB,eAACF,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,kBACA,eAACA,GAAA,EAAD,CAAKkH,GAAG,OAAO1G,UAAU,OAAzB,SACI,eAACjB,GAAA,EAAKW,QAAN,CACIyD,GAAG,SACHpD,MAAO+F,EACPjG,SAAU,SAACZ,GAAD,OAAO8G,EAAO9G,EAAEa,OAAOC,QAHrC,SAOQ,YAAI2E,MAAMtK,EAAQqM,mBAAmB9B,QAAQvJ,KAAI,SAACF,GAAD,OAC7C,yBAAoB6E,MAAO7E,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAa7C,eAACqL,GAAA,EAAUnE,KAAX,UACI,eAACnC,GAAA,EAAD,CACIoC,QAzGvB,WACrBxD,EAAQM,KAAR,gBAAsB0G,EAAMS,OAAOlG,GAAnC,gBAA6C0F,KAyGD9F,UAAU,YACV2G,SAAuC,GAA7BvM,EAAQqM,oBAAyB5K,EAC3ChC,KAAK,SAJT,qCAgBpB,eAAC0F,GAAA,EAAD,UACK,gBAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,UACG,0CAC4B,IAA3BrL,EAAQwM,QAAQC,QAAgB,eAAC,GAAD,CAAS3G,QAAQ,OAAjB,wBAEjC,gBAACqG,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UACK9F,EAAQwM,QAAQxL,KAAI,SAAC0L,GAAD,OACjB,gBAACP,GAAA,EAAUnE,KAAX,WACI,kCAAS0E,EAAOC,QAAQnH,OACxB,eAAC,GAAD,CAAQG,MAAO+G,EAAOzD,OAAQZ,MAAM,YACpC,6BAAIqE,EAAOE,WAAWC,UAAU,EAAG,MACnC,6BAAIH,EAAOA,WAJMA,EAAOI,aAQhC,gBAACX,GAAA,EAAUnE,KAAX,WACI,iDAEC+D,GAAwB,eAAC,GAAD,IACxBE,GAAwB,eAAC,GAAD,CAASnG,QAAQ,UAAjB,8BACxBkG,GAAsB,eAAC,GAAD,CAASlG,QAAQ,SAAjB,SAA2BkG,IAEjDvK,EACG,gBAACkD,GAAA,EAAD,CAAMC,SA3I5B,SAACC,GACnBA,EAAEC,iBACFmB,EHiL2B,SAAC0C,EAAWM,EAAOyD,EAAOK,GAA1B,gDAAqC,WAAO9G,EAAUC,GAAjB,oBAAAC,EAAA,sEAEhEF,EAAS,CACLxG,KAAM5G,IAKNqN,IADA1E,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZwC,SAiBzCC,KAAM0G,KAAN,wBACFrE,EADE,aAEnB,CAAC,OAAS+D,EAAO,OAASzD,EAAO,OAAS8D,GAC1C3G,GApB4D,gBAiBxDK,EAjBwD,EAiBxDA,KAKRR,EAAS,CACLxG,KAAM3G,EACN6G,QAAS8G,IAxBmD,kDA8BhER,EAAS,CACLxG,KAAM1G,EACN4G,QAAS,KAAM+G,SAASD,KAAKE,UAhC+B,0DAArC,wDGjLlBsG,CACLjN,EAAQ2I,UAAUA,UAClBM,EACA4C,EACApK,EAASkL,WAqI2B,UACI,gBAAChI,GAAA,EAAKuI,MAAN,CAAYC,UAAU,SAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,qBACA,gBAACzI,GAAA,EAAKW,QAAN,CACIyD,GAAG,SACHpD,MAAOsD,EACPxD,SAAU,SAACZ,GAAD,OAAO+G,EAAU/G,EAAEa,OAAOC,QAHxC,UAKI,yBAAQA,MAAM,GAAd,uBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,sBACA,yBAAQA,MAAM,IAAd,2BACA,yBAAQA,MAAM,IAAd,iCAIR,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,qBACA,eAACzI,GAAA,EAAKW,QAAN,CACIyD,GAAG,WACHsE,IAAI,IACJ1H,MAAOkG,EACPpG,SAAU,SAACZ,GAAD,OAAOiH,EAAWjH,EAAEa,OAAOC,aAI7C,eAACE,GAAA,EAAD,CACI0G,SAAUR,EACVtM,KAAK,SACLqG,QAAQ,UAHZ,uBAUA,gBAAC,GAAD,CAASA,QAAQ,OAAjB,oBAA+B,eAAC,QAAD,CAAM6B,GAAG,SAAT,mBAA/B,sCAQxB,+BAAK,wDCrNpB2F,GAAY,SAACtH,EAAI0F,GAAL,gDAAa,WAAOzF,EAAUC,GAAjB,0BAAAC,EAAA,6DAElCF,EAAS,CACLxG,KAAKpG,IAHyB,EAO1B6M,IADazE,EANa,EAM1BD,UAAaC,SAEf2E,EAAS,CACPC,QAAS,CACL,eAAgB,qBAVM,SAaXC,KAAMiH,IAAN,4BAA+BvH,GACjD,CAAC,QAAUvE,EAASkL,QAAQ,SAAWjB,GACxCtF,GAf8B,uBAa1BK,EAb0B,EAa1BA,KAIRR,EAAS,CACLxG,KAAMrG,EACNuG,QAAS8G,IAnBqB,UAqBRH,KAAMC,IAAN,qBAAwB9E,EAASkL,UArBzB,QAqB5Ba,EArB4B,OAsBlCvN,QAAQC,IAAIsN,GACZvH,EAAS,CACLxG,KAAKnG,EACLqG,QAAQ6N,EAAY/G,OAExBR,EAAS,CACLxG,KAAKhG,IA5ByB,4CAAb,yDAiCZgU,GAAU,2DAAM,WAAOxH,EAAUC,GAAjB,oBAAAC,EAAA,6DAEzBF,EAAS,CACLxG,KAAK/F,IAHgB,EAOjBwM,IADazE,EANI,EAMjBD,UAAaC,SAEN,CACP4E,QAAS,CACL,eAAgB,qBAVH,SAeCC,KAAMC,IAAN,qBAAwB9E,EAASkL,UAflC,OAenBa,EAfmB,OAgBzBvN,QAAQC,IAAIsN,GACZvH,EAAS,CACLxG,KAAKnG,EACLqG,QAAQ6N,EAAY/G,OAExBR,EAAS,CACLxG,KAAKhG,IAtBgB,2CAAN,yDC6ERiU,OAtHf,YAAmD,IAA7BjC,EAA4B,EAA5BA,MAAOzG,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7B1D,EAAU0K,EAAMS,OAAOlG,GACvB0F,EAAM1G,EAASoG,OAASuC,OAAO3I,EAASoG,OAAOhB,MAAM,KAAK,IAAM,EAChEnE,EAAWa,cAEXrG,EAAOoG,aAAY,SAAAvH,GAAK,OAAIA,EAAMmB,QAEhCC,EAAsBD,EAAtBC,UAAUhB,EAAYe,EAAZf,QAClB,EAAyB4E,oBAAS,GAAlC,oBAAasJ,GAAb,WACA/C,qBAAU,WACF9J,GACAkF,EAASqH,GAAUvM,EAAS2K,IAC5BkC,GAAS,GACT3N,QAAQC,IAAIQ,KAGZuF,EAASwH,MACTxN,QAAQC,IAAIQ,MAGlB,CAACuF,EAAUlF,EAAS2K,IAItB,IAAMmC,EAAwB,SAAC7H,GAC3BC,ED2CsB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,UAAAC,EAAA,6DAClCF,EAAS,CACLxG,KAAK9F,IAFyB,SAI5B2M,KAAMwH,OAAN,2BAAiC9H,IAJL,OAKlCC,EAAS,CACLxG,KAAMlG,EACNoG,QAASqG,IAEbC,EAAS,CACLxG,KAAKjG,IAVyB,2CAAR,wDC3CbuU,CAAe/H,KAO5B,OACI,gBAACb,GAAA,EAAD,WACI,gBAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,UACI,gDACK3L,EAAQ,eAAC,GAAD,IACbgB,EAAgC,IAArBA,EAAU+L,OACjB,gBAAC,GAAD,CAAS3G,QAAQ,OAAjB,gCACuB,eAAC,QAAD,CAAM6B,GAAG,IAAT,wBAGnB,eAACwE,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,SACKpF,EAAUM,KAAI,SAAAL,GAAI,OACf,eAACwL,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAACL,GAAA,EAAD,CAAOtC,IAAK/H,EAAKI,QAAQ4H,UAAUC,MAAOqC,IAAKtK,EAAKI,QAAQ4H,UAAUnD,KAAM8B,OAAK,EAAC0G,SAAO,MAE7F,eAAC5I,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAAC,QAAD,CAAM1D,GAAE,mBAAchH,EAAKI,QAAQA,SAAnC,SAA+CJ,EAAKI,QAAQ4H,UAAUnD,SAG1E,gBAACJ,GAAA,EAAD,CAAKiG,GAAI,EAAT,mBACY1K,EAAKI,QAAQoI,SAGzB,eAAC/D,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAAC1G,GAAA,EAAKW,QAAN,CACIyD,GAAG,SACHpD,MAAOhF,EAAKsN,SACZxI,SAAU,SAACZ,GAAD,OAAOoB,EAASqH,GAAU3M,EAAKI,QAAQA,QAAS4M,OAAO9I,EAAEa,OAAOC,UAH9E,SAOQ,YAAI2E,MAAM3J,EAAKI,QAAQsL,mBAAmB9B,QAAQvJ,KAAI,SAACF,GAAD,OAClD,yBAAoB6E,MAAO7E,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UASjC,eAACsE,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAACxF,GAAA,EAAD,CACIpG,KAAK,SACLqG,QAAQ,QACRmC,QAAS,kBAAM4F,EAAsBlN,EAAKI,QAAQA,UAHtD,SAKI,oBAAG6E,UAAU,yBArCRjF,EAAKI,QAAQA,cA4C5C,eAAC,GAAD,OAGV,eAACqE,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI3K,IAAYhB,GAAS,gBAAC8I,GAAA,EAAD,WACjB,eAAC2D,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,SACI,gBAACqG,GAAA,EAAUnE,KAAX,WACI,6CAAetH,EAAUwN,QAAO,SAACC,EAAKxN,GAAN,OAAewN,EAAMxN,EAAKsN,WAAU,GAApE,aADJ,SAEYvN,EAAUwN,QAAO,SAACC,EAAKxN,GAAN,OAAewN,EAAMxN,EAAKsN,SAAWtN,EAAKI,QAAQoI,QAAO,GAAGiF,QAAQ,QAIrG,eAACjC,GAAA,EAAUnE,KAAX,UACI,eAACnC,GAAA,EAAD,CACIpG,KAAK,SACLmG,UAAU,YACV2G,SAA+B,IAArB7L,EAAU+L,OACpBxE,QA7EA,WACpBxD,EAAQM,KAAK,6BAwEG,4CC/FTsJ,OAZf,YAAsC,IAAbzE,EAAY,EAAZA,SACrB,OACI,eAACvC,GAAA,EAAD,UACI,eAAClC,GAAA,EAAD,CAAKS,UAAU,4BAAf,SACI,eAACR,GAAA,EAAD,CAAKkH,GAAI,GAAIjB,GAAI,EAAjB,SACKzB,SCgFN0E,OA/Ef,YAA6C,IAAtBtJ,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAC7B,EAA0BH,mBAAS,IAAnC,oBAAOiK,EAAP,KAAcC,EAAd,KACA,EAAgClK,mBAAS,IAAzC,oBAAOmK,EAAP,KAAiBC,EAAjB,KACA,EAAuBpK,mBAAS,SAAhC,oBAAOkC,EAAP,KAAYmI,EAAZ,KAEM1I,EAAWa,cAEX8H,EAAW5J,EAASoG,OAASpG,EAASoG,OAAOhB,MAAM,KAAK,GAAK,IAE7D5I,EAAYqF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrC1B,EAA6B0B,EAA7B1B,MAAOJ,EAAsB8B,EAAtB9B,QAAS+B,EAAaD,EAAbC,SAaxB,OAXAoJ,qBAAU,WACFpJ,GACAgD,EAAQM,KAAK6J,KAElB,CAACnK,EAAShD,EAAUmN,IAQnB,gBAAC,GAAD,WACI,0CACC9O,GAAS,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAACiF,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFmB,EfiBa,SAACsI,EAAOE,EAASjI,GAAjB,gDAA0B,WAAOP,GAAP,oBAAAE,EAAA,sEAEvCF,EAAS,CACLxG,KAAMxF,IAGJmM,EAAS,CACXC,QAAS,CACL,eAAgB,qBARe,SAYhBC,KAAM0G,KACzB,cACA,CAAE,MAASuB,EAAO,SAAYE,EAAS,KAAOjI,GAC9CJ,GAfmC,gBAY/BK,EAZ+B,EAY/BA,KAMRR,EAAS,CACLxG,KAAMvF,EACNyF,QAAS8G,IAGbjD,aAAaqL,QAAQ,WAAYnL,KAAKoL,UAAUrI,IAvBT,kDA0BvCR,EAAS,CACLxG,KAAMtF,EACNwF,QAAQ,KAAM+G,SAASD,KAAKE,UA5BO,0DAA1B,sDejBJoI,CAAMR,EAAOE,EAASjI,KAQ3B,UAEI,gBAAC7B,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,4BACA,eAACzI,GAAA,EAAKW,QAAN,CACI7F,KAAK,QACLuP,YAAY,cACZrJ,MAAO4I,EACP9I,SAAU,SAACZ,GAAD,OAAO2J,EAAS3J,EAAEa,OAAOC,aAM3C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CACI7F,KAAK,WACLuP,YAAY,iBACZrJ,MAAO8I,EACPhJ,SAAU,SAACZ,GAAD,OAAO6J,EAAY7J,EAAEa,OAAOC,aAI9C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,0BACA,gBAACzI,GAAA,EAAKW,QAAN,CAAcyD,GAAG,SAASkG,QAAM,EAACtJ,MAAOa,EAAMf,SAAU,SAACZ,GAAD,OAAK8J,EAAQ9J,EAAEa,OAAOC,QAA9E,UACE,4CACA,6CACA,kDAIN,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,wBAKJ,eAACX,GAAA,EAAD,CAAKS,UAAU,OAAf,SACI,gBAACR,GAAA,EAAD,4BACkB,eAAC,QAAD,CACVuC,GAAIiH,EAAQ,6BAAyBA,GAAa,YADxC,+B,oBCoKnBM,OAxOf,YAAgD,IAAtBlK,EAAqB,EAArBA,SAAUP,EAAW,EAAXA,QAGhC,EAAwBH,mBAAS,IAAjC,oBAAOkB,EAAP,KAAa2J,EAAb,KACA,EAA0B7K,mBAAS,IAAnC,oBAAOiK,EAAP,KAAcC,EAAd,KACA,EAAgClK,mBAAS,IAAzC,oBAAOmK,EAAP,KAAiBC,EAAjB,KACA,EAA8CpK,mBAAS,IAAvD,oBAAO8K,EAAP,KAAwBC,EAAxB,KACA,EAA8B/K,mBAAS,IAAvC,oBAAOqC,EAAP,KAAgB2I,EAAhB,KACA,EAAyBhL,mBAAS,IAAlC,oBAAOiL,EAAP,KAAaC,EAAb,KACA,EAA6BlL,mBAAS,IAAtC,oBAAOmL,EAAP,KAAeC,EAAf,KACA,EAAuBpL,mBAAS,SAAhC,oBAAOkC,EAAP,KAAYmI,EAAZ,KACA,EAA6BrK,mBAAS,IAAtC,oBAAOqL,EAAP,KAAeC,EAAf,KAEM3J,EAAWa,cAEX8H,EAAW5J,EAASoG,OAASpG,EAASoG,OAAOhB,MAAM,KAAK,GAAK,IAE7D1I,EAAemF,aAAY,SAAAvH,GAAK,OAAIA,EAAMoC,gBACxC5B,EAA6B4B,EAA7B5B,MAAOJ,EAAsBgC,EAAtBhC,QAAS+B,EAAaC,EAAbD,SAExBoJ,qBAAU,WACFpJ,GACAgD,EAAQM,KAAK6J,KAElB,CAACnK,EAAShD,EAAUmN,IAEvB,IAAMiB,EAAgB,SAAChL,GACnBA,EAAEC,iBAEE2J,GAAYW,EACZE,EAAW,0BAEXrJ,EhBsDY,SAACT,EAAK+I,EAAMgB,EAAME,EAAShB,EAASjI,EAAKmJ,GAAzC,gDAAqD,WAAO1J,GAAP,oBAAAE,EAAA,sEAErEF,EAAS,CACLxG,KAAMpF,KAGJ+L,EAAS,CACXC,QAAS,CACL,eAAgB,qBAR6C,SAY9CC,KAAM0G,KACzB,iBACA,CAAE,MAASuB,EAAO,SAAYE,EAAU,KAAOjJ,EAAK,QAAUiK,EAAQ,MAAQF,EAAM,KAAO/I,EAAK,QAAUmJ,GAC1GvJ,GAfiE,gBAY7DK,EAZ6D,EAY7DA,KAMRR,EAAS,CACLxG,KAAMnF,GACNqF,QAAS8G,IAGbR,EAAS,CACLxG,KAAMvF,EACNyF,QAAS8G,IAGbjD,aAAaqL,QAAQ,WAAYnL,KAAKoL,UAAUrI,IA5BqB,kDA+BrER,EAAS,CACLxG,KAAMlF,GACNoF,QAAS,KAAM+G,SAASD,KAAKE,UAjCoC,0DAArD,sDgBtDHmJ,CAAStK,EAAK+I,EAAMgB,EAAME,EAAShB,EAASjI,EAAKmJ,KAKlE,OACI,gBAAC,GAAD,WACI,0CACChJ,GAAW,eAAC,GAAD,CAASb,QAAQ,SAAjB,SAA2Ba,IACtC7G,GAAS,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IACpCJ,GAAW,eAAC,GAAD,IACP,gBAACqQ,GAAA,EAAD,CAAMC,iBAAiB,OAAOC,YAAY,EAAOjK,GAAG,qBAApD,UACf,eAACkK,GAAA,EAAD,CAAKC,SAAS,OAAOpI,MAAM,QAAQqI,SAAU,kBAAIzB,EAAQ,UAAzD,SACE,gBAAChK,GAAA,EAAD,CAAMC,SAAUiL,EAAhB,UACA,sBAAKvH,MAAO,CAAC,QAAU,UACX,gBAAC3D,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,aACZrJ,MAAOH,EACPC,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,aAM1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,4BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,QACLuP,YAAY,cACZrJ,MAAO4I,EACP9I,SAAU,SAACZ,GAAD,OAAO2J,EAAS3J,EAAEa,OAAOC,aAI1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,SAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,wBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,kBACZrJ,MAAO4J,EACP9J,SAAU,SAACZ,GAAD,OAAO2K,EAAS3K,EAAEa,OAAOC,aAI1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,gBACZrJ,MAAO8J,EACPhK,SAAU,SAACZ,GAAD,OAAO6K,EAAW7K,EAAEa,OAAOC,aAK7C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,WACLuP,YAAY,iBACZrJ,MAAO8I,EACPhJ,SAAU,SAACZ,GAAD,OAAO6J,EAAY7J,EAAEa,OAAOC,aAK9C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,+BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,WACLuP,YAAY,mBACZrJ,MAAOyJ,EACP3J,SAAU,SAACZ,GAAD,OAAOwK,EAAmBxK,EAAEa,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,2BAOd,eAACoK,GAAA,EAAD,CAAKC,SAAS,UAAUpI,MAAM,SAASqI,SAAU,kBAAIzB,EAAQ,WAA7D,SACC,gBAAChK,GAAA,EAAD,CAAMC,SAAUiL,EAAhB,UACC,sBAAKvH,MAAO,CAAC,QAAU,UACX,gBAAC3D,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,aACZrJ,MAAOH,EACPC,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,aAM1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,4BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,QACLuP,YAAY,cACZrJ,MAAO4I,EACP9I,SAAU,SAACZ,GAAD,OAAO2J,EAAS3J,EAAEa,OAAOC,aAI1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,SAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,wBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,kBACZrJ,MAAO4J,EACP9J,SAAU,SAACZ,GAAD,OAAO2K,EAAS3K,EAAEa,OAAOC,aAI1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,gBACZrJ,MAAOgK,EACPlK,SAAU,SAACZ,GAAD,OAAO+K,EAAW/K,EAAEa,OAAOC,aAI5C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,gBACZrJ,MAAO8J,EACPhK,SAAU,SAACZ,GAAD,OAAO6K,EAAW7K,EAAEa,OAAOC,aAK7C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,WACLuP,YAAY,iBACZrJ,MAAO8I,EACPhJ,SAAU,SAACZ,GAAD,OAAO6J,EAAY7J,EAAEa,OAAOC,aAK9C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,+BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,WACLuP,YAAY,mBACZrJ,MAAOyJ,EACP3J,SAAU,SAACZ,GAAD,OAAOwK,EAAmBxK,EAAEa,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,8BAUJ,eAACX,GAAA,EAAD,CAAKS,UAAU,OAAf,SACI,gBAACR,GAAA,EAAD,+BACqB,eAAC,QAAD,CACbuC,GAAIiH,EAAQ,0BAAsBA,GAAa,SADlC,8B,UChJxB0B,GAAkB,SAACtK,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,wBAAAC,EAAA,sEAE/BF,EAAS,CACLxG,KAAM1D,KAHqB,EAQ3BmK,IADazE,EAPc,EAO3BD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBkK,cAAc,UAAD,OAAY9O,EAAS+O,SAbX,SAiBRlK,KAAMC,IAAN,qBACLP,EADK,KAEnBI,GAnB2B,gBAiBvBK,EAjBuB,EAiBvBA,KAKRR,EAAS,CACLxG,KAAMzD,GACN2D,QAAS8G,IAxBkB,kDA6B/BR,EAAS,CACLxG,KAAMxD,GACN0D,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjCe,0DAAR,yDCyIhB8J,OArNf,YAAqC,IAAZhM,EAAW,EAAXA,QAErB,EAAwBH,mBAAS,IAAjC,oBAAOkB,EAAP,KAAa2J,EAAb,KACA,EAA0B7K,mBAAS,IAAnC,oBAAOiK,EAAP,KAAcC,EAAd,KACA,EAAgClK,mBAAS,IAAzC,oBAAOmK,EAAP,KAAiBC,EAAjB,KACA,EAA8CpK,mBAAS,IAAvD,oBAAO8K,EAAP,KAAwBC,EAAxB,KACA,EAA6B/K,mBAAS,IAAtC,oBAAOqL,EAAP,KAAeC,EAAf,KACA,EAA6BtL,mBAAS,IAAtC,oBAAOmL,EAAP,KAAeC,EAAf,KACA,EAAyBpL,mBAAS,IAAlC,oBAAOiL,EAAP,KAAaC,EAAb,KACA,EAA8BlL,mBAAS,IAAvC,oBAAOqC,EAAP,KAAgB2I,EAAhB,KAEMrJ,EAAWa,cAEXnF,EAAckF,aAAY,SAAAvH,GAAK,OAAIA,EAAMqC,eACvC7B,EAAyB6B,EAAzB7B,MAAOJ,EAAkBiC,EAAlBjC,QAASkC,EAASD,EAATC,KAGhBH,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAGArB,EADkByG,aAAY,SAAAvH,GAAK,OAAIA,EAAMuC,qBAC7CzB,QAEFmC,EAAcsE,aAAY,SAAAvH,GAAK,OAAIA,EAAMiD,eAC9BmO,EAA8CnO,EAAvD7C,QAA+BiR,EAAwBpO,EAA/BzC,MAAoB0C,EAAWD,EAAXC,OAgDpD,OA7CAqI,qBAAU,WAEDpJ,EAGIG,GAASA,EAAK4D,OAAQpF,GASvB+O,EAAQvN,EAAK4D,MACbgJ,EAAS5M,EAAK2M,OACdmB,EAAW9N,EAAK6N,SAChBG,EAAsB,UAAXhO,EAAK4E,MAAgB5E,EAAK+N,SACrCH,EAAS5N,EAAK2N,SAZdtJ,EAAS,CAAExG,KAAM1E,KACjBkL,EAASF,GAA8B,SAAftE,EAAS+E,KAAc/E,EAASkL,QAAuB,UAAflL,EAAS+E,KAAe/E,EAASmP,SAASnP,EAASoP,UACjG,SAAfpP,EAAS+E,MAETP,EDiKS,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE1BF,EAAS,CACLxG,KAAM7C,KAHgB,EAQtBsJ,IADazE,EAPS,EAOtBD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZE,SAiBHC,KAAMC,IAAN,wBACF9E,EAASkL,SAC1BvG,GAnBsB,gBAiBlBK,EAjBkB,EAiBlBA,KAKRR,EAAS,CACLxG,KAAM5C,GACN8C,QAAS8G,IAxBa,kDA6B1BR,EAAS,CACLxG,KAAM3C,GACN6C,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjCU,0DAAN,0DCxKhBlC,EAAQM,KAAK,YAkBlB,CAACkB,EAAUxB,EAAShD,EAAUG,EAAMxB,IAyBnC,gBAAC+E,GAAA,EAAD,CAAKS,UAAU,yBAAf,UACInE,GAAW,gBAAC2D,GAAA,EAAD,CAAKiG,GAAmB,SAAf5J,EAAS+E,KAAc,EAAE,EAAlC,UACP,+CACCG,GAAW,eAAC,GAAD,CAASb,QAAQ,SAAjB,SAA2Ba,IACtC7G,GAAS,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IACpCJ,GAAW,eAAC,GAAD,IACZ,gBAACiF,GAAA,EAAD,CAAMC,SA7BI,SAACC,GACnBA,EAAEC,iBAEE2J,GAAYW,EACZE,EAAW,2BAEXrJ,ElByGqB,SAACrE,GAAD,gDAAU,WAAOqE,EAAUC,GAAjB,wBAAAC,EAAA,sEAEnCF,EAAS,CACLxG,KAAM7E,KAHyB,EAQ/BsL,IADazE,EAPkB,EAO/BD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZW,SAiBZC,KAAM0G,KAAN,uBAEnB,CAAC,KAAOpL,EAAK,KAAOH,EAAS+E,MAC7BJ,GApB+B,gBAiB3BK,EAjB2B,EAiB3BA,KAMRR,EAAS,CACLxG,KAAM5E,GACN8E,QAAS8G,IAGbR,EAAS,CACLxG,KAAMvF,EACNyF,QAAS8G,IAGbjD,aAAaqL,QAAQ,WAAYnL,KAAKoL,UAAUrI,IAjCb,kDAoCnCR,EAAS,CACLxG,KAAM3E,GACN6E,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAxCmB,0DAAV,wDkBzGZmK,CAAkB,CACvB,GAAqB,SAAfrP,EAAS+E,KAAc5E,EAAK+K,QAAuB,UAAflL,EAAS+E,KAAe5E,EAAKgP,SAAShP,EAAKiP,QACrF,KAAQrL,EACR,MAAS+I,EACT,SAAYE,EACZ,QAAUgB,EACV,QAAUE,EACV,MAAQJ,KAGXb,EAAY,IACjBW,EAAmB,IACfC,EAAW,MAWP,UAEI,gBAAC3K,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,aACZrJ,MAAOH,EACPC,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,aAK1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,4BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,QACLuP,YAAY,cACZrJ,MAAO4I,EACP9I,SAAU,SAACZ,GAAD,OAAO2J,EAAS3J,EAAEa,OAAOC,aAI1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACG,eAACxI,GAAA,EAAKyI,MAAN,wBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,OACLuP,YAAY,kBACZrJ,MAAO4J,EACP9J,SAAU,SAACZ,GAAD,OAAO2K,EAAS3K,EAAEa,OAAOC,aAI3B,UAAflE,EAAS+E,MACJ,gBAAC7B,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACF,eAACxI,GAAA,EAAKyI,MAAN,4BACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACR5Q,KAAK,QACLuP,YAAY,gBACZrJ,MAAOgK,EACPlK,SAAU,SAACZ,GAAD,OAAO+K,EAAW/K,EAAEa,OAAOC,aAKzC,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACA,eAACxI,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACRtH,GAAG,WACHiG,YAAY,gBACZrJ,MAAO8J,EACPhK,SAAU,SAACZ,GAAD,OAAO6K,EAAW7K,EAAEa,OAAOC,aAI7C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,WACLuP,YAAY,iBACZrJ,MAAO8I,EACPhJ,SAAU,SAACZ,GAAD,OAAO6J,EAAY7J,EAAEa,OAAOC,aAK9C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,+BACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,WACLuP,YAAY,mBACZrJ,MAAOyJ,EACP3J,SAAU,SAACZ,GAAD,OAAOwK,EAAmBxK,EAAEa,OAAOC,aAKrD,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,0BAQRrE,GAA2B,SAAfA,EAAS+E,MAAgB,gBAACpB,GAAA,EAAD,CAAKiG,GAAI,EAAT,UACjC,4CACCqF,EACG,eAAC,GAAD,IACAC,EACA,eAAC,GAAD,CAAS7K,QAAQ,SAAjB,SAA2B6K,IAEnB,gBAACI,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACrL,UAAU,WAApC,UACI,iCACI,gCACI,qCACA,uCACA,wCAEA,0CACA,6BAIR,iCACKpD,EAAOxB,KAAI,SAAAmB,GAAK,OACb,gCACI,8BAAKA,EAAM+O,UACX,8BAAK/O,EAAMgP,UAAUtE,UAAU,EAAG,MAClC,yCAAY1K,EAAMiP,eAIlB,8BACI,eAAC,iBAAD,CAAezJ,GAAE,iBAAYxF,EAAM+O,SAAnC,SACI,eAACrL,GAAA,EAAD,CAAQD,UAAU,SAAlB,2BATHzD,EAAM+O,wBCvJxCG,OA/Cf,YAAwD,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE1C,OACI,gBAAC/J,GAAA,EAAD,CAAK9B,UAAU,8BAAf,UACI,eAAC8B,GAAA,EAAIM,KAAL,UACKsJ,EACG,eAAC,iBAAD,CAAe3J,GAAG,SAAlB,SACI,eAACD,GAAA,EAAIG,KAAL,sBAGA,eAACH,GAAA,EAAIG,KAAL,CAAU0E,UAAQ,EAAlB,qBAIZ,eAAC7E,GAAA,EAAIM,KAAL,UACKuJ,EACG,eAAC,iBAAD,CAAe5J,GAAG,YAAlB,SACI,eAACD,GAAA,EAAIG,KAAL,yBAGA,eAACH,GAAA,EAAIG,KAAL,CAAU0E,UAAQ,EAAlB,wBAIZ,eAAC7E,GAAA,EAAIM,KAAL,UACKwJ,EACG,eAAC,iBAAD,CAAe7J,GAAG,WAAlB,SACI,eAACD,GAAA,EAAIG,KAAL,wBAGA,eAACH,GAAA,EAAIG,KAAL,CAAU0E,UAAQ,EAAlB,uBAIZ,eAAC7E,GAAA,EAAIM,KAAL,UACKyJ,EACG,eAAC,iBAAD,CAAe9J,GAAG,cAAlB,SACI,eAACD,GAAA,EAAIG,KAAL,4BAGA,eAACH,GAAA,EAAIG,KAAL,CAAU0E,UAAQ,EAAlB,+BCITmF,OAzCf,YAAsC,IAAZjN,EAAW,EAAXA,QAEhBvD,EAAW2F,aAAY,SAAAvH,GAAK,OAAIA,EAAM4B,YACpCC,EAA6BD,EAA7BC,gBAAgBC,EAAaF,EAAbE,SAElB6E,EAAWa,cACjB,EAA8BxC,mBAASnD,GAAvC,oBAAOsO,EAAP,KAAgBC,EAAhB,KAOA,OACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAe4B,OAAK,EAACC,OAAK,IAC1B,2CACAnQ,EAAS,eAAC,GAAD,IAAW,gBAACuD,GAAA,EAAD,CAAMC,SAVZ,SAACC,GR8EQ,IAAC4B,EQ7E5B5B,EAAEC,iBACFmB,GR4E4BQ,EQ5ECgJ,ER4EQ,SAACxJ,GAC1CA,EAAS,CACLxG,KAAM7F,EACN+F,QAAS8G,IAEbR,EAAS,CACLxG,KAAK5F,IAGT2J,aAAaqL,QAAQ,kBAAmBnL,KAAKoL,UAAUrI,OQpFnDhC,EAAQM,KAAK,aAOW,UAEhB,gBAACJ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CACI+K,UAAQ,EACRtH,GAAG,WACHtJ,KAAK,OACLuP,YAAY,gBACZrJ,MAAO8J,GAAoB,GAC3BhK,SAAU,SAACZ,GAAD,OAAO6K,EAAW7K,EAAEa,OAAOC,aAM7C,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,6BCqBD6L,OArDf,YAAqC,IAAZlN,EAAW,EAAXA,QAEfpD,EAAUwF,aAAY,SAAAvH,GAAK,OAAIA,EAAM+B,WAEpCF,EADU0F,aAAY,SAAAvH,GAAK,OAAEA,EAAM4B,YACnCC,gBACeI,GAAYF,EAA1BC,cAA0BD,EAAZE,SAEhB0E,EAAWa,cAEjB,EAA0CxC,mBAAS,oBAAnD,oBAAOsN,EAAP,KAAsBC,EAAtB,KAYA,OAVK1Q,GACDsD,EAAQM,KAAK,aAUb,gBAAC,GAAD,WACI,eAAC,GAAD,CAAeuM,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhCjQ,EAAQ,eAAC,GAAD,IAAW,gBAACoD,GAAA,EAAD,CAAMC,SAVX,SAACC,GTyFM,IAAC4B,ESxF1B5B,EAAEC,iBACFmB,GTuF0BQ,ESvFCmL,ETuFQ,SAAC3L,GACxCA,EAAS,CACLxG,KAAM3F,EACN6F,QAAS8G,IAEbR,EAAS,CACLxG,KAAK1F,IAGTyJ,aAAaqL,QAAQ,gBAAiBnL,KAAKoL,UAAUrI,OS/FjDhC,EAAQM,KAAK,gBAOU,UACf,gBAACJ,GAAA,EAAKuI,MAAN,WACI,eAACvI,GAAA,EAAKyI,MAAN,CAAYrE,GAAG,SAAf,2BACA,eAAC3D,GAAA,EAAD,UAGK,eAACT,GAAA,EAAKmN,MAAN,CACGrS,KAAK,QACLsS,MAAM,mBACN/L,GAAG,MACHR,KAAK,gBACLG,MAAM,mBACNF,SAAU,SAACZ,GAAD,OAAOgN,EAAiBhN,EAAEa,OAAOC,eAQvD,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,6BCwHDkM,OAlKf,YAAwC,IAAZvN,EAAW,EAAXA,QAElBvC,EAAc2E,aAAY,SAAAvH,GAAK,OAAIA,EAAM4C,eACvCC,EAA0BD,EAA1BC,MAAOrC,EAAmBoC,EAAnBpC,MAAOM,EAAY8B,EAAZ9B,QAEhB6F,EAAWa,cAEXrG,EAAOoG,aAAY,SAAAvH,GAAK,OAAIA,EAAMmB,QAClCS,EAAW2F,aAAY,SAAAvH,GAAK,OAAEA,EAAM4B,YACpCG,EAAUwF,aAAY,SAAAvH,GAAK,OAAEA,EAAM+B,WAClCD,EAA4BF,EAA5BE,SAASD,EAAmBD,EAAnBC,gBACTI,EAA0BF,EAA1BE,QAAQD,EAAkBD,EAAlBC,cACR5B,EAAoBe,EAApBf,QAAQgB,EAAYD,EAAZC,UACfT,QAAQC,IAAIQ,GACZ,IAAIuR,EAAavR,EAAUwN,QAAO,SAACC,EAAKxN,GAAN,OAAewN,EAAMxN,EAAKI,QAAQoI,MAAQxI,EAAKsN,WAAU,GAAGG,QAAQ,GAClG8D,GAAiBD,EAAa,IAAM,EAAI,IAAI7D,QAAQ,GAEpD+D,EAAcxE,OAAOsE,GAgCzB,OA1BApH,qBAAU,WACAvJ,GACNmD,EAAQM,KAAK,YAEdkB,EAASwH,MACTxH,GViEiC,SAACA,GAErCA,EAAS,CACLxG,KAAK5F,OUnENoM,GVmF+B,SAACA,GACnCA,EAAS,CACLxG,KAAK1F,OUpFLkG,QAAQC,IAAIQ,GACRN,IACAqE,EAAQM,KAAR,iBAAuB5C,EAAM+O,UAC7BjL,EAAS,CAAExG,KAAM3D,QAEtB,CAACmK,EAAS7F,EAASqE,IAatBxE,QAAQC,IAAI,SAER,iCACI,eAAC,GAAD,CAAeoR,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,KACpC/Q,GAAWhB,GAAS0B,GAAUG,EAAQ,eAAC,GAAD,IAAW,gBAAC4D,GAAA,EAAD,WAC9C,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UACI,gBAACqG,GAAA,EAAUnE,KAAX,WACG,2CAEA,+BACI,iDACI7G,QAIZ,gBAACgL,GAAA,EAAUnE,KAAX,WACI,iDACA,+BACI,+CACC1G,QAIT,gBAAC6K,GAAA,EAAUnE,KAAX,WACI,8CACEtH,EAA+B,IAArBA,EAAU+L,OAAe,eAAC,GAAD,CAAS3G,QAAQ,OAAjB,gCAG7B,eAACqG,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,SACKpF,EAAUM,KAAI,SAAAL,GAAI,OAClB,eAACwL,GAAA,EAAUnE,KAAX,UACO,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAACL,GAAA,EAAD,CAAOtC,IAAK/H,EAAKI,QAAQ4H,UAAUC,MAAOqC,IAAKtK,EAAKI,QAAQ4H,UAAUnD,KAAM8B,OAAK,EAAC0G,SAAO,MAG7F,eAAC5I,GAAA,EAAD,UACI,eAAC,QAAD,CAAMuC,GAAE,mBAAchH,EAAKI,QAAQA,SAAnC,SAA+CJ,EAAKI,QAAQ4H,UAAUnD,SAG1E,gBAACJ,GAAA,EAAD,CAAKiG,GAAI,EAAT,UACK1K,EAAKsN,SADV,YAC8BtN,EAAKI,QAAQoI,MAD3C,aAC6DxI,EAAKsN,SAAWtN,EAAKI,QAAQoI,OAAOiF,QAAQ,UAX/FzN,EAAKI,QAAQA,cAiBzC,eAAC,GAAD,YAOlB,eAACqE,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAAC7C,GAAA,EAAD,UACI,gBAAC2D,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UACI,eAACqG,GAAA,EAAUnE,KAAX,UACI,kDAGJ,eAACmE,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,oBAAa6M,UAIrB,eAAC9F,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,oBAAa8M,UAWrB,eAAC/F,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,oBAAa+M,UAKrBrS,GAAQ,eAACqM,GAAA,EAAUnE,KAAX,UACH,eAAC,GAAD,CAASlC,QAAQ,SAAjB,SAA2BhG,MAGhC,eAACqM,GAAA,EAAUnE,KAAX,UACI,eAACnC,GAAA,EAAD,CACIpG,KAAK,SACLmG,UAAU,YACV2G,SAAwB,IAAd7L,EACVuH,QA/Gb,WACfhC,ELTmB,SAAC9D,GAAD,gDAAW,WAAO8D,EAAUC,GAAjB,wBAAAC,EAAA,sEAE9BF,EAAS,CACLxG,KAAM9D,KAHoB,EAQ1BuK,IADazE,EAPa,EAO1BD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZM,SAiBPC,KAAM0G,KAAN,mBAEpB,CAAE,MAAQ7K,EAAM,QAAUV,EAASkL,SAClCvG,GApB0B,gBAiBtBK,EAjBsB,EAiBtBA,KAMRR,EAAS,CACLxG,KAAM7D,GACN+D,QAAS8G,IAGbR,EAAS,CACLxG,KAAMzF,EACN2F,QAAS8G,IAGbjD,aAAawD,WAAW,aAjCM,kDAqC9Bf,EAAS,CACLxG,KAAM5D,GACN8D,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAzCc,0DAAX,wDKSVyL,CAAY,CACjB1R,UAAWA,EACXS,gBAAiBA,EACjBG,cAAeA,EAChB2Q,WAAYA,EAGZE,WAAYA,MAmGS,yC,OCwEjBE,OAzNf,YAA0C,IAAnB5G,EAAkB,EAAlBA,MAAOhH,EAAW,EAAXA,QACpByM,EAAUzF,EAAMS,OAAOlG,GACvBC,EAAWa,cAGjB,EAAgCxC,oBAAS,GAAzC,oBAAiBgO,GAAjB,WAEMlQ,EAAeyE,aAAY,SAAAvH,GAAK,OAAIA,EAAM8C,gBAC1CmQ,EAAc1L,aAAY,SAAAvH,GAAK,OAAEA,EAAMqD,eACvC6P,EAAc3L,aAAY,SAAAvH,GAAK,OAAEA,EAAMuD,eACvCtB,EAA2BiR,EAA3BjR,QACOH,GADoBoR,EAAnB1P,QAAmB0P,EAAXzP,QACYwP,EAA3B3P,MAA2B2P,EAArBnR,UACLe,GAD0BoQ,EAAZnS,QACYgC,EAA1BD,OAAOrC,EAAmBsC,EAAnBtC,MAAOJ,EAAY0C,EAAZ1C,QAEhB4C,EAAWuE,aAAY,SAAAvH,GAAK,OAAIA,EAAMgD,YACNmQ,GAAenQ,EAA7C5C,QAA6C4C,EAAxBlC,SAEvBsC,EAAemE,aAAY,SAAAvH,GAAK,OAAIA,EAAMoD,gBACNgQ,GAAmBhQ,EAArDhD,QAAqDgD,EAA5BtC,SAGzBqB,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAGH/B,GAAYI,IACbqC,EAAM8P,WAAa9P,EAAMwQ,MAAMzE,QAAO,SAACC,EAAKxN,GAAN,OAAewN,EAAMxN,EAAKiS,OAASjS,EAAKsN,WAAU,GAAGG,QAAQ,IAevGvD,qBAAU,WAEDpJ,GACDgD,EAAQM,KAAK,WAGZ5C,GAASsQ,GAActQ,EAAM+O,UAAYvD,OAAOuD,IAAYwB,GAC7DzM,EAAS,CAAExG,KAAM9C,KACjBsJ,EAAS,CAAExG,KAAMnC,KAEjB2I,EAASqK,GAAgBY,KACL,QAAZ/O,EAAM0Q,OACTC,OAAOC,OAGRT,GAAY,GA1BA,WACpB,IAAMU,EAASC,SAASC,cAAc,UACtCF,EAAOvT,KAAO,kBACduT,EAAOtK,IAAM,2HACbsK,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZd,GAAY,IAEhBW,SAASI,KAAKC,YAAYN,GAgBlBO,MAKT,CAACtN,EAAU9D,EAAO+O,EAASuB,EAAYC,IAG1C,IAOMc,EAAqB,SAACC,EAAcvC,GACtCjL,EN8MkB,SAACD,EAAGkL,GAAJ,gDAAc,WAAMjL,EAASC,GAAf,gBAAAC,EAAA,sEAEhCF,EAAS,CACLxG,KAAMvD,KAKNgK,IADA1E,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZQ,SAiB1BC,KAAM0G,KAAN,eAEF,CAAC,cAAgBhH,EAAG,QAAUkL,GAC9B9K,GApB4B,OAsBhCH,EAAS,CACLxG,KAAMtD,GACNwD,SAAS,IAxBmB,gDA6BhCsG,EAAS,CACLxG,KAAMrD,GACNuD,QAAS,KAAM+G,SAASD,KAAKE,UA/BD,yDAAd,wDM9MThE,CAAY8Q,EAAcvC,IACnCjL,EAASqK,GAAgBY,KAEvBwC,EAAqB,SAACD,EAAcvC,GACtCjL,EN8OkB,SAACD,EAAGkL,GAAJ,gDAAc,WAAMjL,EAASC,GAAf,gBAAAC,EAAA,sEAEhCF,EAAS,CACLxG,KAAMpD,KAKN6J,IADA1E,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,qBAZQ,SAiB1BC,KAAM0G,KAAN,eAEF,CAAC,cAAgBhH,EAAG,QAAUkL,GAC9B9K,GApB4B,OAsBhCH,EAAS,CACLxG,KAAMnD,GACNqD,SAAS,IAxBmB,gDA6BhCsG,EAAS,CACLxG,KAAMlD,GACNoD,QAAS,KAAM+G,SAASD,KAAKE,UA/BD,yDAAd,wDM9OT9D,CAAY4Q,EAAcvC,IACnCjL,EAASqK,GAAgBY,KAE7B,OAAOxR,GAAS0B,GAAUG,EACtB,eAAC,GAAD,IACAzB,EACA,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAEnB,iCACI,4CAAcqC,EAAM+O,WACpB,gBAAC/L,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,gBAACc,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UACI,gBAACqG,GAAA,EAAUnE,KAAX,WACI,2CACA,+BAAG,6CAAH,IAA4B7F,EAAMwK,QAAQnH,QAC1C,+BAAG,8CAAwB,oBAAGmO,KAAI,iBAAYxR,EAAMwK,QAAQ4B,OAAjC,SAA2CpM,EAAMwK,QAAQ4B,WACpF,+BACI,iDACCpM,EAAMsN,cAUf,gBAACtD,GAAA,EAAUnE,KAAX,WACI,iDACA,+BACI,+CACC7F,EAAMb,oBAUf,gBAAC6K,GAAA,EAAUnE,KAAX,WACI,8CACwB,IAAvB7F,EAAMwQ,MAAMlG,OAAe,eAAC,GAAD,CAAS3G,QAAQ,OAAjB,4BAGpB,eAACqG,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,SACK3D,EAAMwQ,MAAM3R,KAAI,SAAAL,GAAI,OACjB,eAACwL,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAACL,GAAA,EAAD,CAAOtC,IAAK/H,EAAKI,QAAQ4H,UAAUC,MAAOqC,IAAKtK,EAAKI,QAAQ4H,UAAUnD,KAAM8B,OAAK,EAAC0G,SAAO,MAG7F,eAAC5I,GAAA,EAAD,UACI,eAAC,QAAD,CAAMuC,GAAE,mBAAchH,EAAKI,QAAQA,SAAnC,SAA+CJ,EAAKI,QAAQ4H,UAAUnD,SAG1E,gBAACJ,GAAA,EAAD,CAAKiG,GAAI,EAAT,UACK1K,EAAKsN,SADV,YAC8BtN,EAAKiS,OADnC,aACsDjS,EAAKsN,SAAWtN,EAAKiS,QAAQxE,QAAQ,MAE3F,eAAChJ,GAAA,EAAD,UACKzE,EAAKiT,SAEV,eAACxO,GAAA,EAAD,UACmB,aAAbzE,EAAKiT,OAAsB,eAAC/N,GAAA,EAAD,CACzBpG,KAAK,SACXmG,UAAU,YAAYqC,QAAS,kBAAIyL,EAAmB/S,EAAK8S,cAActR,EAAM+O,UAFhD,0BAIG,aAAbvQ,EAAKiT,QAAkC,aAAbjT,EAAKiT,QACzC,eAAC/N,GAAA,EAAD,CACEpG,KAAK,SACPmG,UAAU,YAAWqC,QAAS,kBAAIuL,EAAmB7S,EAAK8S,cAActR,EAAM+O,UAF9E,gCAtBAvQ,EAAK8S,4BAwCtD,eAACrO,GAAA,EAAD,CAAKiG,GAAI,EAAT,SACI,eAAC7C,GAAA,EAAD,UACI,gBAAC2D,GAAA,EAAD,CAAWrG,QAAQ,QAAnB,UACI,eAACqG,GAAA,EAAUnE,KAAX,UACI,kDAGJ,eAACmE,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,oBAAajD,EAAMiP,oBAI3B,eAACjF,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,oBAAa,UAWrB,eAAC+G,GAAA,EAAUnE,KAAX,UACI,gBAAC7C,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,qBACA,gBAACA,GAAA,EAAD,oBAAajD,EAAMiP,kCC/EhDyC,OAnHf,YAAgD,IAAnBpP,EAAkB,EAAlBA,QAEnBwB,GAFqC,EAATwF,MAEjB3E,eAEXzH,EAAcwH,aAAY,SAAAvH,GAAK,OAAIA,EAAMD,eACvCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUM,EAAgBR,EAAhBQ,MAAOD,EAASP,EAATO,KAEnCO,EAAgB0G,aAAY,SAAAvH,GAAK,OAAIA,EAAMa,iBAChC2T,EAA8D3T,EAAvET,QAA+BqU,EAAwC5T,EAA/CL,MAA6BkU,EAAkB7T,EAA3BC,QAE9CC,EAAgBwG,aAAY,SAAAvH,GAAK,OAAIA,EAAMe,iBAChC4T,EAAuF5T,EAAhGX,QAA+BwU,EAAiE7T,EAAxEP,MAA6BqU,EAA2C9T,EAApDD,QAAiCgU,EAAmB/T,EAA5BL,QAIpEyB,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAEJ8C,EAAUE,EAAQO,SAASoG,OAC/BP,qBAAU,WACN5E,EAAS,CAAExG,KAAMjH,IAEZiJ,EAAS0I,SACV1F,EAAQM,KAAK,UAGboP,EACA1P,EAAQM,KAAR,yBAA+BqP,EAAeC,IAA9C,UAEApO,EAASwE,GAAalG,MAG3B,CAAC0B,EAAUxB,EAAShD,EAAUuS,EAAeG,EAAeC,EAAgB7P,IAG/E,IAAM+P,EAAgB,SAACtO,GAEf8M,OAAOyB,QAAQ,kDACftO,EhBsDiB,SAACD,GAAD,gDAAQ,WAAOC,EAAUC,GAAjB,oBAAAC,EAAA,sEAE7BF,EAAS,CACLxG,KAAMvH,IAHmB,EAQzBgO,IADazE,EAPY,EAOzBD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBkK,cAAc,UAAD,OAAY9O,EAAS+O,SAbb,SAiBNlK,KAAMwH,OAAN,+BACK9H,EADL,KAEnBI,GAnByB,cAiBrBK,KAKRR,EAAS,CACLxG,KAAMtH,IAvBmB,kDA4B7B8N,EAAS,CACLxG,KAAMrH,EACNuH,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAhCa,0DAAR,wDgBtDR6N,CAAcxO,KAQ/B,OACI,iCACI,gBAACb,GAAA,EAAD,CAAKS,UAAU,qBAAf,UACI,eAACR,GAAA,EAAD,UACI,6CAGJ,eAACA,GAAA,EAAD,CAAKQ,UAAU,aAAf,SACI,gBAACC,GAAA,EAAD,CAAQD,UAAU,OAAOqC,QAZZ,WACzBhC,EhByFqB,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAE3BF,EAAS,CACLxG,KAAMpH,IAHiB,EAQvB6N,IADazE,EAPU,EAOvBD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBkK,cAAc,UAAD,OAAY9O,EAAS+O,SAbf,SAiBJlK,KAAM0G,KAAN,wBAEnB,GACA5G,GApBuB,gBAiBnBK,EAjBmB,EAiBnBA,KAKRR,EAAS,CACLxG,KAAMnH,EACNqH,QAAS8G,IAxBc,kDA6B3BR,EAAS,CACLxG,KAAMlH,EACNoH,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjCW,0DAAN,0DgB9ET,UACI,oBAAGf,UAAU,gBADjB,0BAMPkO,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASjO,QAAQ,SAAjB,SAA2BiO,IAG1CE,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASpO,QAAQ,SAAjB,SAA2BoO,IAE1CxU,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAE1B,iCACI,gBAACiR,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,2CACA,wCACA,6BAIR,iCACKrG,EAASyB,KAAI,SAAAhB,GAAO,OACjB,gCACI,8BAAKA,EAAQqU,MACb,8BAAKrU,EAAQwF,OACb,oCAAMxF,EAAQmJ,SACd,8BAAKnJ,EAAQ2U,WACb,8BAAK3U,EAAQ4U,QAEb,gCACI,eAAC,iBAAD,CAAejN,GAAE,yBAAoB3H,EAAQqU,IAA5B,SAAjB,SACI,eAACxO,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,SACI,oBAAGA,UAAU,oBAIrB,eAACC,GAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,SAASqC,QAAS,kBAAMqM,EAActU,EAAQqU,MAAjF,SACI,oBAAGzO,UAAU,wBAfhB5F,EAAQqU,aAsB7B,eAAC,GAAD,CAAUxU,MAAOA,EAAOD,KAAMA,EAAMuK,SAAS,WC2G1D0K,OArNf,YAAgD,IAAnBpJ,EAAkB,EAAlBA,MAAOhH,EAAW,EAAXA,QAE1BkE,EAAY8C,EAAMS,OAAOlG,GAE/B,EAAwB1B,mBAAS,IAAjC,oBAAOkB,EAAP,KAAa2J,EAAb,KACA,EAA0B7K,mBAAS,GAAnC,oBAAO6E,EAAP,KAAc2L,EAAd,KACA,EAA0BxQ,mBAAS,IAAnC,oBAAOsE,EAAP,KAAcmM,EAAd,KACA,EAA0BzQ,mBAAS,IAAnC,oBAAOsQ,EAAP,KAAcI,EAAd,KACA,EAAgC1Q,mBAAS,IAAzC,oBAAOqQ,EAAP,KAAiBM,EAAjB,KACA,EAAwC3Q,mBAAS,GAAjD,oBAAO4Q,EAAP,KAAqBC,EAArB,KACA,EAAsC7Q,mBAAS,IAA/C,oBAAO8Q,EAAP,KAAoBC,EAApB,KACA,EAAkC/Q,oBAAS,GAA3C,oBAAOgR,EAAP,KAAkBC,EAAlB,KAEMtP,EAAWa,cAEX/G,EAAiB8G,aAAY,SAAAvH,GAAK,OAAIA,EAAMS,kBAC1CD,EAA4BC,EAA5BD,MAAOJ,EAAqBK,EAArBL,QAASM,EAAYD,EAAZC,QAElBM,EAAgBuG,aAAY,SAAAvH,GAAK,OAAIA,EAAMgB,iBAClCkV,EAAgElV,EAAvER,MAA6B2V,EAA0CnV,EAAnDZ,QAAiCgW,EAAkBpV,EAA3BF,QAGpDyK,qBAAU,WAEF6K,GACAzP,EAAS,CAAExG,KAAM7G,IACjB6L,EAAQM,KAAK,uBAER/E,EAAQwF,MAAQxF,EAAQqU,MAAQ1G,OAAOhF,IAGxCwG,EAAQnP,EAAQwF,MAChBsP,EAAS9U,EAAQmJ,OACjB4L,EAAS/U,EAAQ4I,OACjBoM,EAAShV,EAAQ4U,OACjBK,EAAYjV,EAAQ2U,UACpBQ,EAAgBnV,EAAQkV,cACxBG,EAAerV,EAAQoV,cARvBnP,EAAS0E,GAAmBhC,MAerC,CAAC1C,EAAUjG,EAAS2I,EAAWlE,EAASiR,IAE3C,IAcMC,EAAiB,yCAAG,WAAO9Q,GAAP,wBAAAsB,EAAA,6DAChByP,EAAO/Q,EAAEa,OAAOmQ,MAAM,IACtBC,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAcrN,GAE9B4M,GAAa,GAPS,SAUZnP,EAAS,CACXC,QAAS,CACL,eAAgB,wBAZN,SAgBKC,KAAM0G,KAAK,wBAAyB8I,EAAU1P,GAhBnD,gBAgBVK,EAhBU,EAgBVA,KAGRsO,EAAStO,GACT8O,GAAa,GApBK,kDAuBlBA,GAAa,GAvBK,0DAAH,sDA2BvB,OACI,iCACI,eAAC,QAAD,CAAM5N,GAAG,qBAAT,qBAIA,gBAAC,GAAD,WACI,+CACC8N,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAS1P,QAAQ,SAAjB,SAA2B0P,IAE1C9V,EAAU,eAAC,GAAD,IAAaI,EAAQ,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAEnD,gBAAC6E,GAAA,EAAD,CAAMC,SAtDJ,SAACC,GACnBA,EAAEC,iBACFmB,EjByHqB,SAACjG,GAAD,gDAAa,WAAOiG,EAAUC,GAAjB,wBAAAC,EAAA,sEAElCF,EAAS,CACLxG,KAAMhH,IAHwB,EAQ9ByN,IADazE,EAPiB,EAO9BD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBkK,cAAc,UAAD,OAAY9O,EAAS+O,SAbR,SAiBXlK,KAAMiH,IAAN,+BACKvN,EAAQqU,IADb,KAEnBrU,EACAoG,GApB8B,gBAiB1BK,EAjB0B,EAiB1BA,KAKRR,EAAS,CACLxG,KAAM/G,EACNiH,QAAS8G,IAIbR,EAAS,CACLxG,KAAM1H,EACN4H,QAAS8G,IA9BqB,kDAmClCR,EAAS,CACLxG,KAAM9G,EACNgH,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAvCkB,0DAAb,wDiBzHZsP,CAAc,CACnB5B,IAAK1L,EACLnD,OACA2D,QACAP,QACAgM,QACAD,WACAO,eACAE,kBA4CY,UAEI,gBAACzQ,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,OACLuP,YAAY,aACZrJ,MAAOH,EACPC,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,aAK1C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,SACLuP,YAAY,cACZrJ,MAAOwD,EACP1D,SAAU,SAACZ,GAAD,OAAOiQ,EAASjQ,EAAEa,OAAOC,aAM3C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,OACLuP,YAAY,cACZrJ,MAAOiD,EACPnD,SAAU,SAACZ,GAAD,OAAOkQ,EAASlQ,EAAEa,OAAOC,UAIvC,eAAChB,GAAA,EAAKuR,KAAN,CACIlQ,GAAG,aACH+L,MAAM,cACN9C,QAAM,EACNxJ,SAAUkQ,IAIbL,GAAa,eAAC,GAAD,OAKlB,gBAAC3Q,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,OACLuP,YAAY,cACZrJ,MAAOiP,EACPnP,SAAU,SAACZ,GAAD,OAAOmQ,EAASnQ,EAAEa,OAAOC,aAK3C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,eAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,SACLuP,YAAY,cACZrJ,MAAOuP,EACPzP,SAAU,SAACZ,GAAD,OAAOsQ,EAAgBtQ,EAAEa,OAAOC,aAKlD,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,OACLuP,YAAY,iBACZrJ,MAAOgP,EACPlP,SAAU,SAACZ,GAAD,OAAOoQ,EAAYpQ,EAAEa,OAAOC,aAK9C,gBAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,cAAtB,UACI,eAACxI,GAAA,EAAKyI,MAAN,0BACA,eAACzI,GAAA,EAAKW,QAAN,CAEI7F,KAAK,OACLuP,YAAY,oBACZrJ,MAAOyP,EACP3P,SAAU,SAACZ,GAAD,OAAOwQ,EAAexQ,EAAEa,OAAOC,aAMjD,eAACE,GAAA,EAAD,CAAQpG,KAAK,SAASqG,QAAQ,UAA9B,8BCzHbqQ,OAnFf,YAAuC,IAAZ1R,EAAW,EAAXA,QAEjBwB,EAAWa,cAEXrE,EAAYoE,aAAY,SAAAvH,GAAK,OAAIA,EAAMmD,aACrC/C,EAA2B+C,EAA3B/C,QAASI,EAAkB2C,EAAlB3C,MAAO0C,EAAWC,EAAXD,OAGhBf,EADUoF,aAAY,SAAAvH,GAAK,OAAIA,EAAMkC,aACrCC,SAcR,OAVAoJ,qBAAU,WACFpJ,GAAYA,EAAS0I,QACrBlE,ETiOc,yCAAM,WAAOA,EAAUC,GAAjB,wBAAAC,EAAA,sEAExBF,EAAS,CACLxG,KAAMzC,KAHc,EAQpBkJ,IADazE,EAPO,EAOpBD,UAAaC,SAGX2E,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBkK,cAAc,UAAD,OAAY9O,EAAS+O,SAblB,SAiBDlK,KAAMC,IAAN,eAEnBH,GAnBoB,gBAiBhBK,EAjBgB,EAiBhBA,KAKRR,EAAS,CACLxG,KAAMxC,GACN0C,QAAS8G,IAxBW,kDA6BxBR,EAAS,CACLxG,KAAMvC,GACNyC,QAAS,KAAM+G,UAAY,KAAMA,SAASD,KAAKiE,OACzC,KAAMhE,SAASD,KAAKiE,OACpB,KAAM/D,UAjCQ,0DAAN,yDS/NdlC,EAAQM,KAAK,YAGlB,CAACkB,EAAUxB,EAAShD,IAInB,iCACI,yCACC/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAE1B,gBAACiR,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCACKpD,EAAOxB,KAAI,SAAAmB,GAAK,OACb,gCACI,8BAAKA,EAAM+O,UACX,8BAAK/O,EAAMwK,QAAQnH,OACnB,8BAAKrD,EAAMgP,UAAUtE,UAAU,EAAG,MAClC,oCAAM1K,EAAMiP,eAgBZ,8BACI,eAAC,iBAAD,CAAezJ,GAAE,iBAAYxF,EAAM+O,SAAnC,SACI,eAACrL,GAAA,EAAD,CAAQC,QAAQ,QAAQF,UAAU,SAAlC,2BAtBHzD,EAAM+O,qBCepCkF,OAxDf,YAAqC,IAAV3R,EAAS,EAATA,QACjBwB,EAAWa,cACXL,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM0D,mBAEjCvB,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SACC3B,EAAkC2G,EAAlC3G,MAAMJ,EAA4B+G,EAA5B/G,QAASsD,EAAmByD,EAAnBzD,gBASvB,OARA6H,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,ECDsB,yCAAM,WAAOA,GAAP,oBAAAE,EAAA,sEAE5BF,EAAS,CACLxG,KAAMjC,KAGJ4I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARI,SAYLC,KAAMC,IACzB,wBACAH,GAdwB,gBAYpBK,EAZoB,EAYpBA,KAKRR,EAAS,CACLxG,KAAMlC,GACNoC,QAAS8G,IAnBe,kDAyB5BR,EAAS,CACLxG,KAAMhC,GACNkC,QAAQ,KAAM+G,SAASD,KAAKE,UA3BJ,0DAAN,yDDExB,CAACV,EAASxE,IACZxB,QAAQC,IAAI8C,GAER,+BACKtD,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BkD,EACK,iCACF,mDACA,gBAAC+N,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,uCACA,wCACA,0CACA,8CAIP,iCACI5C,EAAgBhC,KAAI,SAAAyF,GAAI,OACrB,gCACK,8BAAKA,EAAKjB,OACX,8BAAKiB,EAAK8H,QACV,8BAAK9H,EAAKkJ,UACV,8BACI,eAAC9J,GAAA,EAAD,CAASoC,QAAS,kBAAIhC,GCkErCoQ,EDlE2D5P,EAAKmK,SCkEjE,yCAAS,WAAO3K,GAAP,oBAAAE,EAAA,sEAE7BF,EAAS,CACLxG,KAAMjC,KAGJ4I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARK,SAYNC,KAAMC,IAAN,4BACE8P,EADF,KAEnBjQ,GAdyB,gBAYrBK,EAZqB,EAYrBA,KAKRR,EAAS,CACLxG,KAAMlC,GACNoC,QAAS8G,IAnBgB,kDAyB7BR,EAAS,CACLxG,KAAMhC,GACNkC,QAAQ,KAAM+G,SAASD,KAAKE,UA3BH,0DAAT,4DAAC0P,GDlEe,wBALC5P,EAAKmK,qBAa1B,+BACE,4CEUX0F,OA5Df,YAAuC,IAAV7R,EAAS,EAATA,QACnBwB,EAAWa,cACXL,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM2D,qBAEjCxB,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SACA3B,EAAmC2G,EAAnC3G,MAAMJ,EAA6B+G,EAA7B/G,QAAQuD,EAAqBwD,EAArBxD,kBAUrB,OARA4H,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,ED+BwB,yCAAM,WAAOA,GAAP,oBAAAE,EAAA,sEAE9BF,EAAS,CACLxG,KAAM7B,KAGJwI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARM,SAYPC,KAAMC,IACzB,0BACAH,GAd0B,gBAYtBK,EAZsB,EAYtBA,KAKRR,EAAS,CACLxG,KAAM9B,GACNgC,QAAS8G,IAnBiB,kDAyB9BR,EAAS,CACLxG,KAAM5B,GACN8B,QAAQ,KAAM+G,SAASD,KAAKE,UA3BF,0DAAN,yDC9B1B,CAACV,EAASxE,IACZxB,QAAQC,IAAI+C,GAER,+BACKvD,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BmD,EAEM,iCACI,qDACP,gBAAC8N,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,wCACA,wCACA,0CACA,8CAIP,iCACI3C,EAAkBjC,KAAI,SAAAyF,GAAI,OACvB,gCACI,8BAAKA,EAAKjB,OACV,8BAAKiB,EAAK8H,QACV,8BAAK9H,EAAKkJ,UACV,8BACI,eAAC9J,GAAA,EAAD,CAASoC,QAAS,kBAAIhC,GDiCrCoQ,ECjC2D5P,EAAKmK,SDiCjE,yCAAS,WAAO3K,GAAP,oBAAAE,EAAA,sEAE7BF,EAAS,CACLxG,KAAM7B,KAGJwI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARK,SAYNC,KAAMC,IAAN,4BACE8P,EADF,KAEnBjQ,GAdyB,gBAYrBK,EAZqB,EAYrBA,KAKRR,EAAS,CACLxG,KAAM9B,GACNgC,QAAS8G,IAnBgB,kDAyB7BR,EAAS,CACLxG,KAAM5B,GACN8B,QAAQ,KAAM+G,SAASD,KAAKE,UA3BH,0DAAT,4DAAC0P,GCjCe,yBALC5P,EAAKmK,qBAc5B,+BACK,4CCKZ2F,OAvDf,YAAqC,IAAV9R,EAAS,EAATA,QACjBwB,EAAWa,cACXL,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM8D,mBACjCtD,EAAkC2G,EAAlC3G,MAAMJ,EAA4B+G,EAA5B/G,QAAS0D,EAAmBqD,EAAnBrD,gBAEf3B,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SAQP,OAPAoJ,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,EF+NsB,yCAAM,WAAOA,GAAP,oBAAAE,EAAA,sEAE5BF,EAAS,CACLxG,KAAKrB,KAGHgI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARI,SAYLC,KAAMC,IACzB,wBACAH,GAdwB,gBAYpBK,EAZoB,EAYpBA,KAKRR,EAAS,CACLxG,KAAMtB,GACNwB,QAAS8G,IAnBe,kDAyB5BR,EAAS,CACLxG,KAAMpB,GACNsB,QAAQ,KAAM+G,SAASD,KAAKE,UA3BJ,0DAAN,yDE9NxB,CAACV,EAASxE,IAER,+BACK/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BsD,EACK,iCACF,gDACA,gBAAC2N,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,+CAIP,iCACIxC,EAAgBpC,KAAI,SAAAyF,GAAI,OACrB,gCACI,8BAAKA,EAAKgN,gBACV,8BAAKhN,EAAKyK,QAAQvE,QAAQnH,OAC1B,8BAAKiB,EAAKyK,QAAQvE,QAAQ4B,QAC1B,8BACI,eAAC1I,GAAA,EAAD,CAASoC,QAAS,kBAAIhC,GFmOzBuQ,EEnO2D/P,EAAKgN,cFmOjE,yCAAS,WAAOxN,GAAP,oBAAAE,EAAA,sEAEzCF,EAAS,CACLxG,KAAKrB,KAGHgI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARiB,SAYlBC,KAAMC,IAAN,8BACIiQ,GACvBpQ,GAdqC,gBAYjCK,EAZiC,EAYjCA,KAKRR,EAAS,CACLxG,KAAMtB,GACNwB,QAAS8G,IAnB4B,kDAyBzCR,EAAS,CACLxG,KAAMpB,GACNsB,QAAQ,KAAM+G,SAASD,KAAKE,UA3BS,0DAAT,4DAAC6P,GEnOG,2BALC/P,EAAKgN,0BAa1B,+BACG,4CCMZgD,OAvDf,YAAoC,IAAVhS,EAAS,EAATA,QAChBwB,EAAWa,cACXL,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM6D,kBACjCrD,EAAiC2G,EAAjC3G,MAAMJ,EAA2B+G,EAA3B/G,QAASyD,EAAkBsD,EAAlBtD,eAEf1B,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SAQP,OAPAoJ,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,EHgSqB,yCAAM,WAAOA,GAAP,oBAAAE,EAAA,sEAE3BF,EAAS,CACLxG,KAAKjB,KAGH4H,EAAS,CACXC,QAAS,CACL,eAAgB,qBARG,SAYJC,KAAMC,IACzB,uBACAH,GAduB,gBAYnBK,EAZmB,EAYnBA,KAKRR,EAAS,CACLxG,KAAMlB,GACNoB,QAAS8G,IAnBc,kDAyB3BR,EAAS,CACLxG,KAAMhB,GACNkB,QAAQ,KAAM+G,SAASD,KAAKE,UA3BL,0DAAN,yDG/RvB,CAACV,EAASxE,IAER,+BACK/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BqD,EACK,iCACF,mDACA,gBAAC4N,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,8CAIP,iCACIzC,EAAenC,KAAI,SAAAyF,GAAI,OACpB,gCACI,8BAAKA,EAAKgN,gBACT,8BAAKhN,EAAKyK,QAAQvE,QAAQnH,OAC3B,8BAAKiB,EAAKyK,QAAQvE,QAAQ4B,QAC1B,8BACI,eAAC1I,GAAA,EAAD,CAASoC,QAAS,kBAAIhC,GHoS1BuQ,EGpS2D/P,EAAKgN,cHoSjE,yCAAS,WAAOxN,GAAP,oBAAAE,EAAA,sEAExCF,EAAS,CACLxG,KAAKjB,KAGH4H,EAAS,CACXC,QAAS,CACL,eAAgB,qBARgB,SAYjBC,KAAMC,IAAN,6BACGiQ,GACtBpQ,GAdoC,gBAYhCK,EAZgC,EAYhCA,KAKRR,EAAS,CACLxG,KAAMlB,GACNoB,QAAS8G,IAnB2B,kDAyBxCR,EAAS,CACLxG,KAAMhB,GACNkB,QAAQ,KAAM+G,SAASD,KAAKE,UA3BQ,0DAAT,4DAAC6P,GGpSI,0BALC/P,EAAKgN,0BAa1B,+BACG,4CCgCZiD,OAhFf,YAAkC,IAAVjS,EAAS,EAATA,QACdwB,EAAWa,cACjB,EAAqBxC,mBAAS,IAA9B,oBAAOqS,EAAP,KAAYxH,EAAZ,KACA,EAAuB7K,mBAAS,IAAhC,oBAAOsD,EAAP,KAAaoN,EAAb,KACA,EAA6B1Q,mBAAS,WAAtC,oBAAOsS,EAAP,KAAgB3B,EAAhB,KACA,EAA2B3Q,mBAAS,IAApC,oBAAOuS,EAAP,KAAeC,EAAf,KACA,EAAuBxS,mBAAS,IAAhC,oBAAOyS,EAAP,KAAajC,EAAb,KACA,EAA6BxQ,mBAAS,IAAtC,oBAAO0S,EAAP,KAAgBC,EAAhB,KACMxQ,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM+D,gBAEjC5B,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SACC3B,EAA+B2G,EAA/B3G,MAAMJ,EAAyB+G,EAAzB/G,QAAS2D,EAAgBoD,EAAhBpD,aAkBvB,OAjBAwH,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,ECjBmB,yCAAM,WAAOA,GAAP,UAAAE,EAAA,sDAC7B,IACIF,EAAS,CACLxG,KAAMb,KAQVqH,EAAS,CACLxG,KAAMd,GACNgB,QAAQ,KAKd,MAAOG,GACLmG,EAAS,CACLxG,KAAMZ,GACNc,QAAQG,EAAM4G,SAASD,KAAKE,UArBP,2CAAN,yDDkBrB,CAACV,EAASxE,IAYR,+BACK/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BuD,EACK,+BACF,eAAC,GAAD,UACG,gBAACsB,GAAA,EAAD,CAAMC,SAnBP,SAACC,GACnBA,EAAEC,iBACFmB,ECK6B,SAACoQ,EAAIM,EAAK/O,EAAMgP,EAASC,EAAQE,EAAMC,GAAvC,gDAAoD,WAAO/Q,GAAP,gBAAAE,EAAA,sEAEjFF,EAAS,CACLxG,KAAMb,KAGJwH,EAAS,CACXC,QAAS,CACL,eAAgB,qBARyD,SAY1DC,KAAM0G,KAAN,qCACWqJ,GAC9B,CAAC,KAAOM,EAAK,MAAQ/O,EAAM,SAAWgP,EAAS,QAAUC,EAAQ,MAAQE,EAAM,SAAWC,GAC1F5Q,GAf6E,cAYzEK,KAMRR,EAAS,CACLxG,KAAMd,GACNgB,QAAS,KApBoE,kDA0BjFsG,EAAS,CACLxG,KAAMZ,GACNc,QAAQ,KAAM+G,SAASD,KAAKE,UA5BiD,0DAApD,sDDLpBuQ,CAAsBzV,EAASmP,SAAS+F,EAAK/O,EAAMgP,EAASC,EAAQE,EAAMC,IACnF7H,EAAQ,IACR6F,EAAS,IACTC,EAAY,WACZ6B,EAAW,IACXhC,EAAS,IACTmC,EAAY,KAWO,UACH,gBAACtS,GAAA,EAAKuI,MAAN,WACA,eAACvI,GAAA,EAAKyI,MAAN,mBACA,eAACzI,GAAA,EAAKW,QAAN,CAAc7F,KAAK,OAAOuP,YAAY,OAAOrJ,MAAOgR,EAClDlR,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,UACpC,eAAChB,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAAc7F,KAAK,OAAOuP,YAAY,QAASrJ,MAAOiC,EACpDnC,SAAU,SAACZ,GAAD,OAAOmQ,EAASnQ,EAAEa,OAAOC,UACrC,eAAChB,GAAA,EAAKyI,MAAN,uBACA,gBAACzI,GAAA,EAAKW,QAAN,CAAcyD,GAAG,SAAUpD,MAAOiR,EAChCnR,SAAU,SAACZ,GAAD,OAAOoQ,EAAYpQ,EAAEa,OAAOC,QADxC,UAEA,8CACA,8CACA,4CACA,qDAEA,eAAChB,GAAA,EAAKyI,MAAN,sBACA,eAACzI,GAAA,EAAKW,QAAN,CAAcyD,GAAG,WAAWtJ,KAAK,OAAOuP,YAAY,UAAWrJ,MAAOkR,EACpEpR,SAAU,SAACZ,GAAD,OAAOiS,EAAWjS,EAAEa,OAAOC,UACvC,eAAChB,GAAA,EAAKyI,MAAN,oBACA,eAACzI,GAAA,EAAKW,QAAN,CAAc7F,KAAK,OAAOuP,YAAY,QAASrJ,MAAOoR,EACpDtR,SAAU,SAACZ,GAAD,OAAOiQ,EAASjQ,EAAEa,OAAOC,UAErC,eAAChB,GAAA,EAAKyI,MAAN,uBACA,eAACzI,GAAA,EAAKW,QAAN,CAAc7F,KAAK,OAAOuP,YAAY,WAAYrJ,MAAOqR,EACvDvR,SAAU,SAACZ,GAAD,OAAOoS,EAAYpS,EAAEa,OAAOC,aAExC,eAACE,GAAA,EAAD,CAAQC,QAAQ,UAAUrG,KAAK,SAA/B,8BAOA,+BACE,4CEOXiX,OAhFf,YAAkC,IAAVjS,EAAS,EAATA,QACdwB,EAAWa,cACjB,EAA2BxC,mBAAS,IAApC,oBAAO6S,EAAP,KAAeC,EAAf,KACA,EAA6B9S,mBAAS,IAAtC,oBAAO0S,EAAP,KAAgBC,EAAhB,KACMxQ,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAMgE,gBAEjC7B,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SACC3B,EAA+B2G,EAA/B3G,MAAMJ,EAAyB+G,EAAzB/G,QAAS4D,EAAgBmD,EAAhBnD,aAcvB,OAbAuH,qBAAU,WDmDa,IAACwL,EClDhB5U,GAEAgD,EAAQM,KAAK,KAEjBkB,GD8CoBoQ,EC9CC5U,EAASmP,SD8CX,yCAAS,WAAO3K,GAAP,oBAAAE,EAAA,sEAE5BF,EAAS,CACLxG,KAAMT,KAGJoH,EAAS,CACXC,QAAS,CACL,eAAgB,qBARI,SAYLC,KAAMC,IAAN,4BACE8P,GACrBjQ,GAdwB,gBAYpBK,EAZoB,EAYpBA,KAKRR,EAAS,CACLxG,KAAMV,GACNY,QAAS8G,IAnBe,kDAyB5BR,EAAS,CACLxG,KAAMR,GACNU,QAAQ,KAAM+G,SAASD,KAAKE,UA3BJ,0DAAT,0DC7CrB,CAACV,EAASxE,IAQR,+BACK/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BwD,EACK,iCACC,eAAC+D,GAAA,EAAD,UACA,gBAAC1C,GAAA,EAAD,CAAMC,SAfP,SAACC,GD4EU,IAACwR,EAAIgB,EAAKpJ,EC3EvCpJ,EAAEC,iBACFmB,GD0E8BoQ,EC1EC5U,EAASmP,SD0ENyG,EC1EeF,ED0EVlJ,EC1EkB+I,ED0E5B,yCAAuB,WAAO/Q,GAAP,oBAAAE,EAAA,sEAEpDF,EAAS,CACLxG,KAAMT,KAGJoH,EAAS,CACXC,QAAS,CACL,eAAgB,qBAR4B,SAY7BC,KAAMC,IAAN,qCACW8P,EADX,YACkBgB,EADlB,YAC0BpJ,GAC7C7H,GAdgD,gBAY5CK,EAZ4C,EAY5CA,KAKRR,EAAS,CACLxG,KAAMV,GACNY,QAAS8G,IAnBuC,kDAyBpDR,EAAS,CACLxG,KAAMR,GACNU,QAAQ,KAAM+G,SAASD,KAAKE,UA3BoB,0DAAvB,wDCzE7ByQ,EAAW,IACXH,EAAY,KAWO,UACA,eAACtS,GAAA,EAAKuI,MAAN,CAAYC,UAAU,UAAtB,SACD,eAACxI,GAAA,EAAKW,QAAN,CACA7F,KAAK,OAAOuP,YAAY,UACxBrJ,MAAOwR,EACP1R,SAAU,SAACZ,GAAD,OAAOuS,EAAWvS,EAAEa,OAAOC,YAErC,eAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,WAAtB,SACD,eAACxI,GAAA,EAAKW,QAAN,CACD7F,KAAK,OAAOuP,YAAY,WACxBrJ,MAAOqR,EACPvR,SAAU,SAACZ,GAAD,OAAOoS,EAAYpS,EAAEa,OAAOC,YAEtC,eAACE,GAAA,EAAD,CAAQC,QAAQ,UAAUrG,KAAK,SAA/B,iCAGA,kDACA,gBAACsR,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,0CACA,wCACA,+CACA,qDACA,sDAIP,iCACItC,EAAatC,KAAI,SAAAyF,GAAI,OAClB,gCACK,8BAAKA,EAAK1F,UACX,8BAAK0F,EAAK0C,QACV,8BAAK1C,EAAK6Q,eAAezK,UAAU,EAAE,MACrC,8BAAKpG,EAAK4F,oBACV,8BAAK5F,EAAK8Q,kBALL9Q,EAAK1F,oBAY1B,+BACE,4CCiBXyW,OAzFf,YAA4B,IAAV/S,EAAS,EAATA,QACd,EAAuBH,mBAAS,IAAhC,oBAAOkB,EAAP,KAAY2J,EAAZ,KACA,EAA0B7K,mBAAS,IAAnC,oBAAOiK,EAAP,KAAcC,EAAd,KACA,EAA0BlK,mBAAS,IAAnC,oBAAOiL,EAAP,KAAcC,EAAd,KACMvJ,EAAWa,cACXL,EAAOI,aAAY,SAAAvH,GAAK,OAAIA,EAAM4D,cACjCpD,EAA6B2G,EAA7B3G,MAAMJ,EAAuB+G,EAAvB/G,QAASwD,EAAcuD,EAAdvD,WAEfzB,EADWoF,aAAY,SAAAvH,GAAK,OAAEA,EAAMkC,aACpCC,SAiBP,OAhBAoJ,qBAAU,WACFpJ,GAEAgD,EAAQM,KAAK,KAEjBkB,EP2HiB,yCAAM,WAAOA,GAAP,oBAAAE,EAAA,sEAEvBF,EAAS,CACLxG,KAAMzB,KAGJoI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARD,SAYAC,KAAMC,IACzB,mBACAH,GAdmB,gBAYfK,EAZe,EAYfA,KAKRR,EAAS,CACLxG,KAAM1B,GACN4B,QAAS8G,IAnBU,kDAyBvBR,EAAS,CACLxG,KAAMxB,GACN0B,QAAQ,KAAM+G,SAASD,KAAKE,UA3BT,0DAAN,yDO1HnB,CAACV,EAASxE,IAWR,+BACK/B,EACM,eAAC,GAAD,IACDI,EACK,eAAC,GAAD,CAASgG,QAAQ,SAAjB,SAA2BhG,IAC7BoD,EACK,iCACE,eAACmE,GAAA,EAAD,UACD,gBAAC1C,GAAA,EAAD,CAAMC,SAjBP,SAACC,GACnBA,EAAEC,iBACFmB,EPsLgB,SAACT,EAAK+I,EAAMgB,GAAZ,gDAAsB,WAAOtJ,GAAP,oBAAAE,EAAA,sEAEtCF,EAAS,CACLxG,KAAMzB,KAGJoI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARc,SAYfC,KAAM0G,KAAN,iBAEnB,CAAC,MAAQuB,EAAM,KAAO/I,EAAK,MAAQ+J,GACnCnJ,GAfkC,gBAY9BK,EAZ8B,EAY9BA,KAMRR,EAAS,CACLxG,KAAM1B,GACN4B,QAAS8G,IApByB,kDA0BtCR,EAAS,CACLxG,KAAMxB,GACN0B,QAAQ,KAAM+G,SAASD,KAAKE,UA5BM,0DAAtB,sDOtLP8Q,CAASjS,EAAK+I,EAAMgB,IAC7BJ,EAAQ,IACRX,EAAS,IACTgB,EAAS,KAYU,UACA,eAAC7K,GAAA,EAAKuI,MAAN,CAAYC,UAAU,OAAtB,SACD,eAACxI,GAAA,EAAKW,QAAN,CACA7F,KAAK,OAAOuP,YAAY,OACxBrJ,MAAOH,EACPC,SAAU,SAACZ,GAAD,OAAOsK,EAAQtK,EAAEa,OAAOC,YAElC,eAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,SACD,eAACxI,GAAA,EAAKW,QAAN,CACD7F,KAAK,OAAOuP,YAAY,QACxBrJ,MAAO4I,EACP9I,SAAU,SAACZ,GAAD,OAAO2J,EAAS3J,EAAEa,OAAOC,YAEnC,eAAChB,GAAA,EAAKuI,MAAN,CAAYC,UAAU,QAAtB,SACA,eAACxI,GAAA,EAAKW,QAAN,CACA7F,KAAK,OAAOuP,YAAY,eACxBrJ,MAAO4J,EACP9J,SAAU,SAACZ,GAAD,OAAO2K,EAAS3K,EAAEa,OAAOC,YAEnC,eAACE,GAAA,EAAD,CAAQC,QAAQ,UAAUrG,KAAK,SAA/B,8BAIA,yCACA,gBAACsR,GAAA,EAAD,CAAOC,SAAO,EAACyD,UAAQ,EAACC,OAAK,EAACzD,YAAU,EAACrL,UAAU,WAAnD,UACI,iCACI,gCACI,uCACA,wCACA,8CAIP,iCACI1C,EAAWlC,KAAI,SAAAyF,GAAI,OAChB,gCACK,8BAAKA,EAAKjB,OACX,8BAAKiB,EAAK8H,QACV,8BACI,eAAC1I,GAAA,EAAD,CAASoC,QAAS,kBAAIhC,GPgGtCyR,EOhG2DjR,EAAKoK,QPgGjE,yCAAS,WAAO5K,GAAP,oBAAAE,EAAA,sEAE5BF,EAAS,CACLxG,KAAMzB,KAGJoI,EAAS,CACXC,QAAS,CACL,eAAgB,qBARI,SAYLC,KAAMC,IAAN,2BACCmR,EADD,KAEnBtR,GAdwB,gBAYpBK,EAZoB,EAYpBA,KAKRR,EAAS,CACLxG,KAAM1B,GACN4B,QAAS8G,IAnBe,kDAyB5BR,EAAS,CACLxG,KAAMxB,GACN0B,QAAQ,KAAM+G,SAASD,KAAKE,UA3BJ,0DAAT,4DAAC+Q,GOhGgB,wBAJCjR,EAAKoK,oBAY1B,+BACG,4CC1BZ8G,OA1Cf,WACE,OACE,gBAAC,cAAD,WACE,eAAC,GAAD,IACA,uBAAM/R,UAAU,OAAhB,SACE,gBAACyB,GAAA,EAAD,WACE,eAAC,KAAD,CAAOuQ,KAAK,IAAIC,UAAW1M,GAAY2M,OAAK,IAC5C,eAAC,KAAD,CAAOF,KAAK,SAASC,UAAWvJ,KAChC,eAAC,KAAD,CAAOsJ,KAAK,YAAYC,UAAW3I,KACnC,eAAC,KAAD,CAAO0I,KAAK,WAAWC,UAAWpH,KAClC,eAAC,KAAD,CAAOmH,KAAK,YAAYC,UAAWnG,KACnC,eAAC,KAAD,CAAOkG,KAAK,cAAcC,UAAW7F,KACrC,eAAC,KAAD,CAAO4F,KAAK,aAAaC,UAAWxF,KACpC,eAAC,KAAD,CAAOuF,KAAK,WAAWC,UAAWlG,KAClC,eAAC,KAAD,CAAOiG,KAAK,eAAeC,UAAWrM,KACtC,eAAC,KAAD,CAAOoM,KAAK,aAAaC,UAAWnK,KAEpC,eAAC,KAAD,CAAOkK,KAAK,mBAAmBC,UAAWzB,KAC1C,eAAC,KAAD,CAAOwB,KAAK,qBAAqBC,UAAWvB,KAE5C,eAAC,KAAD,CAAOsB,KAAK,kBAAkBC,UAAWpB,KACzC,eAAC,KAAD,CAAOmB,KAAK,mBAAmBC,UAAWtB,KAE1C,eAAC,KAAD,CAAOqB,KAAK,gBAAgBC,UAAWnB,KACvC,eAAC,KAAD,CAAOkB,KAAK,gBAAgBC,UAAWE,KAIvC,eAAC,KAAD,CAAOH,KAAK,UAAUC,UAAWL,KAGjC,eAAC,KAAD,CAAOI,KAAK,qBAAqBC,UAAWhE,KAC5C,eAAC,KAAD,CAAO+D,KAAK,0BAA0BC,UAAWhD,KAEjD,eAAC,KAAD,CAAO+C,KAAK,mBAAmBC,UAAW1B,UAG9C,eAAC,GAAD,QCpDS6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,eAAC,IAAD,CAAUzU,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFgP,SAAS0F,eAAe,SAM1BX,M","file":"static/js/main.93b790d4.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_ADD_REQUEST = 'CART_ADD_REQUEST'\r\nexport const CART_UPDATE = 'CART_UPDATE'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_REMOVE_SUCCESS = 'CART_REMOVE_SUCCESS'\r\nexport const CART_UPDATE_SUCCESS ='CART_UPDATE_SUCCESS'\r\nexport const CART_GET_REQUEST = 'CART_GET_REQUEST'\r\nexport const CART_REMOVE_REQUEST ='CART_REMOVE_REQUEST'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_GET_SHIPPING_ADDRESS = 'CART_GET_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_GET_PAYMENT_METHOD = 'CART_GET_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_CANCEL_REQUEST ='ORDER_CANCEL_REQUEST'\r\nexport const ORDER_CANCEL_SUCCESS = 'ORDER_CANCEL_SUCCESS'\r\nexport const ORDER_CANCEL_FAIL = 'ORDER_CANCEL_FAIL'\r\n\r\nexport const ORDER_RETURN_REQUEST ='ORDER_RETURN_REQUEST'\r\nexport const ORDER_RETURN_SUCCESS = 'ORDER_RETURN_SUCCESS'\r\nexport const ORDER_RETURN_FAIL = 'ORDER_RETURN_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","export const VERIFIED_SELLERS_SUCCESS = 'VERIFIED_SELLERS_SUCCESS'\r\nexport const VERIFIED_SELLERS_REQUEST = 'VERIFIED_SELLERS_REQUEST'\r\nexport const VERIFIED_SELLERS_FAIL = 'VERIFIED_SELLERS_FAIL'\r\nexport const VERIFIED_SELLERS_RESET = 'VERIFIED_SELLERS_RESET'\r\n\r\nexport const UNVERIFIED_SELLERS_SUCCESS = 'UNVERIFIED_SELLERS_SUCCESS'\r\nexport const UNVERIFIED_SELLERS_REQUEST = 'UNVERIFIED_SELLERS_REQUEST'\r\nexport const UNVERIFIED_SELLERS_FAIL = 'UNVERIFIED_SELLERS_FAIL'\r\nexport const UNVERIFIED_SELLERS_RESET = 'UNVERIFIED_SELLERS_RESET'\r\n\r\nexport const ADMINS_LIST_SUCCESS = 'ADMINS_LIST_SUCCESS'\r\nexport const ADMINS_LIST_REQUEST = 'ADMINS_LIST_REQUEST'\r\nexport const ADMINS_LIST_FAIL = 'ADMINS_LIST_FAIL'\r\nexport const ADMINS_LIST_RESET = 'ADMINS_LIST_RESET'\r\n\r\nexport const DELIVER_PRODUCTS_SUCCESS = 'DELIVER_PRODUCTS_SUCCESS'\r\nexport const DELIVER_PRODUCTS_REQUEST = 'DELIVER_PRODUCTS_REQUEST'\r\nexport const DELIVER_PRODUCTS_FAIL = 'DELIVER_PRODUCTS_FAIL'\r\nexport const DELIVER_PRODUCTS_RESET = 'DELIVER_PRODUCTS_RESET'\r\n\r\nexport const RETURN_PRODUCTS_SUCCESS = 'RETURN_PRODUCTS_SUCCESS'\r\nexport const RETURN_PRODUCTS_REQUEST = 'RETURN_PRODUCTS_REQUEST'\r\nexport const RETURN_PRODUCTS_FAIL = 'RETURN_PRODUCTS_FAIL'\r\nexport const RETURN_PRODUCTS_RESET = 'RETURN_PRODUCTS_RESET'","export const ADDSTOCKS_NEW_SUCCESS = 'ADDSTOCKS_NEW_SUCCESS'\r\nexport const ADDSTOCKS_NEW_REQUEST = 'ADDSTOCKS_NEW_REQUEST'\r\nexport const ADDSTOCKS_NEW_FAIL = 'ADDSTOCKS_NEW_FAIL'\r\nexport const ADDSTOCKS_NEW_RESET = 'ADDSTOCKS_NEW_RESET'\r\n\r\nexport const ADDSTOCKS_OLD_SUCCESS = 'ADDSTOCKS_OLD_SUCCESS'\r\nexport const ADDSTOCKS_OLD_REQUEST = 'ADDSTOCKS_OLD_REQUEST'\r\nexport const ADDSTOCKS_OLD_FAIL = 'ADDSTOCKS_OLD_FAIL'\r\nexport const ADDSTOCKS_OLD_RESET = 'ADDSTOCKS_OLD_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer,addressReducer,paymentReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n    cancelOrderReducer,\r\n    returnOrderReducer\r\n} from './reducers/orderReducers'\r\n\r\n/* admin func */\r\nimport {\r\n    verifiedSellersReducer,\r\n    unverifiedSellersReducer,\r\n    adminsListReducer,\r\n    deliverProductsReducer,\r\n    returnProductsReducer\r\n} from './reducers/adminReducers'  \r\n\r\nimport {\r\n    addNewStocksReducer,\r\n    addOldStocksReducer,\r\n} from './reducers/sellerReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    shipping :addressReducer,\r\n    payment:paymentReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    cancelOrder:cancelOrderReducer,\r\n    returnOrder:returnOrderReducer,\r\n\r\n    verifiedSellers:verifiedSellersReducer,\r\n    unverifiedSellers:unverifiedSellersReducer,\r\n\r\n    adminsList:adminsListReducer,\r\n    returnProducts:returnProductsReducer,\r\n    deliverProducts:deliverProductsReducer,\r\n\r\n    addNewStocks:addNewStocksReducer,\r\n    addOldStocks:addOldStocksReducer\r\n    \r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : ''\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n    shipping :{\r\n        shippingAddress : ''\r\n    },\r\n    verifiedSellers:{verifiedSellers:[]},\r\n    unverifiedSellers:{unverifiedSellers:[]},\r\n    adminsList :{adminsList:[]},\r\n    deliverProducts:{deliverProducts:[]},\r\n    returnProducts:{returnProducts:[]},\r\n    addNewStocks:{addNewstocks:[]},\r\n    addOldStocks:{addOldStocks:[]}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = {product:{} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            console.log(action.payload)\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            console.log(action.payload)\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return {loading:true,product:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_ADD_REQUEST,\r\n    CART_REMOVE_ITEM,\r\n    CART_REMOVE_REQUEST,\r\n    CART_REMOVE_SUCCESS,\r\n    CART_UPDATE_SUCCESS,\r\n    CART_GET_REQUEST,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_GET_PAYMENT_METHOD,\r\n    CART_GET_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n    CART_UPDATE,\r\n    SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_REQUEST:\r\n             return { loading: true, cartItems: []\r\n               \r\n            }\r\n        case CART_GET_REQUEST:\r\n            return {loading:true,cartItems:[]\r\n               \r\n            }\r\n        case CART_UPDATE:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                cartItems:action.payload,\r\n             \r\n\r\n            }\r\n        case CART_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                cartItems:state.cartItems,\r\n              \r\n            }\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.stockId.stockId === item.stockId.stockId)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    loading:true,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.stockId.stockId === existItem.stockId.stockId ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    loading:false,\r\n                    cartItems: [...state.cartItems, item],\r\n                   \r\n                }\r\n            }\r\n        case CART_REMOVE_REQUEST:\r\n            return {\r\n                loading:true,\r\n                cartItems:state.cartItems,\r\n\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.stockId.stockId !== action.payload),\r\n                loading:true\r\n            }\r\n        case CART_REMOVE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems,\r\n                loading:false\r\n            }\r\n\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addressReducer = (state ={shippingAddress :''},action) =>{\r\n      switch (action.type) {\r\n           case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                fetching:true,\r\n                shippingAddress: action.payload,\r\n            }\r\n            case CART_GET_SHIPPING_ADDRESS:\r\n                return {\r\n                    ...state,\r\n                    fetching:false,\r\n                    shippingAddress:state.shippingAddress\r\n                }\r\n            default:\r\n                return state\r\n      }\r\n}\r\n\r\nexport const paymentReducer = (state ={paymentMethod :''},action) =>{\r\n      switch (action.type) {\r\n           case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                getting:true,\r\n                paymentMethod: action.payload,\r\n            }\r\n            case CART_GET_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    getting:false,\r\n                    paymentMethod:state.paymentMethod\r\n                }\r\n            default:\r\n                return state\r\n      }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_CANCEL_REQUEST,\r\n    ORDER_CANCEL_SUCCESS,\r\n    ORDER_CANCEL_FAIL,\r\n\r\n\r\n    ORDER_RETURN_REQUEST,\r\n    ORDER_RETURN_SUCCESS,\r\n    ORDER_RETURN_FAIL\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cancelOrderReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_CANCEL_REQUEST:\r\n            return {\r\n                fetching:true\r\n            }\r\n        case ORDER_CANCEL_SUCCESS:\r\n            return {\r\n                fetching:false,\r\n                success:action.payload\r\n            }\r\n        case ORDER_CANCEL_FAIL:\r\n            return {\r\n                fetching:false,\r\n                wrong:action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const returnOrderReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_RETURN_REQUEST:\r\n            return {\r\n                getting:true\r\n            }\r\n        case ORDER_RETURN_SUCCESS:\r\n            return {\r\n                getting:false,\r\n                succeed:action.payload\r\n            }\r\n        case ORDER_RETURN_FAIL:\r\n            return {\r\n                getting:false,\r\n                mistake:action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {\r\n    VERIFIED_SELLERS_REQUEST,\r\n    VERIFIED_SELLERS_SUCCESS,\r\n    VERIFIED_SELLERS_FAIL,\r\n    VERIFIED_SELLERS_RESET,\r\n    UNVERIFIED_SELLERS_REQUEST,\r\n    UNVERIFIED_SELLERS_SUCCESS,\r\n    UNVERIFIED_SELLERS_FAIL,\r\n    UNVERIFIED_SELLERS_RESET,\r\n    ADMINS_LIST_SUCCESS,\r\n    ADMINS_LIST_REQUEST,\r\n    ADMINS_LIST_FAIL,\r\n    ADMINS_LIST_RESET,\r\n    RETURN_PRODUCTS_SUCCESS,\r\n    RETURN_PRODUCTS_REQUEST,\r\n    RETURN_PRODUCTS_FAIL,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_SUCCESS,\r\n    DELIVER_PRODUCTS_REQUEST,\r\n    DELIVER_PRODUCTS_FAIL,\r\n    DELIVER_PRODUCTS_RESET\r\n} from '../constants/adminConstants'\r\n\r\nexport const verifiedSellersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case VERIFIED_SELLERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case VERIFIED_SELLERS_SUCCESS:\r\n            return { loading: false, verifiedSellers: action.payload }\r\n\r\n        case VERIFIED_SELLERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case VERIFIED_SELLERS_RESET :\r\n            return {verifiedSellers:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const unverifiedSellersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case UNVERIFIED_SELLERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case UNVERIFIED_SELLERS_SUCCESS:\r\n            return { loading: false, unverifiedSellers: action.payload }\r\n\r\n        case UNVERIFIED_SELLERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case UNVERIFIED_SELLERS_RESET :\r\n            return {unverifiedSellers:null}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminsListReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADMINS_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADMINS_LIST_SUCCESS:\r\n            return { loading: false, adminsList: action.payload }\r\n\r\n        case ADMINS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADMINS_LIST_RESET :\r\n            return {adminsList:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deliverProductsReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case DELIVER_PRODUCTS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case DELIVER_PRODUCTS_SUCCESS:\r\n            return { loading: false, deliverProducts: action.payload }\r\n\r\n        case DELIVER_PRODUCTS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case DELIVER_PRODUCTS_RESET :\r\n            return {deliverProducts:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const returnProductsReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case RETURN_PRODUCTS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case RETURN_PRODUCTS_SUCCESS:\r\n            return { loading: false, returnProducts: action.payload }\r\n\r\n        case RETURN_PRODUCTS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case RETURN_PRODUCTS_RESET :\r\n            return {returnProducts:null}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ADDSTOCKS_NEW_SUCCESS,\r\n    ADDSTOCKS_NEW_REQUEST,\r\n    ADDSTOCKS_NEW_FAIL,\r\n    ADDSTOCKS_NEW_RESET,\r\n    ADDSTOCKS_OLD_SUCCESS,\r\n    ADDSTOCKS_OLD_REQUEST,\r\n    ADDSTOCKS_OLD_FAIL,\r\n    ADDSTOCKS_OLD_RESET\r\n} from '../constants/sellerConstants'\r\n\r\nexport const addNewStocksReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADDSTOCKS_NEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADDSTOCKS_NEW_SUCCESS:\r\n            return { loading: false, addNewStocks: action.payload }\r\n\r\n        case ADDSTOCKS_NEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADDSTOCKS_NEW_RESET :\r\n            return {addNewStocks:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addOldStocksReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADDSTOCKS_OLD_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADDSTOCKS_OLD_SUCCESS:\r\n            return { loading: false, addOldStocks: action.payload }\r\n\r\n        case ADDSTOCKS_OLD_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADDSTOCKS_OLD_RESET :\r\n            return {addOldStocks:null}\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Col,Row,Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Row>\r\n                <Col sm = {9}>\r\n                <Form.Control\r\n                    type='text'\r\n                    size='sm'\r\n                    name='q'\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className='mr-sm-2 ml-sm-5'\r\n                ></Form.Control>\r\n                </Col>\r\n                <Col sm = {3}>\r\n                <Button\r\n                    type='submit'\r\n                    size=\"sm\"\r\n                    variant='outline-success'\r\n                    className='p-2'\r\n                >\r\n                    Submit\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nimport { VERIFIED_SELLERS_RESET,\r\n    UNVERIFIED_SELLERS_RESET,\r\n    ADMINS_LIST_RESET,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_RESET\r\n   } from '../constants/adminConstants'\r\n\r\nexport const login = (email, password,role) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/login/',\r\n            { 'email': email, 'password': password,'role':role},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: VERIFIED_SELLERS_RESET })\r\n    dispatch({ type: UNVERIFIED_SELLERS_RESET }) \r\n    dispatch({ type: ADMINS_LIST_RESET})\r\n    dispatch({ type: RETURN_PRODUCTS_RESET})\r\n    dispatch({ type: DELIVER_PRODUCTS_RESET})\r\n\r\n}\r\n\r\n\r\nexport const register = (name,email,phone,address, password,role,company) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/register/',\r\n            { 'email': email, 'password': password ,'name':name,'address':address,'phone':phone,'role':role,'company':company },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/${userInfo.role}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/profile/update/`,\r\n            {'user':user,'role':userInfo.role},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col,Form , Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n        // history.push('/')\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container fluid>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        \r\n                            {userInfo ? ( \r\n                                userInfo.role=='buyer'?(\r\n                                <Row className = \"row\">\r\n                                    <Nav className=\"ml-auto\">\r\n\r\n                                        <LinkContainer to='/'>\r\n                                        <Navbar.Brand>Shopping Cavern</Navbar.Brand>\r\n                                        </LinkContainer>\r\n                                    \r\n                                        <SearchBox />\r\n\r\n                                    </Nav>\r\n                                    \r\n                                    <Nav className = \"ml-auto\">\r\n\r\n                                        <LinkContainer to='/cart'>\r\n                                        <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                                        </LinkContainer>\r\n                                        \r\n                                        <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                        </NavDropdown>\r\n\r\n                                    </Nav>\r\n                                    \r\n                                    \r\n                                </Row>\r\n                                ):userInfo.role=='seller'?( <Row>\r\n                                 <Nav className = \"ml-auto\">\r\n                                  <LinkContainer to='/'>\r\n                                        <Navbar.Brand>Shopping Cavern</Navbar.Brand>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown title='Add Stocks' id='username'>\r\n                                        <LinkContainer to='/addnewstocks'>\r\n                                            <NavDropdown.Item>New</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/addoldstocks'>\r\n                                            <NavDropdown.Item>Existing</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n\r\n                                    <LinkContainer to='/temp'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/temp'>\r\n                                        <NavDropdown.Item>Offers</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    </Nav>\r\n\r\n                                </Row>\r\n                                ):( <Row>\r\n                                    <Nav className=\"ml-auto\">\r\n                                       <LinkContainer to='/'>\r\n                                          <Navbar.Brand>Shopping Cavern</Navbar.Brand>\r\n                                      </LinkContainer>\r\n                                    </Nav>\r\n                                    <Nav className = \"ml-auto\">\r\n                                    <LinkContainer to='/admins'>\r\n                                        <Nav.Link >Admins</Nav.Link>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown title='Sellers' id='adminmenue'>\r\n                                        <LinkContainer to='/unverifiedsellers'>\r\n                                            <NavDropdown.Item>Approve</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/verifiedsellers'>\r\n                                            <NavDropdown.Item>Remove</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        </NavDropdown>\r\n                                        <NavDropdown title='Products' id='adminmenue'>\r\n                                        <LinkContainer to='/deliverproducts'>\r\n                                            <NavDropdown.Item>Deliver</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/returnproducts'>\r\n                                            <NavDropdown.Item>Return</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                       </NavDropdown>\r\n                                       <NavDropdown title='Account' id='adminmenue'>\r\n                                       <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                       <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                       </NavDropdown>\r\n                                   </Nav>\r\n                                </Row>)\r\n                                \r\n\r\n                            ) : (   <Row>\r\n\r\n                                    <LinkContainer to='/'>\r\n                                    <Navbar.Brand>Shopping Cavern</Navbar.Brand>\r\n                                    </LinkContainer>\r\n\r\n                                    <SearchBox />\r\n\r\n                                    {/* <LinkContainer to='/cart'>\r\n                                    <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                                    </LinkContainer> */}\r\n                                    <Nav className='ml-auto'>\r\n                                    <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>  Login</Nav.Link>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/register'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>  Register</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    </Nav>\r\n\r\n                                    </Row>\r\n                                )}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Shopping Cavern</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product.stockId}`}>\r\n                <Card.Img src={product.productId.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product.stockId}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.productId.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.productId.rating} text={`${product.productId.votes} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n\r\n                <Card.Text as=\"h3\">\r\n                    &#8377;{product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {useState,React} from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    const [show, setShow] = useState(true);\r\n    if (show) {\r\n    return (\r\n      <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n       {children}\r\n      </Alert>\r\n    );\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        console.log(id)\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/product/${id}`)\r\n        console.log(data)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, rating,review,userId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            {'review':review,'rating':rating,'userId':userId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product.stockId}>\r\n                            <Link to={`/product/${product.stockId}`}>\r\n                                <Image src={product.productId.image} alt={product.productId.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.productId.name} \r\n                                    (&#8377;{product.price})\r\n                                    </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            {keyword==''?(<h1>Latest Products</h1>):(<h1>Search Results</h1>)}\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                      \r\n                            {products.map(product => (                                \r\n                                <Col key={product.stockId} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_DETAILS_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        dispatch({type:PRODUCT_DETAILS_RESET})\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n        console.log(product,match.params.id)\r\n    }, [dispatch, match.params.id, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            product.productId.productId, \r\n            rating,\r\n            comment,\r\n            userInfo.buyerId,\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                         <div>\r\n                        {product.productId?(\r\n                            <div>\r\n                             <Row>\r\n                                 <Col md={6}>\r\n                             \r\n                                    <Image src={product.productId.image} alt={product.productId.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                       \r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.productId.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.productId.rating} text={`${product.productId.votes} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price:  &#8377;{product.price}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.productId.details}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                         {!userInfo&&<ListGroup.Item>\r\n                                            <Message variant='info'>Login to Add to cart</Message>\r\n                                        </ListGroup.Item>}\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong> &#8377;{product.price}</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.availableQuantity > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.availableQuantity > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.availableQuantity).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.availableQuantity == 0||!userInfo}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                            \r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                           \r\n                            </Row> \r\n\r\n                            <Row>\r\n                                 <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review.ratingId}>\r\n                                                <strong>{review.buyerId.name}</strong> \r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.reviewedAt.substring(0, 10)}</p>\r\n                                                <p>{review.review}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col> \r\n                            </Row> \r\n                            </div> \r\n                        ):(\r\n                            <div><h1>Error occured</h1></div>\r\n                        )}\r\n                        </div> \r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_GET_REQUEST,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_ADD_REQUEST,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_GET_PAYMENT_METHOD,\r\n    CART_UPDATE,\r\n    CART_REMOVE_REQUEST,\r\n    CART_REMOVE_SUCCESS,\r\n    CART_UPDATE_SUCCESS,\r\n    CART_GET_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type:CART_ADD_REQUEST\r\n    })\r\n     const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n    const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n    const { data } = await axios.put(`/api/cart/product/${id}`,\r\n         {'buyerId':userInfo.buyerId,'quantity':qty},\r\n        config\r\n    )\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: data\r\n    })\r\n    const information = await axios.get(`api/mycart/${userInfo.buyerId}`)\r\n    console.log(information)\r\n    dispatch({\r\n        type:CART_UPDATE,\r\n        payload:information.data\r\n    })\r\n    dispatch({\r\n        type:CART_UPDATE_SUCCESS\r\n    })\r\n    // localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const getCart = () => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type:CART_GET_REQUEST\r\n    })\r\n     const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n    const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n  \r\n   \r\n    const information = await axios.get(`api/mycart/${userInfo.buyerId}`)\r\n    console.log(information)\r\n    dispatch({\r\n        type:CART_UPDATE,\r\n        payload:information.data\r\n    })\r\n    dispatch({\r\n        type:CART_UPDATE_SUCCESS\r\n    })\r\n    // localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_REQUEST\r\n    })\r\n    await axios.delete(`/api/cart/delete/${id}`)\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    dispatch({\r\n        type:CART_REMOVE_SUCCESS\r\n    })\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    dispatch({\r\n        type:CART_GET_SHIPPING_ADDRESS\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const getShippingAddress = () => (dispatch) => {\r\n   \r\n    dispatch({\r\n        type:CART_GET_SHIPPING_ADDRESS\r\n    })\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    dispatch({\r\n        type:CART_GET_PAYMENT_METHOD\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\nexport const getPaymentMethod = () => (dispatch) => {\r\n    dispatch({\r\n        type:CART_GET_PAYMENT_METHOD\r\n    })\r\n}","import React, { useEffect,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart,getCart } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\nimport { CART_UPDATE } from '../constants/cartConstants'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const stockId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    \r\n    const { cartItems,loading } = cart\r\n    const [fetch,setFetch] = useState(true)\r\n    useEffect(() => {\r\n        if (stockId) {\r\n            dispatch(addToCart(stockId, qty))\r\n            setFetch(false)\r\n            console.log(cartItems)\r\n        }\r\n        else{\r\n            dispatch(getCart())\r\n            console.log(cartItems)\r\n        }\r\n    },\r\n      [dispatch, stockId, qty]\r\n     )\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                    {loading?<Loader/>:\r\n                cartItems? cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.stockId.stockId}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            &#8377;{item.stockId.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.quantity}\r\n                                                onChange={(e) => dispatch(addToCart(item.stockId.stockId, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.stockId.availableQuantity).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.stockId.stockId)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    ):<Loader/>}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n               {cartItems&&!loading&&<Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items</h2>\r\n                            &#8377;{cartItems.reduce((acc, item) => acc + item.quantity * item.stockId.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>}\r\n            </Col> \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role,setRole] = useState('buyer')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password,role))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"role\">\r\n                    <Form.Label>Select role</Form.Label>\r\n                    <Form.Control as=\"select\" custom value={role} onChange={(e)=>setRole(e.target.value)}>\r\n                      <option>buyer</option>\r\n                      <option>seller</option>\r\n                      <option>admin</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col,Nav,Tabs,Tab,Sonnet } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n   \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [role,setRole] = useState('buyer')\r\n    const [company,setCompany] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name,email,phone,address, password,role,company))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n                 <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n  <Tab eventKey=\"home\" title=\"Buyer\" onSelect={()=>setRole('buyer')}>\r\n    <Form onSubmit={submitHandler}>\r\n    <div style={{'padding':'20px'}}></div>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n               \r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='mobile'>\r\n                    <Form.Label>Mobile No</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Mobile no'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              \r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Seller\" onSelect={()=>setRole('seller')}>\r\n   <Form onSubmit={submitHandler}>\r\n    <div style={{'padding':'20px'}}></div>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n               \r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='mobile'>\r\n                    <Form.Label>Mobile No</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Mobile no'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='company'>\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Company'\r\n                        value={company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              \r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n  </Tab>\r\n \r\n</Tabs>\r\n\r\n           \r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_CANCEL_REQUEST,\r\n    ORDER_CANCEL_SUCCESS,\r\n    ORDER_CANCEL_FAIL,\r\n\r\n    ORDER_RETURN_REQUEST,\r\n    ORDER_RETURN_SUCCESS,\r\n    ORDER_RETURN_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n               // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n           { 'order':order,'buyerId':userInfo.buyerId},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/order/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/myorders/${userInfo.buyerId}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const cancelOrder =(id,orderId)=>async(dispatch,getState) =>{\r\n     try {\r\n        dispatch({\r\n            type: ORDER_CANCEL_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/cancel/`,\r\n            {'orderedItemId':id,'orderId':orderId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_CANCEL_SUCCESS,\r\n            payload: true\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CANCEL_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnOrder =(id,orderId)=>async(dispatch,getState) =>{\r\n     try {\r\n        dispatch({\r\n            type: ORDER_RETURN_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/return/`,\r\n            {'orderedItemId':id,'orderId':orderId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_RETURN_SUCCESS,\r\n            payload: true\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_RETURN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [company,setCompany] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success ) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails(userInfo.role=='buyer'?userInfo.buyerId:userInfo.role=='seller'?userInfo.sellerId:userInfo.adminId))\r\n                if(userInfo.role=='buyer')\r\n                {\r\n                   dispatch(listMyOrders())\r\n                }\r\n               \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAddress(user.address)\r\n                setCompany(user.role=='seller'&&user.company)\r\n                setPhone(user.phone)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': userInfo.role=='buyer'?user.buyerId:userInfo.role=='seller'?user.sellerId:user.adminId,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n                'address':address,\r\n                'company':company,\r\n                'phone':phone\r\n\r\n            }))\r\n             setPassword('')\r\n        setConfirmPassword('')\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row className='justify-content-center'>\r\n           {userInfo&& <Col md={userInfo.role=='buyer'?5:6}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                     <Form.Group controlId='phone'>\r\n                        <Form.Label>Mobile no</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Enter Mobile no'\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {userInfo.role=='seller'&&\r\n                          <Form.Group controlId='company'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Company'\r\n                            value={company}\r\n                            onChange={(e) => setCompany(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    }\r\n                        <Form.Group controlId='address'>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            as=\"textarea\"\r\n                            placeholder='Enter Address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n           }\r\n\r\n           {userInfo && userInfo.role=='buyer'&& <Col md={7}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        {/* <th>Paid</th> */}\r\n                                        <th>Details</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order.orderId}>\r\n                                            <td>{order.orderId}</td>\r\n                                            <td>{order.orderedAt.substring(0, 10)}</td>\r\n                                            <td>&#8377;{order.totalAmount}</td>\r\n                                            {/* <td>{order.paid=='Yes' ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td> */}\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order.orderId}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress,fetching } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(shippingAddress)\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress(address))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n           {fetching?<Loader/>: <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        as='textarea'\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const payment = useSelector(state => state.payment)\r\n    const shipping = useSelector(state=>state.shipping)\r\n    const {shippingAddress} = shipping\r\n    const { paymentMethod,getting } = payment\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState('Cash on Delivery')\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentmethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n           {getting?<Loader/>: <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n\r\n                      \r\n                         <Form.Check\r\n                            type='radio'\r\n                            label='Cash on Delivery'\r\n                            id='cod'\r\n                            name='paymentMethod'\r\n                            value=\"Cash on Delivery\"\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                \r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { getCart, getPaymentMethod, getShippingAddress } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const shipping = useSelector(state=>state.shipping)\r\n    const payment = useSelector(state=>state.payment)\r\n    const {fetching,shippingAddress} = shipping\r\n    const {getting,paymentMethod}  = payment\r\n    const {loading,cartItems} =cart\r\n    console.log(cartItems)\r\n    var itemsPrice = cartItems.reduce((acc, item) => acc + item.stockId.price * item.quantity, 0).toFixed(2)\r\n    var shippingPrice = (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    // var taxPrice = Number((0.082) * itemsPrice).toFixed(2)\r\n    var totalPrice = (Number(itemsPrice))\r\n    // + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n         if (!paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n       dispatch(getCart())\r\n       dispatch(getShippingAddress())\r\n       dispatch(getPaymentMethod())\r\n        console.log(cartItems)\r\n        if (success) {\r\n            history.push(`/order/${order.orderId}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [dispatch,success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            cartItems: cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n           itemsPrice: itemsPrice,\r\n          //  shippingPrice: shippingPrice,\r\n        //    taxPrice: taxPrice,\r\n           totalPrice: totalPrice,\r\n       }))\r\n    }\r\n    console.log('hello')\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            {!cartItems||loading||fetching||getting?<Loader/>: <Row>\r\n                 <Col md={8}>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                   {shippingAddress} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                             {cartItems?cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cartItems.map(item => (\r\n                                         <ListGroup.Item key={item.stockId.stockId}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.quantity} X &#8377;{item.stockId.price} = &#8377;{(item.quantity * item.stockId.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item> \r\n                                        ))}\r\n                                    </ListGroup>\r\n                                ):<Loader/>} \r\n                        </ListGroup.Item>  \r\n\r\n                    </ListGroup> \r\n\r\n                </Col> \r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>&#8377;{taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item> */}\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                           {error&& <ListGroup.Item>\r\n                                 <Message variant='danger'>{error}</Message>\r\n                            </ListGroup.Item>}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder,cancelOrder,returnOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const cancelorder = useSelector(state=>state.cancelOrder)\r\n    const returnorder = useSelector(state=>state.returnOrder)\r\n    const{getting,succeed,mistake} = returnorder\r\n    const {wrong,fetching,success}  = cancelorder\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.items.reduce((acc, item) => acc + item.amount * item.quantity, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order.orderId !== Number(orderId) || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.paid=='Yes') {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    const cancelOrderHandler = (orderedItemId,orderId)=>{\r\n        dispatch(cancelOrder(orderedItemId,orderId))\r\n        dispatch(getOrderDetails(orderId))\r\n    }\r\n    const returnOrderHandler = (orderedItemId,orderId)=>{\r\n        dispatch(returnOrder(orderedItemId,orderId))\r\n        dispatch(getOrderDetails(orderId))\r\n    }\r\n    return loading||fetching||getting ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>OrderId: {order.orderId}</h1>\r\n                    <Row>\r\n                        <Col md={9}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.buyerId.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.buyerId.email}`}>{order.buyerId.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.address}\r\n                                    </p>\r\n\r\n                                    {/* {order.status=='Delivered' ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )} */}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {/* {order.paid=='Yes' ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )} */}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.items.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.items.map(item => (\r\n                                                    <ListGroup.Item key={item.orderedItemId}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={3}>\r\n                                                                {item.quantity} X &#8377;{item.amount} = &#8377;{(item.quantity * item.amount).toFixed(2)}\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                {item.status}\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                 {item.status=='Delivered'? (<Button\r\n                                                                    type='button'\r\n                                                              className='btn-block' onClick={()=>returnOrderHandler(item.orderedItemId,order.orderId)} >\r\n                                                                       Return Order\r\n                                                                        </Button>):item.status!='Cancelled'&&item.status!='In Return'&&\r\n                                                                       ( <Button\r\n                                                                           type='button'\r\n                                                                         className='btn-block'onClick={()=>cancelOrderHandler(item.orderedItemId,order.orderId)} >\r\n                                                                            Cancel Order\r\n                                                                        </Button>)}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>&#8377;{order.totalAmount}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>&#8377;{0}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${o}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item> */}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>&#8377;{order.totalAmount}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n{/*                                 \r\n                                    {order.paymentMethod=='Cash on Delivery'&&\r\n                                    ( <ListGroup.Item>\r\n                           <Button\r\n                            type='button'\r\n                            className='btn-block' >\r\n                        Cancel Order\r\n                        </Button>\r\n                    </ListGroup.Item>)} */}\r\n                                </ListGroup>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n\r\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                            <Paginate pages={pages} page={page} isAdmin={true} />\r\n                        </div>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order.orderId}>\r\n                                        <td>{order.orderId}</td>\r\n                                        <td>{order.buyerId.name}</td>\r\n                                        <td>{order.orderedAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalAmount}</td>\r\n\r\n                                        {/* <td>{order.paid=='Yes' ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td> */}\r\n\r\n                                        {/* <td>{order.status=='delivered' ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td> */}\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order.orderId}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { verifiedSeller } from '../actions/adminActions'\r\nimport { removeSeller } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction VerifiedSellers ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.verifiedSellers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, verifiedSellers} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(verifiedSeller())\r\n    },[dispatch,userInfo])\r\n    console.log(verifiedSellers)\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :verifiedSellers\r\n                       ? (<div>\r\n                        <h1>Verified Sellers</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Company</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {verifiedSellers.map(data => (\r\n                                    <tr key={data.sellerId}>\r\n                                         <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>{data.company}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(removeSeller(data.sellerId))} >Remove</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>HOME</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifiedSellers","import axios from 'axios'\r\nimport {\r\n    VERIFIED_SELLERS_REQUEST,\r\n    VERIFIED_SELLERS_SUCCESS,\r\n    VERIFIED_SELLERS_FAIL,\r\n    UNVERIFIED_SELLERS_REQUEST,\r\n    UNVERIFIED_SELLERS_SUCCESS,\r\n    UNVERIFIED_SELLERS_FAIL,\r\n    ADMINS_LIST_SUCCESS,\r\n    ADMINS_LIST_REQUEST,\r\n    ADMINS_LIST_FAIL,\r\n    RETURN_PRODUCTS_SUCCESS,\r\n    RETURN_PRODUCTS_REQUEST,\r\n    RETURN_PRODUCTS_FAIL,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_SUCCESS,\r\n    DELIVER_PRODUCTS_REQUEST,\r\n    DELIVER_PRODUCTS_FAIL,\r\n    DELIVER_PRODUCTS_RESET\r\n    \r\n} from '../constants/adminConstants'\r\n\r\nexport const verifiedSeller = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/verifiedsellers/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const unverifiedSeller = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n      \r\n        const { data } = await axios.get(\r\n            '/api/unverifiedsellers/',\r\n            config\r\n        )\r\n       \r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const verifySeller = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n      \r\n        const { data } = await axios.get(\r\n            `/api/verifyseller/${sid}/`,\r\n            config\r\n        )\r\n       \r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeSeller = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/removeseller/${sid}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminlist = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/adminslist/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAdmin = (aid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/removeadmin/${aid}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addAdmin = (name,email,phone) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/addadmin/`,\r\n            {'email':email,'name':name,'phone':phone},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:DELIVER_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/deliverproducts/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverParticularProduct = (oid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:DELIVER_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/deliverproduct/${oid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:RETURN_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/returnproducts/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnParticularProduct = (oid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:RETURN_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/returnproduct/${oid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { unverifiedSeller } from '../actions/adminActions'\r\nimport { verifySeller } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\nfunction UnverifiedSellers ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.unverifiedSellers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const {error,loading,unverifiedSellers} = data\r\n\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(unverifiedSeller())\r\n    },[dispatch,userInfo])\r\n    console.log(unverifiedSellers)\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :unverifiedSellers\r\n                       ? (\r\n                           <div>\r\n                               <h1>Unverified Sellers</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Company</th>\r\n                                    <th>Verify</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {unverifiedSellers.map(data => (\r\n                                    <tr key={data.sellerId}>\r\n                                        <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>{data.company}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(verifySeller(data.sellerId))} >Approve</Button>\r\n                                        </td>\r\n                                     </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                      :\r\n                      <div>\r\n                           <h1>Home</h1>\r\n                       </div>\r\n                    }\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnverifiedSellers","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { deliverProduct } from '../actions/adminActions'\r\nimport { deliverParticularProduct } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction DeliverProducts ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.deliverProducts)\r\n    const {error,loading, deliverProducts} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(deliverProduct())\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :deliverProducts\r\n                       ? (<div>\r\n                        <h1>Placed Orders</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>email</th>\r\n                                    <th>Deliver</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {deliverProducts.map(data => (\r\n                                    <tr key={data.orderedItemId}>\r\n                                        <td>{data.orderedItemId}</td>\r\n                                        <td>{data.orderId.buyerId.name}</td>\r\n                                        <td>{data.orderId.buyerId.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(deliverParticularProduct(data.orderedItemId))} >Delivered</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeliverProducts","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { returnProduct } from '../actions/adminActions'\r\nimport { returnParticularProduct } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction ReturnProducts ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.returnProducts)\r\n    const {error,loading, returnProducts} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(returnProduct())\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :returnProducts\r\n                       ? (<div>\r\n                        <h1>Delivered Orders</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Return</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {returnProducts.map(data => (\r\n                                    <tr key={data.orderedItemId}>\r\n                                        <td>{data.orderedItemId}</td>\r\n                                         <td>{data.orderId.buyerId.name}</td>\r\n                                        <td>{data.orderId.buyerId.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(returnParticularProduct(data.orderedItemId))} >Returned</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReturnProducts","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addNewStock } from '../actions/sellerActions'\r\nimport { addNewParticularStock } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction AddOldStocks ({history}){\r\n    const dispatch = useDispatch()\r\n    const [Name,setName]=useState('')\r\n    const [Brand,setBrand]=useState('')\r\n    const [Category,setCategory]=useState('Mobiles')\r\n    const [Details,setDetails]=useState('')\r\n    const [Price,setPrice]=useState('')\r\n    const [Quantity,setQuantity]=useState('')\r\n    const data = useSelector(state => state.addNewStocks)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, addNewStocks} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(addNewStock())\r\n    },[dispatch,userInfo])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addNewParticularStock(userInfo.sellerId,Name,Brand,Category,Details,Price,Quantity))\r\n        setName('')\r\n        setBrand('')\r\n        setCategory('Mobiles')\r\n        setDetails('')\r\n        setPrice('')\r\n        setQuantity('')\r\n    }\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :addNewStocks\r\n                       ? (<div>\r\n                        <FormContainer>\r\n                           <Form onSubmit={submitHandler}>\r\n                        <Form.Group >\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" value={Name}\r\n                          onChange={(e) => setName(e.target.value)} />\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Brand\"  value={Brand}\r\n                          onChange={(e) => setBrand(e.target.value)} />\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control as=\"select\"  value={Category}\r\n                          onChange={(e) => setCategory(e.target.value)} >\r\n                        <option>Mobiles</option>\r\n                        <option>Laptops</option>\r\n                        <option>Shoes</option>\r\n                        <option>Televisions</option>\r\n                        </Form.Control>\r\n                        <Form.Label>Details</Form.Label>\r\n                        <Form.Control as=\"textarea\" type=\"text\" placeholder=\"Details\"  value={Details}\r\n                          onChange={(e) => setDetails(e.target.value)} />\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Price\"  value={Price}\r\n                          onChange={(e) => setPrice(e.target.value)}/>\r\n\r\n                        <Form.Label>Quantity</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Quantity\"  value={Quantity}\r\n                          onChange={(e) => setQuantity(e.target.value)}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                         Add Stock\r\n                        </Button>\r\n                </Form>\r\n                </FormContainer>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>HOME</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOldStocks\r\n\r\n\r\n\r\n\r\n ","import axios from 'axios'\r\nimport {\r\n    ADDSTOCKS_NEW_SUCCESS,\r\n    ADDSTOCKS_NEW_REQUEST,\r\n    ADDSTOCKS_NEW_FAIL,\r\n    ADDSTOCKS_NEW_RESET,\r\n    ADDSTOCKS_OLD_SUCCESS,\r\n    ADDSTOCKS_OLD_REQUEST,\r\n    ADDSTOCKS_OLD_FAIL,\r\n    ADDSTOCKS_OLD_RESET\r\n} from '../constants/sellerConstants'\r\n\r\nexport const addNewStock = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_SUCCESS,\r\n            payload:[]\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewParticularStock = (sid,Name,Brand,Category,Details,Price,Quantity) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/addnewparticularstock/${sid}`,\r\n            {'Name':Name,'Brand':Brand,'Category':Category,'Details':Details,'Price':Price,'Quantity':Quantity},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_SUCCESS,\r\n            payload: []\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOldStock = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/addoldstocks/${sid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOldParticularStock = (sid,skid,quantity) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/addoldparticularstock/${sid}/${skid}/${quantity}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n       /* localStorage.setItem('userInfo', JSON.stringify(data)) */\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addOldStock } from '../actions/sellerActions'\r\nimport { addOldParticularStock } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction AddOldStocks ({history}){\r\n    const dispatch = useDispatch()\r\n    const [StockId,setStockId]=useState('')\r\n    const [Quantity,setQuantity]=useState('')\r\n    const data = useSelector(state => state.addOldStocks)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, addOldStocks} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(addOldStock(userInfo.sellerId))\r\n    },[dispatch,userInfo])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addOldParticularStock(userInfo.sellerId,StockId,Quantity))\r\n        setStockId('')\r\n        setQuantity('')\r\n    }\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :addOldStocks\r\n                       ? (<div>\r\n                           <Container>\r\n                           <Form onSubmit={submitHandler} >\r\n                           <Form.Group controlId='stockId' >\r\n                          <Form.Control\r\n                          type=\"text\" placeholder=\"StockId\" \r\n                          value={StockId}\r\n                          onChange={(e) => setStockId(e.target.value)}/>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='quantity' >\r\n                         <Form.Control \r\n                        type=\"text\" placeholder=\"Quantity\"\r\n                        value={Quantity}\r\n                        onChange={(e) => setQuantity(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Update Stock </Button>\r\n                          </Form>\r\n                            </Container>\r\n                        <h1>Existing Stocks</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>StockId</th>\r\n                                    <th>Price</th>\r\n                                    <th>Last Updated</th>\r\n                                    <th>Available Quantity</th>\r\n                                    <th>Total Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {addOldStocks.map(data => (\r\n                                    <tr key={data.stockId}>\r\n                                         <td>{data.stockId}</td>\r\n                                        <td>{data.price}</td>\r\n                                        <td>{data.dateOfAddition.substring(0,10)}</td>\r\n                                        <td>{data.availableQuantity}</td>\r\n                                        <td>{data.totalQuantity}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>HOME</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOldStocks\r\n\r\n\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { adminlist } from '../actions/adminActions'\r\nimport { removeAdmin } from '../actions/adminActions'\r\nimport { addAdmin } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction Admins ({history}){\r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.adminsList)\r\n    const {error,loading, adminsList} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(adminlist())\r\n    },[dispatch,userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addAdmin(name,email,phone))\r\n        setName('')\r\n        setEmail('')\r\n        setPhone('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :adminsList\r\n                       ? (<div>\r\n                            <Container>\r\n                           <Form onSubmit={submitHandler} >\r\n                           <Form.Group controlId='name' >\r\n                          <Form.Control\r\n                          type=\"text\" placeholder=\"Name\" \r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}/>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='email' >\r\n                         <Form.Control \r\n                        type=\"text\" placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='phone' >\r\n                        <Form.Control \r\n                        type=\"text\" placeholder=\"Phone number\"\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Add Admin </Button>\r\n                          </Form>\r\n                            </Container>\r\n\r\n                        <h1>Admins</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {adminsList.map(data => (\r\n                                    <tr key={data.adminId}>\r\n                                         <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(removeAdmin(data.adminId))} >Remove</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admins","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport UserListScreen from './screens/UserListScreen'\r\nimport UserEditScreen from './screens/UserEditScreen'\r\nimport ProductListScreen from './screens/ProductListScreen'\r\nimport ProductEditScreen from './screens/ProductEditScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport VerifiedSellers from './screens/VerifiedSellers' \r\nimport UnverifiedSellers from './screens/UnverifiedSellers' \r\nimport DeliverProducts from './screens/DeliverProducts' \r\nimport ReturnProducts from './screens/ReturnProducts' \r\nimport AddNewStocks from './screens/AddNewStocks' \r\nimport AddOldStocks from './screens/AddOldStocks' \r\nimport Admins from './screens/Admins' \r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n\r\n          <Route path='/verifiedsellers' component={VerifiedSellers} />\r\n          <Route path='/unverifiedsellers' component={UnverifiedSellers} />\r\n\r\n          <Route path='/returnproducts' component={ReturnProducts} />\r\n          <Route path='/deliverproducts' component={DeliverProducts} />\r\n\r\n          <Route path='/addoldstocks' component={AddOldStocks} />\r\n          <Route path='/addnewstocks' component={AddNewStocks} />\r\n          \r\n             \r\n            \r\n          <Route path='/admins' component={Admins} />      \r\n             {/* add or remove admins */}\r\n\r\n          <Route path='/admin/productlist' component={ProductListScreen} />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} /> \r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}