{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","constants/adminConstants.js","constants/sellerConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/adminReducers.js","reducers/sellerReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/VerifiedSellers.js","actions/adminActions.js","screens/UnverifiedSellers.js","screens/DeliverProducts.js","screens/ReturnProducts.js","screens/AddNewStocks.js","actions/sellerActions.js","screens/AddOldStocks.js","screens/Admins.js","screens/UserOrderRequests.js","screens/AddOffers.js","screens/RemoveOffers.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_ADD_REQUEST","CART_UPDATE","CART_REMOVE_ITEM","CART_REMOVE_SUCCESS","CART_UPDATE_SUCCESS","CART_GET_REQUEST","CART_REMOVE_REQUEST","CART_SAVE_SHIPPING_ADDRESS","CART_GET_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_GET_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_LOGOUT_REQUEST","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_CANCEL_REQUEST","ORDER_CANCEL_SUCCESS","ORDER_CANCEL_FAIL","ORDER_RETURN_REQUEST","ORDER_RETURN_SUCCESS","ORDER_RETURN_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDER_DETAILS_RESET","VERIFIED_SELLERS_SUCCESS","VERIFIED_SELLERS_REQUEST","VERIFIED_SELLERS_FAIL","VERIFIED_SELLERS_RESET","UNVERIFIED_SELLERS_SUCCESS","UNVERIFIED_SELLERS_REQUEST","UNVERIFIED_SELLERS_FAIL","UNVERIFIED_SELLERS_RESET","ADMINS_LIST_SUCCESS","ADMINS_LIST_REQUEST","ADMINS_LIST_FAIL","ADMINS_LIST_RESET","DELIVER_PRODUCTS_SUCCESS","DELIVER_PRODUCTS_REQUEST","DELIVER_PRODUCTS_FAIL","DELIVER_PRODUCTS_RESET","RETURN_PRODUCTS_SUCCESS","RETURN_PRODUCTS_REQUEST","RETURN_PRODUCTS_FAIL","RETURN_PRODUCTS_RESET","ADDSTOCKS_NEW_SUCCESS","ADDSTOCKS_NEW_REQUEST","ADDSTOCKS_NEW_FAIL","ADDSTOCKS_NEW_RESET","ADDSTOCKS_OLD_SUCCESS","ADDSTOCKS_OLD_REQUEST","ADDSTOCKS_OLD_FAIL","ADDSTOCKS_OLD_RESET","USER_ORDERS_PLACED_SUCCESS","USER_ORDERS_PLACED_REQUEST","USER_ORDERS_PLACED_FAIL","USER_ORDERS_PLACED_RESET","ADDOFFERS_SUCCESS","ADDOFFERS_REQUEST","ADDOFFERS_FAIL","ADDOFFERS_RESET","REMOVEOFFERS_SUCCESS","REMOVEOFFERS_REQUEST","REMOVEOFFERS_FAIL","REMOVEOFFERS_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","console","log","productReviewCreate","success","productTopRated","cart","cartItems","item","existItem","find","x","stockId","map","filter","shipping","shippingAddress","fetching","payment","paymentMethod","getting","userLogin","userInfo","loggingOut","userRegister","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cancelOrder","wrong","returnOrder","succeed","mistake","verifiedSellers","unverifiedSellers","adminsList","returnProducts","deliverProducts","addNewStocks","addOldStocks","userOrderRequests","addOffers","removeOffers","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","addNewstocks","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Row","Col","sm","Control","size","name","onChange","target","value","className","Button","variant","login","email","password","role","dispatch","a","config","headers","axios","post","data","setItem","stringify","response","message","Header","useSelector","rolling","setRolling","useDispatch","logoutHandler","removeItem","window","hash","useEffect","Navbar","bg","expand","collapseOnSelect","Container","fluid","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","onClick","Spinner","Footer","Rating","text","color","style","Product","price","discount","Card","offerId","Img","src","productId","image","Body","Title","as","Text","rating","votes","discountPercent","parseInt","sellerId","company","Loader","animation","height","width","margin","display","Message","children","show","setShow","Alert","onClose","dismissible","Paginate","isAdmin","split","Pagination","Array","keys","active","ProductCarousel","get","detail","Carousel","pause","Image","alt","Caption","HomeScreen","search","listProducts","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","addToCartHandler","ListGroup","details","availableQuantity","xs","disabled","reviews","length","review","buyerId","reviewedAt","substring","ratingId","userId","getState","Authorization","adminId","createProductReview","Group","controlId","Label","row","addToCart","put","information","getCart","CartScreen","Number","setFetch","removeFromCartHandler","delete","removeFromCart","rounded","quantity","reduce","acc","toFixed","FormContainer","LoginScreen","setEmail","setPassword","setRole","redirect","placeholder","custom","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","phone","setPhone","address","setAddress","setCompany","submitHandler","register","Tabs","defaultActiveKey","transition","Tab","eventKey","onSelect","required","getOrderDetails","token","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","Table","striped","responsive","orderId","orderedAt","totalAmount","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","PaymentScreen","paymentmethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","receiving","setReceiving","itemsPrice","shippingPrice","totalPrice","createOrder","OrderScreen","cancelorder","returnorder","setFetching","items","amount","cancelOrderHandler","orderedItemId","returnOrderHandler","href","status","OrderListScreen","bordered","hover","VerifiedSellers","sid","UnverifiedSellers","DeliverProducts","oid","ReturnProducts","AddOldStocks","Name","setBrand","Category","setCategory","Details","setDetails","Price","setPrice","Quantity","setQuantity","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","file","configuration","formData","FormData","append","addNewParticularStock","File","files","StockId","setStockId","skid","dateOfAddition","totalQuantity","Admins","addAdmin","aid","UserOrderRequests","finalDate","AddOffers","Offer","setOffer","offer","RemoveOffers","ofid","App","path","component","exact","AddNewStocks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7aff9c74.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET'\r\n\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_ADD_REQUEST = 'CART_ADD_REQUEST'\r\nexport const CART_UPDATE = 'CART_UPDATE'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_REMOVE_SUCCESS = 'CART_REMOVE_SUCCESS'\r\nexport const CART_UPDATE_SUCCESS ='CART_UPDATE_SUCCESS'\r\nexport const CART_GET_REQUEST = 'CART_GET_REQUEST'\r\nexport const CART_REMOVE_REQUEST ='CART_REMOVE_REQUEST'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_GET_SHIPPING_ADDRESS = 'CART_GET_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_GET_PAYMENT_METHOD = 'CART_GET_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_LOGOUT_REQUEST ='USER_LOGOUT_REQUEST'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_CANCEL_REQUEST ='ORDER_CANCEL_REQUEST'\r\nexport const ORDER_CANCEL_SUCCESS = 'ORDER_CANCEL_SUCCESS'\r\nexport const ORDER_CANCEL_FAIL = 'ORDER_CANCEL_FAIL'\r\n\r\nexport const ORDER_RETURN_REQUEST ='ORDER_RETURN_REQUEST'\r\nexport const ORDER_RETURN_SUCCESS = 'ORDER_RETURN_SUCCESS'\r\nexport const ORDER_RETURN_FAIL = 'ORDER_RETURN_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\r\n","export const VERIFIED_SELLERS_SUCCESS = 'VERIFIED_SELLERS_SUCCESS'\r\nexport const VERIFIED_SELLERS_REQUEST = 'VERIFIED_SELLERS_REQUEST'\r\nexport const VERIFIED_SELLERS_FAIL = 'VERIFIED_SELLERS_FAIL'\r\nexport const VERIFIED_SELLERS_RESET = 'VERIFIED_SELLERS_RESET'\r\n\r\nexport const UNVERIFIED_SELLERS_SUCCESS = 'UNVERIFIED_SELLERS_SUCCESS'\r\nexport const UNVERIFIED_SELLERS_REQUEST = 'UNVERIFIED_SELLERS_REQUEST'\r\nexport const UNVERIFIED_SELLERS_FAIL = 'UNVERIFIED_SELLERS_FAIL'\r\nexport const UNVERIFIED_SELLERS_RESET = 'UNVERIFIED_SELLERS_RESET'\r\n\r\nexport const ADMINS_LIST_SUCCESS = 'ADMINS_LIST_SUCCESS'\r\nexport const ADMINS_LIST_REQUEST = 'ADMINS_LIST_REQUEST'\r\nexport const ADMINS_LIST_FAIL = 'ADMINS_LIST_FAIL'\r\nexport const ADMINS_LIST_RESET = 'ADMINS_LIST_RESET'\r\n\r\nexport const DELIVER_PRODUCTS_SUCCESS = 'DELIVER_PRODUCTS_SUCCESS'\r\nexport const DELIVER_PRODUCTS_REQUEST = 'DELIVER_PRODUCTS_REQUEST'\r\nexport const DELIVER_PRODUCTS_FAIL = 'DELIVER_PRODUCTS_FAIL'\r\nexport const DELIVER_PRODUCTS_RESET = 'DELIVER_PRODUCTS_RESET'\r\n\r\nexport const RETURN_PRODUCTS_SUCCESS = 'RETURN_PRODUCTS_SUCCESS'\r\nexport const RETURN_PRODUCTS_REQUEST = 'RETURN_PRODUCTS_REQUEST'\r\nexport const RETURN_PRODUCTS_FAIL = 'RETURN_PRODUCTS_FAIL'\r\nexport const RETURN_PRODUCTS_RESET = 'RETURN_PRODUCTS_RESET'","export const ADDSTOCKS_NEW_SUCCESS = 'ADDSTOCKS_NEW_SUCCESS'\r\nexport const ADDSTOCKS_NEW_REQUEST = 'ADDSTOCKS_NEW_REQUEST'\r\nexport const ADDSTOCKS_NEW_FAIL = 'ADDSTOCKS_NEW_FAIL'\r\nexport const ADDSTOCKS_NEW_RESET = 'ADDSTOCKS_NEW_RESET'\r\n\r\nexport const ADDSTOCKS_OLD_SUCCESS = 'ADDSTOCKS_OLD_SUCCESS'\r\nexport const ADDSTOCKS_OLD_REQUEST = 'ADDSTOCKS_OLD_REQUEST'\r\nexport const ADDSTOCKS_OLD_FAIL = 'ADDSTOCKS_OLD_FAIL'\r\nexport const ADDSTOCKS_OLD_RESET = 'ADDSTOCKS_OLD_RESET'\r\n\r\nexport const USER_ORDERS_PLACED_SUCCESS = 'USER_ORDERS_PLACED_SUCCESS'\r\nexport const USER_ORDERS_PLACED_REQUEST = 'USER_ORDERS_PLACED_REQUEST'\r\nexport const USER_ORDERS_PLACED_FAIL = 'USER_ORDERS_PLACED_FAIL'\r\nexport const USER_ORDERS_PLACED_RESET = 'USER_ORDERS_PLACED_RESET'\r\n\r\nexport const ADDOFFERS_SUCCESS = 'ADDOFFERS_SUCCESS'\r\nexport const ADDOFFERS_REQUEST = 'ADDOFFERS_REQUEST'\r\nexport const ADDOFFERS_FAIL = 'ADDOFFERS_FAIL'\r\nexport const ADDOFFERS_RESET = 'ADDOFFERS_RESET'\r\n\r\nexport const REMOVEOFFERS_SUCCESS = 'REMOVEOFFERS_SUCCESS'\r\nexport const REMOVEOFFERS_REQUEST = 'REMOVEOFFERS_REQUEST'\r\nexport const REMOVEOFFERS_FAIL = 'REMOVEOFFERS_FAIL'\r\nexport const REMOVEOFFERS_RESET = 'REMOVEOFFERS_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer,addressReducer,paymentReducer } from './reducers/cartReducers'\r\n\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n   \r\n} from './reducers/userReducers'\r\n\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n    cancelOrderReducer,\r\n    returnOrderReducer\r\n} from './reducers/orderReducers'\r\n\r\n/* admin func */\r\nimport {\r\n    verifiedSellersReducer,\r\n    unverifiedSellersReducer,\r\n    adminsListReducer,\r\n    deliverProductsReducer,\r\n    returnProductsReducer\r\n} from './reducers/adminReducers'  \r\n\r\nimport {\r\n    addNewStocksReducer,\r\n    addOldStocksReducer,\r\n    userOrderRequestsReducer,\r\n    addOffersReducer,\r\n    removeOffersReducer\r\n} from './reducers/sellerReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n\r\n    cart: cartReducer,\r\n    shipping :addressReducer,\r\n    payment:paymentReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    cancelOrder:cancelOrderReducer,\r\n    returnOrder:returnOrderReducer,\r\n\r\n    verifiedSellers:verifiedSellersReducer,\r\n    unverifiedSellers:unverifiedSellersReducer,\r\n\r\n    adminsList:adminsListReducer,\r\n    returnProducts:returnProductsReducer,\r\n    deliverProducts:deliverProductsReducer,\r\n\r\n    addNewStocks:addNewStocksReducer,\r\n    addOldStocks:addOldStocksReducer,\r\n    userOrderRequests:userOrderRequestsReducer,\r\n\r\n    addOffers:addOffersReducer,\r\n    removeOffers:removeOffersReducer\r\n\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : ''\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n    shipping :{\r\n        shippingAddress : ''\r\n    },\r\n    verifiedSellers:{verifiedSellers:[]},\r\n    unverifiedSellers:{unverifiedSellers:[]},\r\n    adminsList :{adminsList:[]},\r\n    deliverProducts:{deliverProducts:[]},\r\n    returnProducts:{returnProducts:[]},\r\n    addNewStocks:{addNewstocks:[]},\r\n    addOldStocks:{addOldStocks:[]},\r\n    userOrderRequests:{userOrderRequests:[]},\r\n    addOffers:{addOffers:[]},\r\n    removeOffers:{removeOffers:[]}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_RESET,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDetailsReducer = (state = {product:{} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            console.log(action.payload)\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            console.log(action.payload)\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_DETAILS_RESET:\r\n            return {loading:true,product:{}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_ADD_REQUEST,\r\n    CART_REMOVE_ITEM,\r\n    CART_REMOVE_REQUEST,\r\n    CART_REMOVE_SUCCESS,\r\n    CART_UPDATE_SUCCESS,\r\n    CART_GET_REQUEST,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_GET_PAYMENT_METHOD,\r\n    CART_GET_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS,\r\n    CART_UPDATE,\r\n    SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_REQUEST:\r\n             return { loading: true, cartItems: []\r\n               \r\n            }\r\n        case CART_GET_REQUEST:\r\n            return {loading:true,cartItems:[]\r\n               \r\n            }\r\n        case CART_UPDATE:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                cartItems:action.payload,\r\n             \r\n\r\n            }\r\n        case CART_UPDATE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                cartItems:state.cartItems,\r\n              \r\n            }\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.stockId.stockId === item.stockId.stockId)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    loading:true,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.stockId.stockId === existItem.stockId.stockId ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    loading:false,\r\n                    cartItems: [...state.cartItems, item],\r\n                   \r\n                }\r\n            }\r\n        case CART_REMOVE_REQUEST:\r\n            return {\r\n                loading:true,\r\n                cartItems:state.cartItems,\r\n\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.stockId.stockId !== action.payload),\r\n                loading:true\r\n            }\r\n        case CART_REMOVE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems,\r\n                loading:false\r\n            }\r\n\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addressReducer = (state ={shippingAddress :''},action) =>{\r\n      switch (action.type) {\r\n           case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                fetching:true,\r\n                shippingAddress: action.payload,\r\n            }\r\n            case CART_GET_SHIPPING_ADDRESS:\r\n                return {\r\n                    ...state,\r\n                    fetching:false,\r\n                    shippingAddress:state.shippingAddress\r\n                }\r\n            default:\r\n                return state\r\n      }\r\n}\r\n\r\nexport const paymentReducer = (state ={paymentMethod :''},action) =>{\r\n      switch (action.type) {\r\n           case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                getting:true,\r\n                paymentMethod: action.payload,\r\n            }\r\n            case CART_GET_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    getting:false,\r\n                    paymentMethod:state.paymentMethod\r\n                }\r\n            default:\r\n                return state\r\n      }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_REQUEST,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT_REQUEST:\r\n            return {loggingOut:true}\r\n\r\n        case USER_LOGOUT:\r\n            return {loggingOut:false}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_RESET,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n    ORDER_CANCEL_REQUEST,\r\n    ORDER_CANCEL_SUCCESS,\r\n    ORDER_CANCEL_FAIL,\r\n\r\n\r\n    ORDER_RETURN_REQUEST,\r\n    ORDER_RETURN_SUCCESS,\r\n    ORDER_RETURN_FAIL\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DETAILS_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cancelOrderReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_CANCEL_REQUEST:\r\n            return {\r\n                fetching:true\r\n            }\r\n        case ORDER_CANCEL_SUCCESS:\r\n            return {\r\n                fetching:false,\r\n                success:action.payload\r\n            }\r\n        case ORDER_CANCEL_FAIL:\r\n            return {\r\n                fetching:false,\r\n                wrong:action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const returnOrderReducer=(state={},action)=>{\r\n    switch(action.type){\r\n        case ORDER_RETURN_REQUEST:\r\n            return {\r\n                getting:true\r\n            }\r\n        case ORDER_RETURN_SUCCESS:\r\n            return {\r\n                getting:false,\r\n                succeed:action.payload\r\n            }\r\n        case ORDER_RETURN_FAIL:\r\n            return {\r\n                getting:false,\r\n                mistake:action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {\r\n    VERIFIED_SELLERS_REQUEST,\r\n    VERIFIED_SELLERS_SUCCESS,\r\n    VERIFIED_SELLERS_FAIL,\r\n    VERIFIED_SELLERS_RESET,\r\n    UNVERIFIED_SELLERS_REQUEST,\r\n    UNVERIFIED_SELLERS_SUCCESS,\r\n    UNVERIFIED_SELLERS_FAIL,\r\n    UNVERIFIED_SELLERS_RESET,\r\n    ADMINS_LIST_SUCCESS,\r\n    ADMINS_LIST_REQUEST,\r\n    ADMINS_LIST_FAIL,\r\n    ADMINS_LIST_RESET,\r\n    RETURN_PRODUCTS_SUCCESS,\r\n    RETURN_PRODUCTS_REQUEST,\r\n    RETURN_PRODUCTS_FAIL,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_SUCCESS,\r\n    DELIVER_PRODUCTS_REQUEST,\r\n    DELIVER_PRODUCTS_FAIL,\r\n    DELIVER_PRODUCTS_RESET\r\n} from '../constants/adminConstants'\r\n\r\nexport const verifiedSellersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case VERIFIED_SELLERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case VERIFIED_SELLERS_SUCCESS:\r\n            return { loading: false, verifiedSellers: action.payload }\r\n\r\n        case VERIFIED_SELLERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case VERIFIED_SELLERS_RESET :\r\n            return {verifiedSellers:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const unverifiedSellersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case UNVERIFIED_SELLERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case UNVERIFIED_SELLERS_SUCCESS:\r\n            return { loading: false, unverifiedSellers: action.payload }\r\n\r\n        case UNVERIFIED_SELLERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case UNVERIFIED_SELLERS_RESET :\r\n            return {unverifiedSellers:null}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const adminsListReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADMINS_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADMINS_LIST_SUCCESS:\r\n            return { loading: false, adminsList: action.payload }\r\n\r\n        case ADMINS_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADMINS_LIST_RESET :\r\n            return {adminsList:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const deliverProductsReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case DELIVER_PRODUCTS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case DELIVER_PRODUCTS_SUCCESS:\r\n            return { loading: false, deliverProducts: action.payload }\r\n\r\n        case DELIVER_PRODUCTS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case DELIVER_PRODUCTS_RESET :\r\n            return {deliverProducts:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const returnProductsReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case RETURN_PRODUCTS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case RETURN_PRODUCTS_SUCCESS:\r\n            return { loading: false, returnProducts: action.payload }\r\n\r\n        case RETURN_PRODUCTS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case RETURN_PRODUCTS_RESET :\r\n            return {returnProducts:null}\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ADDSTOCKS_NEW_SUCCESS,\r\n    ADDSTOCKS_NEW_REQUEST,\r\n    ADDSTOCKS_NEW_FAIL,\r\n    ADDSTOCKS_NEW_RESET,\r\n    ADDSTOCKS_OLD_SUCCESS,\r\n    ADDSTOCKS_OLD_REQUEST,\r\n    ADDSTOCKS_OLD_FAIL,\r\n    ADDSTOCKS_OLD_RESET,\r\n    USER_ORDERS_PLACED_SUCCESS,\r\n    USER_ORDERS_PLACED_REQUEST,\r\n    USER_ORDERS_PLACED_FAIL,\r\n    USER_ORDERS_PLACED_RESET,\r\n    ADDOFFERS_SUCCESS,\r\n    ADDOFFERS_REQUEST,\r\n    ADDOFFERS_FAIL,\r\n    ADDOFFERS_RESET,\r\n    REMOVEOFFERS_SUCCESS,\r\n    REMOVEOFFERS_REQUEST,\r\n    REMOVEOFFERS_FAIL,\r\n    REMOVEOFFERS_RESET\r\n} from '../constants/sellerConstants'\r\n\r\nexport const addNewStocksReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADDSTOCKS_NEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADDSTOCKS_NEW_SUCCESS:\r\n            return { loading: false, addNewStocks: action.payload }\r\n\r\n        case ADDSTOCKS_NEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADDSTOCKS_NEW_RESET :\r\n            return {addNewStocks:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addOldStocksReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADDSTOCKS_OLD_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADDSTOCKS_OLD_SUCCESS:\r\n            return { loading: false, addOldStocks: action.payload }\r\n\r\n        case ADDSTOCKS_OLD_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADDSTOCKS_OLD_RESET :\r\n            return {addOldStocks:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userOrderRequestsReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_ORDERS_PLACED_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_ORDERS_PLACED_SUCCESS:\r\n            return { loading: false, userOrderRequests: action.payload }\r\n\r\n        case USER_ORDERS_PLACED_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_ORDERS_PLACED_RESET :\r\n            return {userOrderRequests:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addOffersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case ADDOFFERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case ADDOFFERS_SUCCESS:\r\n            return { loading: false, addOffers: action.payload }\r\n\r\n        case ADDOFFERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADDOFFERS_RESET :\r\n            return {addOffers:null}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const removeOffersReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case REMOVEOFFERS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case REMOVEOFFERS_SUCCESS:\r\n            return { loading: false, removeOffers: action.payload }\r\n\r\n        case REMOVEOFFERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case REMOVEOFFERS_RESET :\r\n            return {removeOffers:null}\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Col,Row,Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Row>\r\n                <Col sm = {9}>\r\n                <Form.Control\r\n                    type='text'\r\n                    size='sm'\r\n                    name='q'\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    className='mr-sm-2 ml-sm-5'\r\n                ></Form.Control>\r\n                </Col>\r\n                <Col sm = {3}>\r\n                <Button\r\n                    type='submit'\r\n                    size=\"sm\"\r\n                    variant='outline-success'\r\n                    className='p-2'\r\n                >\r\n                    Search\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n    USER_LOGOUT_REQUEST,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nimport { VERIFIED_SELLERS_RESET,\r\n    UNVERIFIED_SELLERS_RESET,\r\n    ADMINS_LIST_RESET,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_RESET\r\n   } from '../constants/adminConstants'\r\n\r\nexport const login = (email, password,role) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/login/',\r\n            { 'email': email, 'password': password,'role':role},\r\n            config\r\n        )\r\n        console.log(data)\r\n        if (data.role)\r\n        {\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n          localStorage.setItem('userInfo', JSON.stringify(data))\r\n        }\r\n        else {\r\n            dispatch({\r\n                type:USER_LOGOUT_REQUEST\r\n            })\r\n            dispatch({\r\n                type:USER_LOGOUT\r\n            })\r\n        }\r\n\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    await axios.post(`/api/logout`)\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: VERIFIED_SELLERS_RESET })\r\n    dispatch({ type: UNVERIFIED_SELLERS_RESET }) \r\n    dispatch({ type: ADMINS_LIST_RESET})\r\n    dispatch({ type: RETURN_PRODUCTS_RESET})\r\n    dispatch({ type: DELIVER_PRODUCTS_RESET})\r\n\r\n}\r\n\r\n\r\nexport const register = (name,email,phone,address, password,role,company) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/register/',\r\n            { 'email': email, 'password': password ,'name':name,'address':address,'phone':phone,'role':role,'company':company },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.role=='buyer'?userInfo.buyerId:userInfo.role=='seller'?userInfo.sellerId:userInfo.adminId}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/${userInfo.role}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.role=='buyer'?userInfo.buyerId:userInfo.role=='seller'?userInfo.sellerId:userInfo.adminId}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/profile/update/`,\r\n            {'user':user,'role':userInfo.role},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {React,useState,useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col,Form , Navbar, Nav, Container, Row, NavDropdown, Spinner } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Header({history}) {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const [rolling,setRolling] = useState(false)\r\n    const { userInfo,loggingOut } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        setRolling(true)\r\n        dispatch(logout())\r\n        setRolling(false)\r\n        // history.push('/login')\r\n        window.location.hash ='/login'\r\n    }\r\n    useEffect(() => {\r\n       \r\n    }, [rolling,userInfo])\r\n\r\n    return (\r\n        <header>\r\n <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container fluid>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>ShoppingCavern</Navbar.Brand>\r\n                    </LinkContainer>\r\n                      <SearchBox />\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                 {userInfo ?\r\n                                userInfo.role=='buyer'?\r\n                                \r\n                                    <Nav className=\"ml-auto\">\r\n\r\n                                      \r\n\r\n                                        <LinkContainer to='/cart'>\r\n                                        <Nav.Link ><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                                        </LinkContainer>\r\n                                        \r\n                                        <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        {!rolling&& <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>}\r\n                                        {rolling &&<Spinner></Spinner>}\r\n                                        </NavDropdown>\r\n\r\n                                    </Nav>\r\n                                       \r\n                                :userInfo.role=='seller'?\r\n                                 <Nav className = \"ml-auto\">\r\n                                  \r\n\r\n                                        <NavDropdown title='Add Stocks' id='username'>\r\n                                        <LinkContainer to='/addnewstocks'>\r\n                                            <NavDropdown.Item>New</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/addoldstocks'>\r\n                                            <NavDropdown.Item>Existing</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n\r\n                                    <LinkContainer to='/userorderrequests'>\r\n                                        <Nav.Link>Orders</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown title='Offers' id='username'>\r\n                                        <LinkContainer to='/addoffers'>\r\n                                            <NavDropdown.Item>Add</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/removeoffers'>\r\n                                            <NavDropdown.Item>Remove</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                    </NavDropdown>\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    </Nav>\r\n\r\n                                \r\n                                : \r\n                                    <Nav className=\"ml-auto\">\r\n                                      \r\n                                    <LinkContainer to='/admins'>\r\n                                        <Nav.Link >Admins</Nav.Link>\r\n                                        </LinkContainer>\r\n                                        <NavDropdown title='Sellers' id='adminmenue'>\r\n                                        <LinkContainer to='/unverifiedsellers'>\r\n                                            <NavDropdown.Item>Approve</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/verifiedsellers'>\r\n                                            <NavDropdown.Item>Remove</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        </NavDropdown>\r\n                                        <NavDropdown title='Products' id='adminmenue'>\r\n                                        <LinkContainer to='/deliverproducts'>\r\n                                            <NavDropdown.Item>Deliver</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/returnproducts'>\r\n                                            <NavDropdown.Item>Return</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                       </NavDropdown>\r\n                                       <NavDropdown title='Account' id='adminmenue'>\r\n                                       <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                       <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                       </NavDropdown>\r\n                                   </Nav>:\r\n                                   <Nav className=\"ml-auto\">\r\n                                   \r\n\r\n                                        <LinkContainer to='/login'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>  Login</Nav.Link>\r\n                                    </LinkContainer>\r\n                                    \r\n                                    <LinkContainer to='/register'>\r\n                                        <Nav.Link><i className=\"fas fa-user\"></i>  Register</Nav.Link>\r\n                                    </LinkContainer>\r\n                                        \r\n                                   \r\n\r\n                                       \r\n                                   </Nav>}\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n                         ","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Shopping Cavern</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color }) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n\r\n    function discountPercent(price,discount){\r\n        return (parseInt(price*100/(100-discount)))\r\n    }\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={product.offerId?`/product/${product.stockId.stockId}`:`/product/${product.stockId}`}>\r\n                <Card.Img src={product.productId.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={product.offerId?`/product/${product.stockId.stockId}`:`/product/${product.stockId}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.productId.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.productId.rating} text={`${product.productId.votes} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                {!product.offerId?(<Card.Text as=\"h5\">\r\n                    &#8377;{product.price}\r\n                </Card.Text>):(<Card.Text as=\"h5\" >\r\n                     &#8377;{product.price}<span style={{'fontSize':'12px','marginLeft':'10px'}}><del>{discountPercent(product.price,product.discountPercent)}</del></span>\r\n                </Card.Text>)}\r\n                  <Card.Text>\r\n                    sold by:{product.sellerId.company}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import {useState,React} from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({ variant, children }) {\r\n    const [show, setShow] = useState(true);\r\n    if (show) {\r\n    return (\r\n      <Alert variant={variant} onClose={() => setShow(false)} dismissible>\r\n       {children}\r\n      </Alert>\r\n    );\r\n  }\r\n  return <div></div>\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x + 1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n        : error\r\n            ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product.stockId.stockId}>\r\n                            <Link to={product.offerId?`/product/${product.stockId.stockId}`:`/product/${product.stockId}`}>\r\n                                <Image src={product.productId.image} alt={product.productId.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.productId.name} \r\n                                    (&#8377;{product.price})\r\n                                    </h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import axios from 'axios'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        console.log(id)\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/product/${id}`)\r\n        console.log(data)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, rating,review,userId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization: `Bearer ${userInfo.role=='buyer'?userInfo.buyerId:userInfo.role=='seller'?userInfo.sellerId:userInfo.adminId}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews/`,\r\n            {'review':review,'rating':rating,'userId':userId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts } from '../actions/productActions'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    \r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n       if(!userInfo)\r\n       {\r\n            dispatch(login('','',''))\r\n       }\r\n        dispatch(listProducts(keyword))\r\n\r\n    }, [dispatch, keyword,userInfo])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            {keyword==''?(<h1>Latest Products</h1>):(<h1>Search Results</h1>)}\r\n            {loading ? <Loader />\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                      \r\n                            {products.map(product => (                                \r\n                                <Col key={product.stockId.stockId} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            ))}\r\n                        </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword} />\r\n                    </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_DETAILS_RESET } from '../constants/productConstants'\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        // if(!userInfo)\r\n        // {\r\n        //     history.push('/login')\r\n        // }\r\n        dispatch({type:PRODUCT_DETAILS_RESET})\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n        console.log(product,match.params.id)\r\n    }, [dispatch, match.params.id, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            product.productId.productId, \r\n            rating,\r\n            comment,\r\n            userInfo.buyerId,\r\n        ))\r\n    }\r\n     function discountPercent(price,discount){\r\n        return (parseInt(price*100/(100-discount)))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                         <div>\r\n                        {product.productId?(\r\n                            <div>\r\n                             <Row>\r\n                                 <Col md={6}>\r\n                             \r\n                                    <Image src={product.productId.image} alt={product.productId.name} fluid />\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                       \r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.productId.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating value={product.productId.rating} text={`${product.productId.votes} reviews`} color={'#f8e825'} />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                         \r\n                                      \r\n                                            Price:&#8377;{product.price}&nbsp;\r\n                                            \r\n                                           {product.offerId&& \r\n                                                    <del>{discountPercent(product.price,product.discountPercent)}</del>\r\n                                                    }\r\n                                         \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {product.productId.details}\r\n                                        </ListGroup.Item>\r\n                                                                                <ListGroup.Item>\r\n                                        Sold By: {product.sellerId.company}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant='flush'>\r\n                                         {!userInfo&&<ListGroup.Item>\r\n                                            <Message variant='info'>Login to Add to cart</Message>\r\n                                        </ListGroup.Item>}\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong> &#8377;{product.price}</strong>\r\n                                                    </Col>\r\n                                                   \r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.availableQuantity > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.availableQuantity > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n\r\n                                                                    [...Array(product.availableQuantity).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            {x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n\r\n                                            {userInfo && userInfo.role=='buyer'&&<ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.availableQuantity == 0||!userInfo}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>}\r\n                                            \r\n                                              {!userInfo && <ListGroup.Item>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    disabled={product.availableQuantity == 0||!userInfo}\r\n                                                    type='button'>\r\n                                                    Add to Cart\r\n                                                </Button>\r\n                                            </ListGroup.Item>}\r\n                                            \r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                           \r\n                            </Row> \r\n\r\n                            <Row>\r\n                                 <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => (\r\n                                            <ListGroup.Item key={review.ratingId}>\r\n                                                <strong>{review.buyerId.name}</strong> \r\n                                                <Rating value={review.rating} color='#f8e825' />\r\n                                                <p>{review.reviewedAt.substring(0, 10)}</p>\r\n                                                <p>{review.review}</p>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                            {userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e) => setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Review</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='textarea'\r\n                                                            row='5'\r\n                                                            value={comment}\r\n                                                            onChange={(e) => setComment(e.target.value)}\r\n                                                        ></Form.Control>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Button\r\n                                                        disabled={loadingProductReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'\r\n                                                    >\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ) : (\r\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col> \r\n                            </Row> \r\n                            </div> \r\n                        ):(\r\n                            <div><h1>Error occured</h1></div>\r\n                        )}\r\n                        </div> \r\n                    )\r\n\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_GET_REQUEST,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_ADD_REQUEST,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_GET_PAYMENT_METHOD,\r\n    CART_UPDATE,\r\n    CART_REMOVE_REQUEST,\r\n    CART_REMOVE_SUCCESS,\r\n    CART_UPDATE_SUCCESS,\r\n    CART_GET_SHIPPING_ADDRESS\r\n} from '../constants/cartConstants'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type:CART_ADD_REQUEST\r\n    })\r\n     const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n    const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n    const { data } = await axios.put(`/api/cart/product/${id}`,\r\n         {'buyerId':userInfo.buyerId,'quantity':qty},\r\n        config\r\n    )\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: data\r\n    })\r\n    const information = await axios.get(`api/mycart/${userInfo.buyerId}`)\r\n    console.log(information)\r\n    dispatch({\r\n        type:CART_UPDATE,\r\n        payload:information.data\r\n    })\r\n    dispatch({\r\n        type:CART_UPDATE_SUCCESS\r\n    })\r\n    // localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const getCart = () => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type:CART_GET_REQUEST\r\n    })\r\n     const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n    const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n  \r\n   \r\n    const information = await axios.get(`api/mycart/${userInfo.buyerId}`)\r\n    console.log(information)\r\n    dispatch({\r\n        type:CART_UPDATE,\r\n        payload:information.data\r\n    })\r\n    dispatch({\r\n        type:CART_UPDATE_SUCCESS\r\n    })\r\n    // localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type:CART_REMOVE_REQUEST\r\n    })\r\n    await axios.delete(`/api/cart/delete/${id}`)\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    dispatch({\r\n        type:CART_REMOVE_SUCCESS\r\n    })\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    dispatch({\r\n        type:CART_GET_SHIPPING_ADDRESS\r\n    })\r\n\r\n}\r\n\r\nexport const getShippingAddress = () => (dispatch) => {\r\n   \r\n    dispatch({\r\n        type:CART_GET_SHIPPING_ADDRESS\r\n    })\r\n\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    dispatch({\r\n        type:CART_GET_PAYMENT_METHOD\r\n    })\r\n\r\n}\r\nexport const getPaymentMethod = () => (dispatch) => {\r\n    dispatch({\r\n        type:CART_GET_PAYMENT_METHOD\r\n    })\r\n}","import React, { useEffect,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart,getCart } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\nimport { CART_UPDATE } from '../constants/cartConstants'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const stockId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n    const cart = useSelector(state => state.cart)\r\n    \r\n    const { cartItems,loading } = cart\r\n    const [fetch,setFetch] = useState(true)\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        else{\r\n        if (stockId) {\r\n            dispatch(addToCart(stockId, qty))\r\n            setFetch(false)\r\n           \r\n        }\r\n        else{\r\n            dispatch(getCart())\r\n        }\r\n    }\r\n    },\r\n      [dispatch, stockId, qty,userInfo,loggingOut]\r\n     )\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                    {loading || loggingOut?<Loader/>:\r\n                cartItems? cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.stockId.stockId}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2}>\r\n                                            &#8377;{item.stockId.price}\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.quantity}\r\n                                                onChange={(e) => dispatch(addToCart(item.stockId.stockId, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n\r\n                                                    [...Array(item.stockId.availableQuantity).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.stockId.stockId)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    ):<Loader/>}\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n               {cartItems&&!loading&&<Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items</h2>\r\n                            &#8377;{cartItems.reduce((acc, item) => acc + item.quantity * item.stockId.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n\r\n\r\n                </Card>}\r\n            </Col> \r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [role,setRole] = useState('buyer')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n            // window.history.back();\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password,role))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"role\">\r\n                    <Form.Label>Select role</Form.Label>\r\n                    <Form.Control as=\"select\" custom value={role} onChange={(e)=>setRole(e.target.value)}>\r\n                      <option>buyer</option>\r\n                      <option>seller</option>\r\n                      <option>admin</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col,Nav,Tabs,Tab,Sonnet } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n   \r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [role,setRole] = useState('buyer')\r\n    const [company,setCompany] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name,email,phone,address, password,role,company))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n                 <Tabs defaultActiveKey=\"home\" transition={false} id=\"noanim-tab-example\">\r\n  <Tab eventKey=\"home\" title=\"Buyer\" onSelect={()=>setRole('buyer')}>\r\n    <Form onSubmit={submitHandler}>\r\n    <div style={{'padding':'20px'}}></div>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n               \r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='mobile'>\r\n                    <Form.Label>Mobile No</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Mobile no'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              \r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n  </Tab>\r\n  <Tab eventKey=\"profile\" title=\"Seller\" onSelect={()=>setRole('seller')}>\r\n   <Form onSubmit={submitHandler}>\r\n    <div style={{'padding':'20px'}}></div>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n               \r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='mobile'>\r\n                    <Form.Label>Mobile No</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Mobile no'\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='company'>\r\n                    <Form.Label>Company</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Company'\r\n                        value={company}\r\n                        onChange={(e) => setCompany(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n              \r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n  </Tab>\r\n \r\n</Tabs>\r\n\r\n           \r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_CANCEL_REQUEST,\r\n    ORDER_CANCEL_SUCCESS,\r\n    ORDER_CANCEL_FAIL,\r\n\r\n    ORDER_RETURN_REQUEST,\r\n    ORDER_RETURN_SUCCESS,\r\n    ORDER_RETURN_FAIL,\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n               // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n           { 'order':order,'buyerId':userInfo.buyerId},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/order/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/myorders/${userInfo.buyerId}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const cancelOrder =(id,orderId)=>async(dispatch,getState) =>{\r\n     try {\r\n        dispatch({\r\n            type: ORDER_CANCEL_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/cancel/`,\r\n            {'orderedItemId':id,'orderId':orderId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_CANCEL_SUCCESS,\r\n            payload: true\r\n        })\r\n        //  const { data } = await axios.get(\r\n        //     `/api/order/${orderId}/`,\r\n        //     config\r\n        // )\r\n\r\n        // dispatch({\r\n        //     type: ORDER_DETAILS_SUCCESS,\r\n        //     payload: data\r\n        // })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CANCEL_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnOrder =(id,orderId)=>async(dispatch,getState) =>{\r\n     try {\r\n        dispatch({\r\n            type: ORDER_RETURN_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(\r\n            `/api/return/`,\r\n            {'orderedItemId':id,'orderId':orderId},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ORDER_RETURN_SUCCESS,\r\n            payload: true\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_RETURN_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [company,setCompany] = useState('')\r\n    const [address,setAddress] = useState('')\r\n    const [phone,setPhone] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n       \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success ) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails(userInfo.role=='buyer'?userInfo.buyerId:userInfo.role=='seller'?userInfo.sellerId:userInfo.adminId))\r\n                if(userInfo.role=='buyer')\r\n                {\r\n                   dispatch(listMyOrders())\r\n                }\r\n               \r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setAddress(user.address)\r\n                setCompany(user.role=='seller'&&user.company)\r\n                setPhone(user.phone)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': userInfo.role=='buyer'?user.buyerId:userInfo.role=='seller'?user.sellerId:user.adminId,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n                'address':address,\r\n                'company':company,\r\n                'phone':phone\r\n\r\n            }))\r\n             setPassword('')\r\n        setConfirmPassword('')\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row className='justify-content-center'>\r\n           {userInfo&& <Col md={userInfo.role=='buyer'?5:6}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                     <Form.Group controlId='phone'>\r\n                        <Form.Label>Mobile no</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Enter Mobile no'\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {userInfo.role=='seller'&&\r\n                          <Form.Group controlId='company'>\r\n                        <Form.Label>Company</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Enter Company'\r\n                            value={company}\r\n                            onChange={(e) => setCompany(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    }\r\n                        <Form.Group controlId='address'>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            as=\"textarea\"\r\n                            placeholder='Enter Address'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n           }\r\n\r\n           {userInfo && userInfo.role=='buyer'&& <Col md={7}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        {/* <th>Paid</th> */}\r\n                                        <th>Details</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order.orderId}>\r\n                                            <td>{order.orderId}</td>\r\n                                            <td>{order.orderedAt.substring(0, 10)}</td>\r\n                                            <td>&#8377;{order.totalAmount}</td>\r\n                                            {/* <td>{order.paid=='Yes' ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td> */}\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order.orderId}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )}\r\n            </Col>}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress,fetching } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(shippingAddress)\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress(address))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n           {fetching?<Loader/>: <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        as='textarea'\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const payment = useSelector(state => state.payment)\r\n    const shipping = useSelector(state=>state.shipping)\r\n    const {shippingAddress} = shipping\r\n    const { paymentMethod,getting } = payment\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentmethod, setPaymentMethod] = useState('Cash on Delivery')\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentmethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n           {getting?<Loader/>: <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n\r\n                      \r\n                         <Form.Check\r\n                            type='radio'\r\n                            label='Cash on Delivery'\r\n                            id='cod'\r\n                            name='paymentMethod'\r\n                            value=\"Cash on Delivery\"\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            checked\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                \r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>}\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { getCart, getPaymentMethod, getShippingAddress } from '../actions/cartActions'\r\nimport Loader from '../components/Loader'\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const{userInfo} = userLogin\r\n    const cart = useSelector(state => state.cart)\r\n    const shipping = useSelector(state=>state.shipping)\r\n    const payment = useSelector(state=>state.payment)\r\n    const {fetching,shippingAddress} = shipping\r\n    const [receiving,setReceiving] =useState(false)\r\n    const {getting,paymentMethod}  = payment\r\n    const {loading,cartItems} =cart\r\n    console.log(cartItems)\r\n    var itemsPrice = cartItems.reduce((acc, item) => acc + item.stockId.price * item.quantity, 0).toFixed(2)\r\n    var shippingPrice = (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    // var taxPrice = Number((0.082) * itemsPrice).toFixed(2)\r\n    var totalPrice = (Number(itemsPrice))\r\n    // + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n         if (!paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n        setReceiving(true)\r\n       dispatch(getCart())\r\n       dispatch(getShippingAddress())\r\n       dispatch(getPaymentMethod())\r\n        setReceiving(false)\r\n        console.log(cartItems)\r\n        if (success) {\r\n            history.push(`/order/${order.orderId}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [dispatch,success, history,receiving,userInfo])\r\n\r\n    const placeOrder = () => {\r\n       \r\n        dispatch(createOrder({\r\n            cartItems: cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n           itemsPrice: itemsPrice,\r\n           totalPrice: totalPrice,\r\n       }))\r\n       setReceiving(false)\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            {!cartItems||loading||fetching||getting||receiving?<Loader/>: <Row>\r\n                 <Col md={8}>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                   {shippingAddress} \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                             {cartItems?cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cartItems.map(item => (\r\n                                         <ListGroup.Item key={item.stockId.stockId}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.quantity} X &#8377;{item.stockId.price} = &#8377;{(item.quantity * item.stockId.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item> \r\n                                        ))}\r\n                                    </ListGroup>\r\n                                ):<Loader/>} \r\n                        </ListGroup.Item>  \r\n\r\n                    </ListGroup> \r\n\r\n                </Col> \r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>&#8377;{itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>&#8377;{shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {/* <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>&#8377;{taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item> */}\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>&#8377;{totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n\r\n                           {error&& <ListGroup.Item>\r\n                                 <Message variant='danger'>{error}</Message>\r\n                            </ListGroup.Item>}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                    disabled={receiving}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder,cancelOrder,returnOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET,ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const cancelorder = useSelector(state=>state.cancelOrder)\r\n    const returnorder = useSelector(state=>state.returnOrder)\r\n    const{getting,succeed,mistake} = returnorder\r\n    const {wrong,fetching,success}  = cancelorder\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo,loggingOut } = userLogin\r\n    const [receiving,setFetching] = useState(false)\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.items.reduce((acc, item) => acc + item.amount * item.quantity, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // if (!order  || order.orderId !== Number(orderId)) {\r\n           dispatch({type:ORDER_DETAILS_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n        \r\n        // }\r\n    }, [dispatch,userInfo,receiving,cancelorder,returnorder])\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n    const cancelOrderHandler = (orderedItemId,orderId)=> {\r\n         setFetching(true)\r\n        dispatch(cancelOrder(orderedItemId,orderId))\r\n        dispatch({type:ORDER_DETAILS_RESET})\r\n        dispatch(getOrderDetails(orderId))\r\n        setFetching(false)\r\n    }\r\n    const returnOrderHandler = (orderedItemId,orderId)=>{\r\n        dispatch(returnOrder(orderedItemId,orderId))\r\n        dispatch(getOrderDetails(orderId))\r\n    }\r\n    return loading||fetching||getting||receiving || loggingOut ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <h1>OrderId: {order.orderId}</h1>\r\n                    <Row>\r\n                        <Col md={9}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n                                    <p><strong>Name: </strong> {order.buyerId.name}</p>\r\n                                    <p><strong>Email: </strong><a href={`mailto:${order.buyerId.email}`}>{order.buyerId.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.address}\r\n                                    </p>\r\n\r\n                                    {/* {order.status=='Delivered' ? (\r\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Delivered</Message>\r\n                                        )} */}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {/* {order.paid=='Yes' ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )} */}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.items.length === 0 ? <Message variant='info'>\r\n                                        Order is empty\r\n                            </Message> : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.items.map(item => (\r\n                                                    <ListGroup.Item key={item.orderedItemId}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.stockId.productId.image} alt={item.stockId.productId.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.stockId.stockId}`}>{item.stockId.productId.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={3}>\r\n                                                                {item.quantity} X &#8377;{item.amount} = &#8377;{(item.quantity * item.amount).toFixed(2)}\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                {item.status}\r\n                                                            </Col>\r\n                                                            <Col>\r\n                                                                 {item.status=='Delivered'? (<Button\r\n                                                                    type='button'\r\n                                                              className='btn-block' onClick={()=>returnOrderHandler(item.orderedItemId,order.orderId)} >\r\n                                                                       Return Order\r\n                                                                        </Button>):item.status!='Cancelled'&&item.status!='In Return'&&item.status!='Returned'&&\r\n                                                                       ( <Button\r\n                                                                           type='button'\r\n                                                                         className='btn-block'onClick={()=>cancelOrderHandler(item.orderedItemId,order.orderId)} >\r\n                                                                            Cancel Order\r\n                                                                        </Button>)}\r\n\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items:</Col>\r\n                                            <Col>&#8377;{order.totalAmount}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>&#8377;{0}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {/* <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${o}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item> */}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total:</Col>\r\n                                            <Col>&#8377;{order.totalAmount}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n\r\n{/*                                 \r\n                                    {order.paymentMethod=='Cash on Delivery'&&\r\n                                    ( <ListGroup.Item>\r\n                           <Button\r\n                            type='button'\r\n                            className='btn-block' >\r\n                        Cancel Order\r\n                        </Button>\r\n                    </ListGroup.Item>)} */}\r\n                                </ListGroup>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo,loggingOut } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.role=='admin') {\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order.orderId}>\r\n                                        <td>{order.orderId}</td>\r\n                                        <td>{order.buyerId.name}</td>\r\n                                        <td>{order.orderedAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalAmount}</td>\r\n\r\n                                        {/* <td>{order.paid=='Yes' ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td> */}\r\n\r\n                                        {/* <td>{order.status=='delivered' ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}\r\n                                        </td> */}\r\n\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order.orderId}`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { verifiedSeller } from '../actions/adminActions'\r\nimport { removeSeller } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction VerifiedSellers ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.verifiedSellers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, verifiedSellers} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(verifiedSeller())\r\n    },[dispatch,userInfo])\r\n    console.log(verifiedSellers)\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :verifiedSellers\r\n                       ? (<div>\r\n                        <h1>Verified Sellers</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Company</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {verifiedSellers.map(data => (\r\n                                    <tr key={data.sellerId}>\r\n                                         <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>{data.company}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(removeSeller(data.sellerId))} >Remove</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>HOME</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerifiedSellers","import axios from 'axios'\r\nimport {\r\n    VERIFIED_SELLERS_REQUEST,\r\n    VERIFIED_SELLERS_SUCCESS,\r\n    VERIFIED_SELLERS_FAIL,\r\n    UNVERIFIED_SELLERS_REQUEST,\r\n    UNVERIFIED_SELLERS_SUCCESS,\r\n    UNVERIFIED_SELLERS_FAIL,\r\n    ADMINS_LIST_SUCCESS,\r\n    ADMINS_LIST_REQUEST,\r\n    ADMINS_LIST_FAIL,\r\n    RETURN_PRODUCTS_SUCCESS,\r\n    RETURN_PRODUCTS_REQUEST,\r\n    RETURN_PRODUCTS_FAIL,\r\n    RETURN_PRODUCTS_RESET,\r\n    DELIVER_PRODUCTS_SUCCESS,\r\n    DELIVER_PRODUCTS_REQUEST,\r\n    DELIVER_PRODUCTS_FAIL,\r\n    DELIVER_PRODUCTS_RESET\r\n    \r\n} from '../constants/adminConstants'\r\n\r\nexport const verifiedSeller = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/verifiedsellers/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const unverifiedSeller = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n      \r\n        const { data } = await axios.get(\r\n            '/api/unverifiedsellers/',\r\n            config\r\n        )\r\n       \r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const verifySeller = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n      \r\n        const { data } = await axios.get(\r\n            `/api/verifyseller/${sid}/`,\r\n            config\r\n        )\r\n       \r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UNVERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeSeller = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/removeseller/${sid}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: VERIFIED_SELLERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const adminlist = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/adminslist/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeAdmin = (aid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/removeadmin/${aid}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addAdmin = (name,email,phone) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADMINS_LIST_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/addadmin/`,\r\n            {'email':email,'name':name,'phone':phone},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADMINS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADMINS_LIST_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:DELIVER_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/deliverproducts/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverParticularProduct = (oid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:DELIVER_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/deliverproduct/${oid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELIVER_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnProduct = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:RETURN_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/returnproducts/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const returnParticularProduct = (oid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type:RETURN_PRODUCTS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/returnproduct/${oid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n   \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RETURN_PRODUCTS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { unverifiedSeller } from '../actions/adminActions'\r\nimport { verifySeller } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\nfunction UnverifiedSellers ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.unverifiedSellers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const {error,loading,unverifiedSellers} = data\r\n\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(unverifiedSeller())\r\n    },[dispatch,userInfo])\r\n    console.log(unverifiedSellers)\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :unverifiedSellers\r\n                       ? (\r\n                           <div>\r\n                               <h1>Unverified Sellers</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th> Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Company</th>\r\n                                    <th>Verify</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {unverifiedSellers.map(data => (\r\n                                    <tr key={data.sellerId}>\r\n                                        <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>{data.company}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(verifySeller(data.sellerId))} >Approve</Button>\r\n                                        </td>\r\n                                     </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                      :\r\n                      <div>\r\n                           <h1>Home</h1>\r\n                       </div>\r\n                    }\r\n                    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnverifiedSellers","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { deliverProduct } from '../actions/adminActions'\r\nimport { deliverParticularProduct } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction DeliverProducts ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.deliverProducts)\r\n    const {error,loading, deliverProducts} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(deliverProduct())\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :deliverProducts\r\n                       ? (<div>\r\n                        <h1>Placed Orders</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>email</th>\r\n                                    <th>Deliver</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {deliverProducts.map(data => (\r\n                                    <tr key={data.orderedItemId}>\r\n                                        <td>{data.orderedItemId}</td>\r\n                                        <td>{data.orderId.buyerId.name}</td>\r\n                                        <td>{data.orderId.buyerId.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(deliverParticularProduct(data.orderedItemId))} >Delivered</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DeliverProducts","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { returnProduct } from '../actions/adminActions'\r\nimport { returnParticularProduct } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction ReturnProducts ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.returnProducts)\r\n    const {error,loading, returnProducts} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        dispatch(returnProduct())\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :returnProducts\r\n                       ? (<div>\r\n                        <h1>Delivered Orders</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Return</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {returnProducts.map(data => (\r\n                                    <tr key={data.orderedItemId}>\r\n                                        <td>{data.orderedItemId}</td>\r\n                                         <td>{data.orderId.buyerId.name}</td>\r\n                                        <td>{data.orderId.buyerId.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(returnParticularProduct(data.orderedItemId))} >Returned</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReturnProducts","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addNewStock } from '../actions/sellerActions'\r\nimport { addNewParticularStock } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction AddOldStocks ({history}){\r\n    const dispatch = useDispatch()\r\n    const [Name,setName]=useState('')\r\n    const [Brand,setBrand]=useState('')\r\n    const [Category,setCategory]=useState('Mobiles')\r\n    const [Details,setDetails]=useState('')\r\n    const [Price,setPrice]=useState('')\r\n    const [Quantity,setQuantity]=useState('')\r\n    const [selectedFile, setSelectedFile] = useState();\r\n   \tconst [isFilePicked, setIsFilePicked] = useState(false);\r\n    const data = useSelector(state => state.addNewStocks)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n     const {error,loading, addNewStocks} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        dispatch(addNewStock())\r\n    },[dispatch,userInfo])\r\n    const changeHandler = (event) => {\r\n\t\tsetSelectedFile(event.target.files[0])\r\n\t\tsetIsFilePicked(true)\r\n\t}\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addNewParticularStock(userInfo.sellerId,Name,Brand,Category,Details,Price,Quantity,selectedFile))\r\n        setName('')\r\n        setBrand('')\r\n        setCategory('Mobiles')\r\n        setSelectedFile(null)\r\n        setIsFilePicked(false)\r\n        setDetails('')\r\n        setPrice('')\r\n        setQuantity('')\r\n    }\r\n    return (\r\n        <div>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :addNewStocks\r\n                       ? (<div>\r\n                        <FormContainer>\r\n                           <Form onSubmit={submitHandler}>\r\n                        <Form.Group >\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Name\" value={Name}\r\n                          onChange={(e) => setName(e.target.value)} />\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Brand\"  value={Brand}\r\n                          onChange={(e) => setBrand(e.target.value)} />\r\n                           <Form.Group >\r\n                             <Form.Label>Image</Form.Label>\r\n                            {isFilePicked ? (\r\n\t\t\t                        <Form.Control type=\"text\" placeholder=\"selected file details\" value={selectedFile.name}\r\n                           />\r\n\t\t                         \t) : (\r\n\t                \t\t\t<p>Select a file to show details</p>\r\n\t                      \t\t)}\r\n                      \r\n                        <Form.File label=\"Choose File\" custom  onChange ={(e)=>changeHandler(e)} ></Form.File>\r\n                      </Form.Group>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control as=\"select\"  value={Category}\r\n                          onChange={(e) => setCategory(e.target.value)} >\r\n                        <option>Mobiles</option>\r\n                        <option>Laptops</option>\r\n                        <option>Shoes</option>\r\n                        <option>Televisions</option>\r\n                        </Form.Control>\r\n                        <Form.Label>Details</Form.Label>\r\n                        <Form.Control as=\"textarea\" type=\"text\" placeholder=\"Details\"  value={Details}\r\n                          onChange={(e) => setDetails(e.target.value)} />\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Price\"  value={Price}\r\n                          onChange={(e) => setPrice(e.target.value)}/>\r\n\r\n                        <Form.Label>Quantity</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Quantity\"  value={Quantity}\r\n                          onChange={(e) => setQuantity(e.target.value)}/>\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                         Add Stock\r\n                        </Button>\r\n                </Form>\r\n                </FormContainer>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>No Items</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOldStocks\r\n\r\n\r\n\r\n\r\n ","import axios from 'axios'\r\nimport {\r\n    ADDSTOCKS_NEW_SUCCESS,\r\n    ADDSTOCKS_NEW_REQUEST,\r\n    ADDSTOCKS_NEW_FAIL,\r\n    ADDSTOCKS_NEW_RESET,\r\n    ADDSTOCKS_OLD_SUCCESS,\r\n    ADDSTOCKS_OLD_REQUEST,\r\n    ADDSTOCKS_OLD_FAIL,\r\n    ADDSTOCKS_OLD_RESET,\r\n    USER_ORDERS_PLACED_SUCCESS,\r\n    USER_ORDERS_PLACED_REQUEST,\r\n    USER_ORDERS_PLACED_FAIL,\r\n    USER_ORDERS_PLACED_RESET,\r\n    ADDOFFERS_SUCCESS,\r\n    ADDOFFERS_REQUEST,\r\n    ADDOFFERS_FAIL,\r\n    ADDOFFERS_RESET,\r\n    REMOVEOFFERS_SUCCESS,\r\n    REMOVEOFFERS_REQUEST,\r\n    REMOVEOFFERS_FAIL,\r\n    REMOVEOFFERS_RESET\r\n} from '../constants/sellerConstants'\r\n\r\nexport const addNewStock = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_SUCCESS,\r\n            payload:[]\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNewParticularStock = (sid,Name,Brand,Category,Details,Price,Quantity,file) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n       const {data} =  await axios.post(\r\n            `/api/addnewparticularstock/${sid}`,\r\n            {'Name':Name,'Brand':Brand,'Category':Category,'Details':Details,'Price':Price,'Quantity':Quantity},\r\n            config\r\n        )\r\n        const configuration ={\r\n            headers:{\r\n                'content-type':'multipart/form-data'\r\n            }\r\n        }\r\n        console.log(data)\r\n        const productId = data.productId.productId\r\n        const formData = new FormData();\r\n\r\n\t\tformData.append('file', file)\r\n        await axios.post(`/api/image/${productId}`,formData,configuration)\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_SUCCESS,\r\n            payload: []\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_NEW_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOldStock = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/addoldstocks/${sid}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOldParticularStock = (sid,skid,quantity) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/addoldparticularstock/${sid}/${skid}/${quantity}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDSTOCKS_OLD_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const userOrderRequest = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/userorderrequests/${sid}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n      \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const processRequest = (sid,oid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/processrequest/${sid}/${oid}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n     \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ORDERS_PLACED_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addOffer = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDOFFERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/addoffers/${sid}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ADDOFFERS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDOFFERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addParticularOffer = (sid,skid,offer) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: ADDOFFERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/addparticularoffer/${sid}/${skid}/${offer}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: ADDOFFERS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ADDOFFERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeOffer = (sid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVEOFFERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/removeoffers/${sid}`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: REMOVEOFFERS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REMOVEOFFERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeParticularOffer = (sid,ofid) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: REMOVEOFFERS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n        const { data } = await axios.get(\r\n            `/api/removeparticularoffer/${sid}/${ofid}/`,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: REMOVEOFFERS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REMOVEOFFERS_FAIL,\r\n            payload:error.response.data.message\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addOldStock } from '../actions/sellerActions'\r\nimport { addOldParticularStock } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction AddOldStocks ({history}){\r\n    const dispatch = useDispatch()\r\n    const [StockId,setStockId]=useState('')\r\n    const [Quantity,setQuantity]=useState('')\r\n    const data = useSelector(state => state.addOldStocks)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n     const {error,loading, addOldStocks} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        if(userInfo){\r\n            dispatch(addOldStock(userInfo.sellerId))\r\n        }\r\n    },[dispatch,userInfo])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addOldParticularStock(userInfo.sellerId,StockId,Quantity))\r\n        setStockId('')\r\n        setQuantity('')\r\n    }\r\n    return (\r\n        <div>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :addOldStocks\r\n                       ? (<div>\r\n                           <Container>\r\n                           <Form onSubmit={submitHandler} >\r\n                           <Form.Group controlId='stockId' >\r\n                          <Form.Control\r\n                          type=\"text\" placeholder=\"StockId\" \r\n                          value={StockId}\r\n                          onChange={(e) => setStockId(e.target.value)}/>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='quantity' >\r\n                         <Form.Control \r\n                        type=\"text\" placeholder=\"Quantity\"\r\n                        value={Quantity}\r\n                        onChange={(e) => setQuantity(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Update Stock </Button>\r\n                          </Form>\r\n                            </Container>\r\n                        <h1>Existing Stocks</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>StockId</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Last Updated</th>\r\n                                    <th>Available Quantity</th>\r\n                                    <th>Total Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {addOldStocks.map(data => (\r\n                                    <tr key={data.stockId}>\r\n                                        <td>{data.stockId}</td>\r\n                                        <td>{data.productId.name}</td>\r\n                                        <td>{data.price}</td>\r\n                                        <td>{data.dateOfAddition.substring(0,10)}</td>\r\n                                        <td>{data.availableQuantity}</td>\r\n                                        <td>{data.totalQuantity}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>No Items</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOldStocks\r\n\r\n\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { adminlist } from '../actions/adminActions'\r\nimport { removeAdmin } from '../actions/adminActions'\r\nimport { addAdmin } from '../actions/adminActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction Admins ({history}){\r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.adminsList)\r\n    const {error,loading, adminsList} = data\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        dispatch(adminlist())\r\n    },[dispatch,userInfo])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addAdmin(name,email,phone))\r\n        setName('')\r\n        setEmail('')\r\n        setPhone('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :adminsList\r\n                       ? (<div>\r\n                            <Container>\r\n                           <Form onSubmit={submitHandler} >\r\n                           <Form.Group controlId='name' >\r\n                          <Form.Control\r\n                          type=\"text\" placeholder=\"Name\" \r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}/>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='email' >\r\n                         <Form.Control \r\n                        type=\"text\" placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group controlId='phone' >\r\n                        <Form.Control \r\n                        type=\"text\" placeholder=\"Phone number\"\r\n                        value={phone}\r\n                        onChange={(e) => setPhone(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Add Admin </Button>\r\n                          </Form>\r\n                            </Container>\r\n\r\n                        <h1>Admins</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {adminsList.map(data => (\r\n                                    <tr key={data.adminId}>\r\n                                         <td>{data.name}</td>\r\n                                        <td>{data.email}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(removeAdmin(data.adminId))} >Remove</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                           <h1>home</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Admins","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { userOrderRequest } from '../actions/sellerActions'\r\nimport { processRequest } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction UserOrderRequests ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.userOrderRequests)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, userOrderRequests} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        if(userInfo){\r\n        dispatch(userOrderRequest(userInfo.sellerId))\r\n        }\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :userOrderRequests\r\n                       ? (<div>\r\n                        <h1>User Orders</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Product Name</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Date</th>\r\n                                    <th>Process</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {userOrderRequests.map(data => (\r\n                                    <tr key={data.orderedItemId}>\r\n                                        <td>{data.stockId.productId.name}</td>\r\n                                        <td>{data.orderId.buyerId.name}</td>\r\n                                        <td>{data.orderId.buyerId.email}</td>\r\n                                        <td>{data.finalDate.substring(0,10)}</td>\r\n                                        <td>\r\n                                            <Button  onClick={()=>dispatch(processRequest(userInfo.sellerId,data.orderedItemId))} >Process</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>No Items</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserOrderRequests\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container,Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { addOffer } from '../actions/sellerActions'\r\n import { addParticularOffer } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction AddOffers ({history}){\r\n    const dispatch = useDispatch()\r\n    const [StockId,setStockId]=useState('')\r\n    const [Offer,setOffer]=useState('')\r\n    const data = useSelector(state => state.addOffers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo,loggingOut} = userLogin\r\n     const {error,loading, addOffers} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        if(userInfo){\r\n        dispatch(addOffer(userInfo.sellerId))\r\n        }\r\n    },[dispatch,userInfo])\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(addParticularOffer(userInfo.sellerId,StockId,Offer))\r\n        setStockId('')\r\n        setOffer('')\r\n    }\r\n    return (\r\n        <div>\r\n            {loading||loggingOut\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :addOffers\r\n                       ? (<div>\r\n                           <Container>\r\n                           <Form onSubmit={submitHandler} >\r\n                           <Form.Group controlId='stockId' >\r\n                          <Form.Control\r\n                          type=\"text\" placeholder=\"StockId\" \r\n                          value={StockId}\r\n                          onChange={(e) => setStockId(e.target.value)}/>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='offer' >\r\n                         <Form.Control \r\n                        type=\"text\" placeholder=\"Percent\"\r\n                        value={Offer}\r\n                        onChange={(e) => setOffer(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\"> Add Offer </Button>\r\n                          </Form>\r\n                            </Container>\r\n                        <h1>Existing Stocks</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>StockId</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {addOffers.map(data => (\r\n                                    <tr key={data.stockId}>\r\n                                         <td>{data.stockId}</td>\r\n                                         <td>{data.productId.name}</td>\r\n                                        <td>{data.price}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>No Items</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddOffers\r\n\r\n\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button,Table, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { removeOffer } from '../actions/sellerActions'\r\nimport { removeParticularOffer } from '../actions/sellerActions'\r\nimport HomeScreen from './HomeScreen'\r\n\r\n\r\nfunction RemoveOffers ({history}){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state => state.removeOffers)\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n     const {error,loading, removeOffers} = data\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/')\r\n        }\r\n        if(userInfo){\r\n        dispatch(removeOffer(userInfo.sellerId))\r\n        }\r\n    },[dispatch,userInfo])\r\n    return (\r\n        <div>\r\n            {loading\r\n                ? (<Loader />)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    :removeOffers\r\n                       ? (<div>\r\n                        <h1>Offers</h1>\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Stock Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>offer Percent</th>\r\n                                    <th>Remove</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                             <tbody>\r\n                                {removeOffers.map(data => (\r\n                                    <tr key={data.offerId}>\r\n                                        <td>{data.stockId.stockId}</td>       \r\n                                        <td>{data.stockId.productId.name}</td>\r\n                                        <td>{data.stockId.price}</td>\r\n                                        <td>{data.discountPercent}</td>\r\n                                        <td>\r\n                                            <Button onClick={()=>dispatch(removeParticularOffer(userInfo.sellerId,data.offerId))} >Remove</Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody> \r\n                        </Table>\r\n                        </div>\r\n                    )\r\n                       :<div>\r\n                          <h1>No Items</h1>\r\n                       </div>\r\n                    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RemoveOffers","import { Container } from 'react-bootstrap'\r\nimport { HashRouter as Router, Route,useHistory } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\nimport LoginScreen from './screens/LoginScreen'\r\nimport RegisterScreen from './screens/RegisterScreen'\r\nimport ProfileScreen from './screens/ProfileScreen'\r\nimport ShippingScreen from './screens/ShippingScreen'\r\nimport PaymentScreen from './screens/PaymentScreen'\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\r\nimport OrderScreen from './screens/OrderScreen'\r\nimport OrderListScreen from './screens/OrderListScreen'\r\nimport VerifiedSellers from './screens/VerifiedSellers' \r\nimport UnverifiedSellers from './screens/UnverifiedSellers' \r\nimport DeliverProducts from './screens/DeliverProducts' \r\nimport ReturnProducts from './screens/ReturnProducts' \r\nimport AddNewStocks from './screens/AddNewStocks' \r\nimport AddOldStocks from './screens/AddOldStocks' \r\nimport Admins from './screens/Admins'\r\nimport UserOrderRequests from './screens/UserOrderRequests'\r\nimport AddOffers from './screens/AddOffers'\r\nimport RemoveOffers from './screens/RemoveOffers'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {useState,useEffect} from 'react'\r\nimport { login } from './actions/userActions'\r\nfunction App() {\r\n  const userLogin = useSelector(state =>state.userLogin)\r\n  const {userInfo} = userLogin\r\n  const dispatch = useDispatch()\r\n  let history = useHistory();\r\n\r\n  // useEffect(()=>{\r\n  //  if(!userInfo||userInfo.role)\r\n  //  {\r\n  //    dispatch(login('','',''))\r\n     \r\n  //  }\r\n  //  console.log(userInfo)\r\n   \r\n  // },[dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <Header history={history} />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/verifiedsellers' component={VerifiedSellers} />\r\n          <Route path='/unverifiedsellers' component={UnverifiedSellers} />\r\n          <Route path='/admins' component={Admins} /> \r\n          <Route path='/returnproducts' component={ReturnProducts} />\r\n          <Route path='/deliverproducts' component={DeliverProducts} />\r\n          <Route path='/addoldstocks' component={AddOldStocks} />\r\n          <Route path='/addnewstocks' component={AddNewStocks} />\r\n          <Route path='/userorderrequests' component={UserOrderRequests} />\r\n          <Route path='/addoffers' component={AddOffers} />\r\n          <Route path='/removeoffers' component={RemoveOffers} />\r\n     \r\n\r\n\r\n          <Route path='/admin/orderlist' component={OrderListScreen} /> \r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}